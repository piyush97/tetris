var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.675,1,2.194]],["body/controllers/AppController.html",[0,2.82,1,3.694,2,1.484,3,0.255,4,0.255,5,0.213,6,3.844,7,0.65,8,1.815,9,6.27,10,2.132,11,0.027,12,0.833,13,4.558,14,1.484,15,1.815,16,0.536,17,0.77,18,3.31,19,3.844,20,0.255,21,0.172,22,2.132,23,2.741,24,1.592,25,4.558,26,0.022,27,0.022]],["title/modules/AppModule.html",[28,0.605,29,2.194]],["body/modules/AppModule.html",[1,3.949,2,1.789,3,0.249,4,0.249,5,0.208,11,0.027,16,0.574,17,0.752,18,3.579,19,3.756,20,0.249,21,0.168,26,0.022,27,0.022,28,1.004,29,4.313,30,1.556,31,1.919,32,3.756,33,3.756,34,2.213,35,1.794,36,1.794,37,4.455,38,2.382,39,4.455,40,1.931]],["title/injectables/AppService.html",[18,1.82,41,0.704]],["body/injectables/AppService.html",[3,0.265,4,0.265,5,0.221,7,0.675,8,1.856,11,0.027,12,0.865,14,1.541,15,1.856,16,0.456,17,0.799,18,3.135,20,0.265,21,0.178,24,1.653,26,0.023,27,0.023,41,1.213,42,1.906,43,3.99,44,5.355,45,4.732,46,3.136,47,3.99]],["title/modules/BlockGeneratorModule.html",[28,0.605,48,2.194]],["body/modules/BlockGeneratorModule.html",[2,1.436,3,0.247,4,0.247,5,0.206,11,0.027,16,0.597,17,0.745,20,0.247,21,0.166,26,0.022,27,0.022,28,0.998,30,1.541,31,1.907,34,2.2,35,1.777,36,1.777,38,2.367,40,1.912,48,4.303,49,3.72,50,3.72,51,3.036,52,4.411,53,2.063,54,1.654,55,1.777,56,3.72,57,4.411,58,3.72]],["title/injectables/BlockGeneratorService.html",[41,0.704,51,1.548]],["body/injectables/BlockGeneratorService.html",[3,0.192,4,0.192,5,0.16,7,0.489,8,1.51,11,0.028,12,1.029,14,1.711,16,0.584,17,0.579,20,0.192,21,0.129,24,1.62,26,0.018,27,0.018,41,0.987,42,1.381,51,2.169,54,1.285,55,1.868,59,2.89,60,3.484,61,5.632,62,5.632,63,5.632,64,2.01,65,3.428,66,4.749,67,3.428,68,1.486,69,1.116,70,0.729,71,1.486,72,4.638,73,3.428,74,3.432,75,3.428,76,3.428,77,2.061,78,2.89,79,1.885,80,2.89,81,2.536,82,1.486,83,2.272,84,3.428,85,3.428,86,1.381,87,3.428,88,3.428,89,2.061,90,2.89,91,3.074,92,3.428,93,2.272,94,3.428,95,3.428,96,3.428,97,3.428,98,2.788,99,2.89,100,3.428,101,4.638,102,4.638,103,3.428,104,3.428,105,4.638,106,2.89,107,3.428,108,3.428]],["title/classes/GameConstants.html",[21,0.125,79,1.82]],["body/classes/GameConstants.html",[3,0.053,4,0.053,5,0.044,7,0.135,11,0.028,12,1.103,15,1.408,20,0.053,21,0.036,23,4.041,26,0.007,27,0.007,46,1.109,47,1.41,70,1.295,79,2.967,89,2.933,91,2.608,98,1.631,106,1.41,109,0.628,110,0.798,111,0.25,112,2.468,113,1.41,114,0.508,115,5.737,116,2.247,117,4.143,118,2.247,119,2.247,120,2.247,121,2.247,122,2.247,123,2.247,124,2.247,125,2.247,126,2.247,127,2.247,128,2.247,129,2.247,130,2.247,131,2.247,132,2.247,133,2.247,134,2.247,135,2.247,136,2.247,137,2.247,138,2.247,139,2.247,140,2.247,141,2.247,142,2.247,143,2.247,144,2.247,145,2.247,146,2.247,147,2.247,148,2.247,149,2.247,150,2.736,151,1.894,152,4.095,153,4.465,154,1.673,155,1.798,156,1.673,157,1.673,158,1.673,159,1.673,160,1.673,161,1.673,162,0.947,163,1.673,164,1.673,165,1.673,166,1.673,167,1.673,168,1.673,169,1.41,170,1.673,171,1.673,172,0.947,173,1.673,174,1.673,175,1.41,176,0.947,177,1.41,178,1.006,179,2.145,180,1.673,181,0.947,182,1.492,183,2.366,184,4.326,185,0.947,186,1.673,187,1.673,188,1.673,189,3.935,190,3.935,191,3.318,192,0.947,193,3.421,194,1.673,195,2.712,196,1.673,197,0.947,198,0.947,199,0.947,200,2.712,201,0.947,202,0.947,203,1.673,204,0.947,205,0.947,206,1.673,207,0.947,208,0.947,209,1.673,210,0.947,211,2.712,212,0.947,213,1.798,214,0.947,215,1.673,216,0.947,217,1.673,218,0.947,219,2.712,220,0.947,221,1.41,222,0.947,223,0.947,224,0.947,225,1.492,226,1.673,227,1.41,228,2.712,229,0.947,230,1.673,231,2.712,232,1.673,233,0.947,234,2.608,235,2.712,236,1.673,237,1.673,238,1.673,239,3.421,240,0.947,241,1.407,242,2.712,243,0.947,244,2.712,245,1.673,246,1.673,247,1.238,248,2.712,249,1.238,250,0.947,251,1.41,252,3.935,253,0.947,254,1.109,255,2.712,256,2.531,257,0.947,258,1.673,259,1.673,260,1.673,261,2.287,262,0.674,263,0.947,264,0.947,265,0.947,266,1.673,267,1.673,268,1.673,269,1.673,270,0.846,271,1.238,272,1.673,273,0.947,274,1.202,275,4.465]],["title/controllers/GameController.html",[0,1.675,276,2.194]],["body/controllers/GameController.html",[0,2.798,2,1.068,3,0.184,4,0.184,5,0.153,7,0.468,8,1.465,10,2.402,11,0.028,12,0.939,14,1.673,16,0.433,17,0.554,20,0.252,21,0.169,22,1.534,23,1.972,24,2.09,26,0.018,27,0.018,77,3.922,86,2.627,111,0.866,112,2.277,234,3.967,247,4.429,249,4.429,274,1.176,276,4.138,277,2.766,278,4.5,279,3.28,280,4.429,281,4.5,282,3.28,283,4.5,284,3.28,285,1.56,286,3.28,287,3.28,288,3.28,289,3.28]],["title/modules/GameModule.html",[28,0.605,290,2.194]],["body/modules/GameModule.html",[2,1.605,3,0.21,4,0.21,5,0.175,11,0.028,16,0.633,17,0.634,20,0.21,21,0.141,26,0.02,27,0.02,28,0.901,30,1.312,31,1.722,34,1.986,35,1.513,36,1.513,38,2.137,40,2.137,53,1.757,54,1.408,55,1.986,81,2.78,241,1.497,262,1.986,270,2.495,276,3.647,285,1.977,290,4.356,291,3.168,292,3.757,293,3.168,294,2.174,295,3.757,296,3.757,297,3.757,298,1.064,299,2.066,300,3.757,301,1.757,302,1.901,303,3.168,304,3.168]],["title/injectables/GameService.html",[41,0.704,285,1.005]],["body/injectables/GameService.html",[3,0.101,4,0.101,5,0.084,7,0.258,8,0.941,11,0.028,12,1.081,14,1.801,15,1.801,16,0.433,17,0.305,20,0.162,21,0.155,22,0.846,24,2.132,26,0.011,27,0.011,28,0.528,41,0.615,42,0.729,64,0.784,68,1.252,69,0.941,70,0.958,71,1.252,77,2.885,79,0.995,80,1.526,86,2.227,93,1.199,111,0.478,112,2.909,114,0.877,150,2.138,155,2.73,179,2.307,182,2.877,225,2.877,234,3.467,241,1.997,247,3.551,249,3.551,270,1.462,271,2.138,274,1.266,280,3.551,285,1.773,294,1.676,301,0.846,305,1.526,306,2.138,307,3.871,308,4.119,309,3.473,310,4.119,311,4.119,312,4.119,313,4.119,314,3.042,315,1.809,316,1.809,317,1.809,318,1.809,319,1.809,320,1.809,321,1.809,322,3.665,323,1.809,324,1.809,325,1.809,326,1.809,327,1.526,328,1.809,329,2.669,330,1.809,331,1.809,332,1.809,333,2.391,334,1.809,335,1.809,336,2.436,337,2.084,338,1.809,339,1.526,340,1.809,341,1.809,342,1.809,343,1.809,344,4.119,345,1.809,346,1.809,347,1.809,348,4.119,349,1.809,350,2.889,351,2.889,352,1.809,353,1.809,354,1.809,355,1.809,356,1.809,357,1.809,358,1.809,359,1.809]],["title/modules/GameZone.html",[28,0.605,360,1.99]],["body/modules/GameZone.html",[2,1.244,3,0.214,4,0.214,5,0.178,11,0.027,16,0.622,17,0.645,20,0.214,21,0.144,26,0.02,27,0.02,28,0.911,30,1.334,31,1.741,34,2.007,35,1.539,36,1.539,38,2.16,40,2.16,53,1.786,54,1.432,241,1.16,262,2.007,285,1.899,294,2.184,298,1.412,299,2.101,301,1.786,302,1.933,360,4.016,361,3.221,362,3.82,363,3.221,364,3.054,365,3.82,366,2.532,367,2.827,368,1.933,369,2.532]],["title/injectables/HoldZone.html",[41,0.704,370,1.99]],["body/injectables/HoldZone.html",[3,0.218,4,0.218,5,0.182,7,0.556,8,1.644,11,0.028,12,1.024,14,1.644,16,0.486,17,0.658,20,0.218,21,0.147,22,1.822,24,2.069,26,0.02,27,0.02,41,1.074,42,1.569,64,1.689,68,1.689,69,1.269,70,0.829,71,1.689,112,2.555,227,4.257,234,3.346,241,1.533,274,1.156,285,1.91,368,1.972,370,3.562,371,3.285,372,4.995,373,5.924,374,2.883,375,3.896,376,3.896,377,3.736,378,3.896,379,5.048,380,3.896,381,3.896]],["title/modules/HoldZoneModule.html",[28,0.605,382,2.194]],["body/modules/HoldZoneModule.html",[2,1.24,3,0.213,4,0.213,5,0.178,11,0.027,16,0.622,17,0.643,20,0.213,21,0.143,26,0.02,27,0.02,28,0.909,30,1.33,31,1.737,34,2.004,35,1.534,36,1.534,38,2.156,40,2.156,53,1.781,54,1.428,241,1.157,285,1.898,294,2.183,298,1.409,299,2.095,301,1.781,302,1.928,364,2.922,366,2.525,368,1.928,369,2.525,370,3.757,382,4.426,383,3.212,384,3.81,385,3.212,386,3.81,387,3.81]],["title/interfaces/IScreen.html",[333,2.194,388,1.99]],["body/interfaces/IScreen.html",[3,0.175,4,0.175,5,0.146,7,0.446,8,1.416,11,0.028,12,0.795,14,1.416,15,2.009,16,0.301,20,0.175,26,0.017,27,0.017,68,1.354,69,1.017,70,1.333,71,1.354,89,3.255,112,2.201,114,1.321,150,3.219,177,3.668,178,2.615,179,2.459,182,3.446,183,3.544,225,3.446,241,1.947,274,1.303,301,1.46,307,4.006,309,4.565,314,3.668,322,2.883,327,3.668,329,3.219,333,4.009,337,1.58,388,1.877,389,2.311,390,2.633,391,3.123,392,4.35,393,4.35,394,5.006,395,3.123,396,5.414,397,4.35,398,4.35]],["title/interfaces/IShape.html",[388,1.99,399,2.194]],["body/interfaces/IShape.html",[3,0.152,4,0.152,5,0.127,7,0.389,11,0.028,15,1.939,20,0.152,26,0.016,27,0.016,46,1.806,55,2.444,69,1.835,70,1.384,89,3.58,91,1.806,111,0.719,114,1.199,178,3.388,179,2.516,182,3.274,225,3.274,274,1.363,388,2.374,389,2.016,399,4.085,400,2.297,401,2.725,402,2.8,403,4.752,404,4.752,405,4.752,406,4.813,407,2.922,408,4.294,409,4.294,410,2.922,411,3.329,412,2.8,413,4.294,414,4.294]],["title/entities/Level.html",[262,1.333,415,1.078]],["body/entities/Level.html",[3,0.218,4,0.218,5,0.182,7,0.556,10,2.361,11,0.028,12,0.923,16,0.375,20,0.283,21,0.19,26,0.02,27,0.02,70,1.26,82,1.689,86,2.256,111,1.029,114,1.533,179,2.457,262,2.682,274,1.156,298,1.43,402,3.375,412,2.776,415,1.269,416,1.972,417,3.285,418,3.035,419,3.712,420,3.896,421,3.346,422,3.367,423,3.896,424,3.896]],["title/entities/Music.html",[254,2.194,415,1.078]],["body/entities/Music.html",[3,0.166,4,0.166,5,0.138,7,0.422,10,2.61,11,0.028,12,1.02,15,2.016,16,0.403,20,0.234,21,0.158,26,0.017,27,0.017,69,1.817,70,1.335,82,1.283,86,2.637,111,0.782,114,1.273,179,2.172,213,2.777,254,4.363,256,3.101,262,2.334,274,1.278,402,3.069,415,0.964,416,1.498,418,2.519,419,3.224,421,2.777,422,3.582,425,2.496,426,5.581,427,4.864,428,4.864,429,2.961,430,5.289,431,2.961,432,4.19,433,2.961,434,2.961,435,2.961,436,4.19,437,2.961,438,4.19,439,4.19,440,2.961,441,2.961]],["title/modules/NextBlockGeneratorModule.html",[28,0.605,442,2.194]],["body/modules/NextBlockGeneratorModule.html",[2,1.37,3,0.235,4,0.235,5,0.196,11,0.027,16,0.605,17,0.71,20,0.235,21,0.158,26,0.021,27,0.021,28,0.969,30,1.47,31,1.852,34,2.136,35,1.695,36,1.695,38,2.299,40,2.299,51,3,53,1.968,54,1.577,55,1.695,56,3.548,58,3.548,294,2.241,302,2.129,442,4.367,443,3.548,444,4.208,445,4.208,446,4.208,447,4.208]],["title/injectables/NextBlockGeneratorService.html",[41,0.704,294,1.156]],["body/injectables/NextBlockGeneratorService.html",[3,0.19,4,0.19,5,0.158,7,0.484,8,1.5,11,0.028,12,1.025,14,1.5,16,0.503,17,0.573,20,0.258,21,0.173,22,1.587,24,1.609,26,0.018,27,0.018,28,0.842,41,0.98,42,1.367,51,2.943,55,2.106,60,3.466,64,1.471,68,1.471,69,1.105,70,0.98,71,1.471,77,2.04,81,2.511,91,3.717,111,0.896,112,2.331,114,1.399,152,2.249,153,2.511,261,4.729,274,1.054,294,2.16,337,1.717,448,2.862,449,5.609,450,5.864,451,5.609,452,5.609,453,3.394,454,4.607,455,3.409,456,3.409,457,3.394,458,3.884,459,3.394,460,3.394,461,2.862,462,3.394,463,3.394,464,3.394,465,3.394]],["title/entities/Player.html",[298,0.937,415,1.078]],["body/entities/Player.html",[3,0.168,4,0.168,5,0.14,7,0.428,10,2.623,11,0.028,12,1.025,15,1.732,16,0.289,20,0.168,21,0.159,26,0.017,27,0.017,69,1.895,70,1.339,82,1.3,98,3.198,111,0.792,114,1.284,152,3.247,179,2.327,213,2.803,256,3.129,262,1.703,274,1.284,298,1.898,402,3.085,412,3.201,415,0.977,416,1.518,418,2.543,419,3.247,421,2.803,422,3.499,466,2.529,467,4.899,468,4.899,469,5.609,470,4.899,471,2.999,472,2.999,473,4.899,474,4.229,475,2.999,476,4.229,477,2.999,478,4.229,479,2.999,480,2.999,481,2.999,482,2.999]],["title/classes/PlayerConstants.html",[21,0.125,483,2.449]],["body/classes/PlayerConstants.html",[3,0.281,4,0.281,5,0.235,11,0.026,20,0.281,21,0.189,26,0.023,27,0.023,109,3.332,111,1.327,113,4.983,298,1.674,483,4.373,484,4.239,485,5.027,486,5.027]],["title/modules/PlayerModule.html",[28,0.605,487,2.194]],["body/modules/PlayerModule.html",[2,1.436,3,0.247,4,0.247,5,0.206,11,0.027,16,0.597,17,0.745,20,0.247,21,0.166,26,0.022,27,0.022,28,0.998,30,1.541,31,1.907,34,2.2,35,1.777,36,1.777,38,2.367,40,1.912,53,2.063,54,1.654,298,1.249,304,3.72,487,4.303,488,3.72,489,3.72,490,3.903,491,4.411,492,3.72,493,4.411]],["title/injectables/PlayerService.html",[41,0.704,490,1.99]],["body/injectables/PlayerService.html",[3,0.263,4,0.263,5,0.219,7,0.671,8,1.848,11,0.027,12,0.859,14,1.53,15,1.848,16,0.452,17,0.793,20,0.263,21,0.177,24,1.641,26,0.022,27,0.022,41,1.208,42,1.893,44,5.342,46,3.115,86,2.457,490,3.413,494,3.963,495,4.699]],["title/entities/Score.html",[270,1.675,415,1.078]],["body/entities/Score.html",[3,0.188,4,0.188,5,0.157,7,0.479,10,2.433,11,0.028,12,0.951,16,0.441,20,0.256,21,0.172,26,0.018,27,0.018,70,1.283,82,1.457,86,2.564,111,0.887,114,1.39,179,2.386,270,3.4,274,1.191,298,1.823,402,3.214,410,3.386,412,2.516,415,1.094,416,1.7,418,2.751,421,3.033,422,3.513,496,2.834,497,5.844,498,3.36,499,4.576,500,3.36,501,4.576,502,3.36,503,4.576,504,3.36,505,4.576,506,3.36,507,3.36]],["title/injectables/ScoreZone.html",[41,0.704,508,1.99]],["body/injectables/ScoreZone.html",[3,0.192,4,0.192,5,0.16,7,0.49,8,1.513,11,0.028,12,1.03,14,1.714,16,0.507,17,0.58,20,0.192,21,0.129,22,1.607,24,2.12,26,0.018,27,0.018,41,0.988,42,1.384,64,1.49,68,1.49,69,1.119,70,0.731,71,1.49,86,1.384,241,1.411,262,2.576,270,2.351,271,4.171,274,1.205,285,1.843,298,1.316,367,2.543,368,1.739,372,4.754,374,2.543,377,3.437,412,2.555,458,3.917,508,3.541,509,2.898,510,5.637,511,5.637,512,3.436,513,3.436,514,3.436,515,3.917,516,3.437,517,4.646,518,3.436,519,3.436,520,3.436,521,3.436,522,3.436]],["title/modules/ScoreZoneModule.html",[28,0.605,523,2.194]],["body/modules/ScoreZoneModule.html",[2,1.22,3,0.21,4,0.21,5,0.175,11,0.028,16,0.626,17,0.633,20,0.21,21,0.141,26,0.019,27,0.019,28,0.9,30,1.309,31,1.719,34,1.982,35,1.509,36,1.509,38,2.133,40,2.133,53,1.752,54,1.404,241,1.138,262,1.982,285,1.889,294,2.173,298,1.394,299,2.061,301,1.752,302,1.896,364,2.909,366,2.484,367,2.773,368,1.896,369,2.484,508,3.74,523,4.415,524,3.16,525,3.16,526,3.747,527,3.747,528,3.747]],["title/entities/Shape.html",[55,1.333,415,1.078]],["body/entities/Shape.html",[3,0.121,4,0.121,5,0.101,7,0.309,10,2.6,11,0.028,12,1.016,15,1.896,16,0.32,20,0.186,21,0.125,26,0.013,27,0.013,55,2.623,64,0.938,69,1.754,70,1.332,82,0.938,89,3.343,111,0.571,114,1.01,178,3.343,179,2.467,182,3.202,225,3.202,274,1.305,336,2.803,337,2.618,399,2.683,402,2.226,403,4.133,404,4.689,405,4.689,406,4.634,407,2.46,408,3.83,409,3.83,410,3.829,411,2.803,412,2.498,413,3.83,414,3.83,415,1.318,416,1.095,418,1.999,419,2.683,422,3.734,455,1.601,456,1.601,529,1.825,530,3.325,531,2.164,532,2.164,533,2.164,534,2.164,535,2.164,536,2.164,537,2.164,538,2.164,539,2.164,540,2.164,541,2.164,542,1.825,543,1.825,544,2.164,545,2.164]],["title/classes/ShapeConstants.html",[21,0.125,83,2.194]],["body/classes/ShapeConstants.html",[3,0.111,4,0.111,5,0.092,7,0.282,11,0.027,12,0.953,20,0.111,21,0.074,23,3.83,26,0.012,27,0.012,55,2.431,70,1.18,83,3.455,98,3.809,109,1.31,114,0.941,115,5.49,151,3.963,152,3.455,153,3.857,169,2.613,175,2.613,178,2.997,179,1.162,274,1.076,275,3.477,280,2.293,406,2.293,546,1.667,547,3.822,548,3.822,549,3.822,550,3.822,551,3.822,552,3.822,553,3.822,554,3.649,555,1.977,556,3.099,557,3.099,558,3.099,559,3.099,560,3.099,561,3.099,562,3.099,563,1.977,564,4.327,565,3.099,566,3.099,567,5.396,568,5.396,569,5.396,570,5.396,571,5.396,572,5.396,573,5.396,574,5.396,575,5.396,576,1.977,577,3.099,578,3.099,579,3.099,580,3.099,581,3.099,582,3.099,583,3.099,584,1.977,585,3.099,586,4.327,587,5.881,588,4.986,589,5.881,590,3.099,591,3.099,592,3.099,593,1.977,594,3.099,595,4.327,596,4.327,597,4.986,598,4.327,599,3.099,600,3.099,601,1.977,602,1.977]],["title/controllers/StartScreenController.html",[0,1.675,603,2.449]],["body/controllers/StartScreenController.html",[0,2.95,2,1.217,3,0.209,4,0.209,5,0.174,7,0.533,8,1.6,10,1.747,11,0.028,12,0.683,14,1.217,15,1.898,16,0.528,17,0.631,20,0.275,21,0.185,22,1.747,23,2.247,24,1.716,26,0.019,27,0.019,60,3.638,68,1.62,69,1.898,70,0.795,71,1.62,74,4.314,86,2.348,111,0.987,155,3.256,183,2.953,274,0.855,298,1.554,299,2.055,322,3.256,337,1.891,516,3.635,603,4.6,604,3.151,605,4.142,606,3.151,607,4.912,608,3.737,609,3.737,610,3.3,611,3.737,612,3.737,613,3.737]],["title/injectables/StartScreenService.html",[41,0.704,610,1.99]],["body/injectables/StartScreenService.html",[3,0.127,4,0.127,5,0.106,7,0.323,8,1.121,11,0.028,12,1.001,14,1.715,15,1.837,16,0.543,17,0.382,20,0.193,21,0.175,24,1.97,26,0.014,27,0.014,28,0.629,41,0.732,42,0.912,51,2.56,54,0.849,60,2.759,64,1.492,66,3.921,68,1.492,69,1.514,70,0.732,71,1.492,74,3.897,77,3.392,78,1.91,79,1.245,82,0.982,86,2.605,90,1.91,93,2.281,99,1.91,111,0.598,112,2.77,155,3.629,183,2.796,251,3.51,274,1.145,285,1.663,294,1.912,298,1.179,302,1.146,306,2.547,322,2.281,337,1.146,339,1.91,368,1.146,461,1.91,492,1.91,515,3.921,516,2.547,605,2.902,606,2.902,610,3.392,614,1.91,615,4.651,616,4.651,617,4.651,618,4.651,619,4.651,620,4.651,621,2.265,622,2.265,623,3.442,624,2.265,625,2.265,626,3.442,627,3.442,628,5.002,629,2.265,630,3.442,631,2.265,632,2.265,633,2.265,634,2.265,635,2.265,636,2.265,637,3.442,638,2.265,639,2.265,640,2.265,641,3.442,642,2.265,643,2.265,644,2.265,645,2.265,646,1.91,647,2.265,648,2.265,649,2.265,650,2.265,651,2.265]],["title/entities/Zone.html",[241,1.005,415,1.078]],["body/entities/Zone.html",[3,0.204,4,0.204,5,0.17,7,0.52,11,0.028,12,1.055,15,1.956,16,0.351,20,0.271,21,0.182,26,0.019,27,0.019,64,1.581,70,1.314,82,1.581,111,0.963,114,1.468,179,2.314,182,3.304,183,2.906,225,3.304,241,1.913,274,0.835,275,4.909,307,4.273,329,4.445,337,2.744,415,1.188,416,1.845,455,2.699,456,2.699,542,3.075,543,3.075,652,3.075,653,3.647,654,3.647,655,3.647,656,3.647,657,3.647,658,3.647,659,3.647]],["title/injectables/ZoneFactoryService.html",[41,0.704,364,1.548]],["body/injectables/ZoneFactoryService.html",[3,0.222,4,0.222,5,0.185,7,0.567,8,1.665,11,0.028,12,0.935,14,1.295,16,0.544,17,0.671,20,0.286,21,0.192,22,1.859,24,1.786,26,0.02,27,0.02,41,1.088,42,1.601,64,1.723,68,1.723,69,1.295,70,0.846,71,1.723,111,1.05,241,1.953,274,0.91,285,1.92,301,1.859,306,3.784,364,2.791,368,2.012,374,2.942,377,3.784,646,3.352,660,3.352,661,5.114,662,5.97,663,3.976,664,3.976]],["title/modules/ZonefactoryModule.html",[28,0.605,665,2.194]],["body/modules/ZonefactoryModule.html",[2,1.287,3,0.221,4,0.221,5,0.184,11,0.027,16,0.618,17,0.667,20,0.221,21,0.149,26,0.02,27,0.02,28,0.931,30,1.38,31,1.779,34,2.052,35,1.592,36,1.592,38,2.209,40,2.209,53,1.848,54,1.482,241,1.2,285,1.917,294,2.204,298,1.443,299,2.174,301,1.848,302,2,303,3.333,364,2.952,366,2.62,369,2.62,665,4.393,666,3.333,667,3.953,668,3.953,669,3.953]],["title/coverage.html",[670,3.818]],["body/coverage.html",[0,2.613,1,2.195,5,0.155,6,2.792,11,0.027,18,1.821,21,0.194,26,0.018,27,0.018,41,1.366,43,2.792,51,1.549,55,1.334,59,2.792,70,0.705,79,1.821,83,2.195,93,2.195,98,3.495,110,2.792,191,5.414,221,2.792,241,1.006,254,2.195,262,1.334,270,1.676,276,2.195,277,2.792,285,1.006,294,1.157,298,0.938,305,2.792,333,2.195,360,1.991,364,1.549,370,1.991,371,2.792,388,2.724,390,2.792,399,2.195,400,2.792,407,2.45,415,1.955,417,2.792,425,2.792,448,2.792,466,2.792,483,2.45,484,2.792,490,1.991,494,2.792,496,2.792,508,1.991,509,2.792,529,2.792,546,2.792,603,2.45,604,2.792,610,1.991,614,2.792,652,2.792,660,2.792,670,2.792,671,3.312,672,3.312,673,4.53,674,4.53,675,5.164,676,3.312,677,3.312,678,6.146,679,3.312,680,3.312,681,3.312,682,3.312,683,3.312,684,2.792,685,3.312,686,2.792,687,3.312,688,3.312,689,3.312,690,3.312,691,3.312,692,3.312,693,4.53,694,4.53,695,3.312,696,3.312,697,3.312,698,3.312,699,3.312,700,3.312]],["title/dependencies.html",[31,1.391,701,2.326]],["body/dependencies.html",[11,0.027,17,0.813,26,0.023,27,0.023,31,1.682,54,1.805,82,2.087,702,6.164,703,4.815,704,4.815,705,4.815,706,4.815,707,4.815,708,4.815,709,4.815,710,4.815,711,4.815,712,4.815,713,4.815,714,4.815,715,4.815,716,4.815]],["title/miscellaneous/functions.html",[717,2.326,718,3.359]],["body/miscellaneous/functions.html",[7,0.745,11,0.024,26,0.024,27,0.024,684,4.401,686,5.375,717,4.401,718,4.401,719,5.219]],["title/index.html",[7,0.472,720,2.791]],["body/index.html",[2,1.038,11,0.027,18,2.784,26,0.017,27,0.017,29,3.621,30,1.113,31,1.541,32,2.688,33,2.688,34,1.777,35,1.284,36,1.284,42,1.284,48,3.621,49,2.688,50,2.688,51,2.555,109,2.113,213,2.925,285,1.912,290,4.11,291,2.688,293,2.688,294,2.198,360,3.831,361,2.688,363,2.688,364,2.844,370,3.043,382,4.224,383,2.688,385,2.688,389,2.359,416,1.613,442,3.933,443,2.688,487,4.224,488,2.688,489,2.688,490,3.043,508,3.043,523,4.224,524,2.688,525,2.688,554,2.688,610,3.043,665,4.11,666,2.688,720,2.688,721,4.413,722,3.188]],["title/modules.html",[30,1.581]],["body/modules.html",[11,0.022,26,0.022,27,0.022,29,2.972,30,1.566,48,2.972,290,2.972,360,2.696,382,2.972,442,2.972,487,3.656,523,2.972,665,2.972,723,6.763,724,6.763,725,6.763,726,6.763]],["title/properties.html",[114,1.21,701,2.326]],["body/properties.html",[11,0.027,26,0.024,27,0.024,111,1.362,114,1.567,727,5.16,728,5.16,729,5.16,730,5.16,731,5.16]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"classes/PlayerConstants.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{}}}],["0",{"_index":98,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"entities/Player.html":{},"classes/ShapeConstants.html":{},"coverage.html":{}}}],["0.0.1",{"_index":728,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["0.2.44",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":252,"title":{},"body":{"classes/GameConstants.html":{}}}],["0/1",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":175,"title":{},"body":{"classes/GameConstants.html":{},"classes/ShapeConstants.html":{}}}],["0000ff",{"_index":579,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["00ff00",{"_index":578,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["1",{"_index":256,"title":{},"body":{"classes/GameConstants.html":{},"entities/Music.html":{},"entities/Player.html":{}}}],["1/1",{"_index":678,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":213,"title":{},"body":{"classes/GameConstants.html":{},"entities/Music.html":{},"entities/Player.html":{},"index.html":{}}}],["100",{"_index":191,"title":{},"body":{"classes/GameConstants.html":{},"coverage.html":{}}}],["1000",{"_index":184,"title":{},"body":{"classes/GameConstants.html":{}}}],["11/15",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["165",{"_index":590,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["16px",{"_index":166,"title":{},"body":{"classes/GameConstants.html":{}}}],["180",{"_index":560,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["19/36",{"_index":677,"title":{},"body":{"coverage.html":{}}}],["192",{"_index":591,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["2",{"_index":554,"title":{},"body":{"classes/ShapeConstants.html":{},"index.html":{}}}],["2.3.3",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":692,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":180,"title":{},"body":{"classes/GameConstants.html":{}}}],["2000",{"_index":217,"title":{},"body":{"classes/GameConstants.html":{}}}],["203",{"_index":592,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["255",{"_index":589,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["270",{"_index":562,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["3",{"_index":721,"title":{},"body":{"index.html":{}}}],["3.0.2",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":239,"title":{},"body":{"classes/GameConstants.html":{}}}],["4/4",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":221,"title":{},"body":{"classes/GameConstants.html":{},"coverage.html":{}}}],["500",{"_index":196,"title":{},"body":{"classes/GameConstants.html":{}}}],["52",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":722,"title":{},"body":{"index.html":{}}}],["6/8",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":693,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["73",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["8.0.0",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["83",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":558,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["accept",{"_index":650,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["according",{"_index":397,"title":{},"body":{"interfaces/IScreen.html":{}}}],["active",{"_index":476,"title":{},"body":{"entities/Player.html":{}}}],["add",{"_index":486,"title":{},"body":{"classes/PlayerConstants.html":{}}}],["align",{"_index":170,"title":{},"body":{"classes/GameConstants.html":{}}}],["app.controller",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"index.html":{}}}],["arial",{"_index":167,"title":{},"body":{"classes/GameConstants.html":{}}}],["arrow",{"_index":245,"title":{},"body":{"classes/GameConstants.html":{}}}],["artist",{"_index":426,"title":{},"body":{"entities/Music.html":{}}}],["async",{"_index":60,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/NextBlockGeneratorService.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{}}}],["author",{"_index":731,"title":{},"body":{"properties.html":{}}}],["await",{"_index":99,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/StartScreenService.html":{}}}],["axis",{"_index":414,"title":{},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{}}}],["background",{"_index":177,"title":{},"body":{"classes/GameConstants.html":{},"interfaces/IScreen.html":{}}}],["backgroundcolor",{"_index":307,"title":{},"body":{"injectables/GameService.html":{},"interfaces/IScreen.html":{},"entities/Zone.html":{}}}],["bgcolor",{"_index":394,"title":{},"body":{"interfaces/IScreen.html":{}}}],["black",{"_index":574,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["block",{"_index":91,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"interfaces/IShape.html":{},"injectables/NextBlockGeneratorService.html":{}}}],["block.\\n",{"_index":248,"title":{},"body":{"classes/GameConstants.html":{}}}],["blockgenerator.service",{"_index":461,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{},"injectables/StartScreenService.html":{}}}],["blockgeneratormodule",{"_index":48,"title":{"modules/BlockGeneratorModule.html":{}},"body":{"modules/BlockGeneratorModule.html":{},"index.html":{},"modules.html":{}}}],["blockgeneratorservice",{"_index":51,"title":{"injectables/BlockGeneratorService.html":{}},"body":{"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/StartScreenService.html":{},"coverage.html":{},"index.html":{}}}],["blocks",{"_index":89,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Shape.html":{}}}],["blue",{"_index":569,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["boolean",{"_index":473,"title":{},"body":{"entities/Player.html":{}}}],["bootstrap",{"_index":686,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":726,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":723,"title":{},"body":{"modules.html":{}}}],["button",{"_index":379,"title":{},"body":{"injectables/HoldZone.html":{}}}],["center",{"_index":171,"title":{},"body":{"classes/GameConstants.html":{}}}],["class",{"_index":21,"title":{"classes/GameConstants.html":{},"classes/PlayerConstants.html":{},"classes/ShapeConstants.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"entities/Level.html":{},"entities/Music.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"classes/PlayerConstants.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{},"coverage.html":{}}}],["classes",{"_index":109,"title":{},"body":{"classes/GameConstants.html":{},"classes/PlayerConstants.html":{},"classes/ShapeConstants.html":{},"index.html":{}}}],["cleared",{"_index":478,"title":{},"body":{"entities/Player.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_providers",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_blockgeneratormodule",{"_index":49,"title":{},"body":{"modules/BlockGeneratorModule.html":{},"index.html":{}}}],["cluster_blockgeneratormodule_providers",{"_index":50,"title":{},"body":{"modules/BlockGeneratorModule.html":{},"index.html":{}}}],["cluster_gamemodule",{"_index":291,"title":{},"body":{"modules/GameModule.html":{},"index.html":{}}}],["cluster_gamemodule_imports",{"_index":293,"title":{},"body":{"modules/GameModule.html":{},"index.html":{}}}],["cluster_gamemodule_providers",{"_index":292,"title":{},"body":{"modules/GameModule.html":{}}}],["cluster_gamezone",{"_index":361,"title":{},"body":{"modules/GameZone.html":{},"index.html":{}}}],["cluster_gamezone_imports",{"_index":363,"title":{},"body":{"modules/GameZone.html":{},"index.html":{}}}],["cluster_gamezone_providers",{"_index":362,"title":{},"body":{"modules/GameZone.html":{}}}],["cluster_holdzonemodule",{"_index":383,"title":{},"body":{"modules/HoldZoneModule.html":{},"index.html":{}}}],["cluster_holdzonemodule_imports",{"_index":384,"title":{},"body":{"modules/HoldZoneModule.html":{}}}],["cluster_holdzonemodule_providers",{"_index":385,"title":{},"body":{"modules/HoldZoneModule.html":{},"index.html":{}}}],["cluster_nextblockgeneratormodule",{"_index":443,"title":{},"body":{"modules/NextBlockGeneratorModule.html":{},"index.html":{}}}],["cluster_nextblockgeneratormodule_imports",{"_index":445,"title":{},"body":{"modules/NextBlockGeneratorModule.html":{}}}],["cluster_nextblockgeneratormodule_providers",{"_index":444,"title":{},"body":{"modules/NextBlockGeneratorModule.html":{}}}],["cluster_playermodule",{"_index":488,"title":{},"body":{"modules/PlayerModule.html":{},"index.html":{}}}],["cluster_playermodule_providers",{"_index":489,"title":{},"body":{"modules/PlayerModule.html":{},"index.html":{}}}],["cluster_scorezonemodule",{"_index":524,"title":{},"body":{"modules/ScoreZoneModule.html":{},"index.html":{}}}],["cluster_scorezonemodule_imports",{"_index":526,"title":{},"body":{"modules/ScoreZoneModule.html":{}}}],["cluster_scorezonemodule_providers",{"_index":525,"title":{},"body":{"modules/ScoreZoneModule.html":{},"index.html":{}}}],["cluster_zonefactorymodule",{"_index":666,"title":{},"body":{"modules/ZonefactoryModule.html":{},"index.html":{}}}],["cluster_zonefactorymodule_imports",{"_index":667,"title":{},"body":{"modules/ZonefactoryModule.html":{}}}],["cluster_zonefactorymodule_providers",{"_index":668,"title":{},"body":{"modules/ZonefactoryModule.html":{}}}],["code",{"_index":236,"title":{},"body":{"classes/GameConstants.html":{}}}],["color",{"_index":178,"title":{},"body":{"classes/GameConstants.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{}}}],["column",{"_index":422,"title":{},"body":{"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Score.html":{},"entities/Shape.html":{}}}],["column({default",{"_index":470,"title":{},"body":{"entities/Player.html":{}}}],["common",{"_index":503,"title":{},"body":{"entities/Score.html":{}}}],["confirminstructions",{"_index":616,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["console",{"_index":393,"title":{},"body":{"interfaces/IScreen.html":{}}}],["console.log('game",{"_index":105,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["console.log('generating",{"_index":87,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["const",{"_index":90,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/StartScreenService.html":{}}}],["constants",{"_index":113,"title":{},"body":{"classes/GameConstants.html":{},"classes/PlayerConstants.html":{}}}],["constants/game.constants",{"_index":634,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["constants/shape.constants",{"_index":84,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["constructor",{"_index":64,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/ScoreZone.html":{},"entities/Shape.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{}}}],["constructor(blockgeneratorservice",{"_index":453,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["constructor(gameservice",{"_index":374,"title":{},"body":{"injectables/HoldZone.html":{},"injectables/ScoreZone.html":{},"injectables/ZoneFactoryService.html":{}}}],["constructor(name",{"_index":481,"title":{},"body":{"entities/Player.html":{}}}],["constructor(nextblockgeneratorservice",{"_index":315,"title":{},"body":{"injectables/GameService.html":{}}}],["constructor(playerrepository",{"_index":621,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/ScoreZone.html":{},"controllers/StartScreenController.html":{},"injectables/ZoneFactoryService.html":{}}}],["constructor(shaperepository",{"_index":65,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/GameController.html":{},"controllers/StartScreenController.html":{}},"body":{"controllers/AppController.html":{},"controllers/GameController.html":{},"controllers/StartScreenController.html":{},"coverage.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/BlockGeneratorModule.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"controllers/StartScreenController.html":{},"modules/ZonefactoryModule.html":{},"index.html":{}}}],["conversion",{"_index":586,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["coverage",{"_index":670,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":455,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{},"entities/Shape.html":{},"entities/Zone.html":{}}}],["current",{"_index":412,"title":{},"body":{"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Player.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"entities/Shape.html":{}}}],["currentlevel",{"_index":467,"title":{},"body":{"entities/Player.html":{}}}],["database",{"_index":410,"title":{},"body":{"interfaces/IShape.html":{},"entities/Score.html":{},"entities/Shape.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/GameController.html":{},"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Score.html":{},"entities/Shape.html":{},"controllers/StartScreenController.html":{}}}],["decrease",{"_index":194,"title":{},"body":{"classes/GameConstants.html":{}}}],["default",{"_index":152,"title":{},"body":{"classes/GameConstants.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"classes/ShapeConstants.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"interfaces/IScreen.html":{},"entities/Level.html":{},"entities/Music.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{}}}],["degree_0",{"_index":556,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["degree_180",{"_index":559,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["degree_270",{"_index":561,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["degree_90",{"_index":557,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["degrees",{"_index":411,"title":{},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{}}}],["denied",{"_index":626,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["deniedpopup",{"_index":617,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":111,"title":{},"body":{"classes/GameConstants.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"classes/PlayerConstants.html":{},"entities/Score.html":{},"entities/Shape.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"properties.html":{}}}],["details",{"_index":516,"title":{},"body":{"injectables/ScoreZone.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{}}}],["documentation",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["each",{"_index":187,"title":{},"body":{"classes/GameConstants.html":{}}}],["end",{"_index":161,"title":{},"body":{"classes/GameConstants.html":{}}}],["enter",{"_index":260,"title":{},"body":{"classes/GameConstants.html":{}}}],["entities",{"_index":416,"title":{},"body":{"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Score.html":{},"entities/Shape.html":{},"entities/Zone.html":{},"index.html":{}}}],["entity",{"_index":415,"title":{"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Score.html":{},"entities/Shape.html":{},"entities/Zone.html":{}},"body":{"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Score.html":{},"entities/Shape.html":{},"entities/Zone.html":{},"coverage.html":{}}}],["entity('level",{"_index":424,"title":{},"body":{"entities/Level.html":{}}}],["entity('music",{"_index":441,"title":{},"body":{"entities/Music.html":{}}}],["entity('player",{"_index":480,"title":{},"body":{"entities/Player.html":{}}}],["entity('score",{"_index":507,"title":{},"body":{"entities/Score.html":{}}}],["entity('shape",{"_index":540,"title":{},"body":{"entities/Shape.html":{}}}],["entity('zone",{"_index":657,"title":{},"body":{"entities/Zone.html":{}}}],["enumgamestate",{"_index":116,"title":{},"body":{"classes/GameConstants.html":{}}}],["error",{"_index":628,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"classes/PlayerConstants.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{}}}],["express",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["factor",{"_index":195,"title":{},"body":{"classes/GameConstants.html":{}}}],["factory",{"_index":661,"title":{},"body":{"injectables/ZoneFactoryService.html":{}}}],["falling",{"_index":566,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["family",{"_index":174,"title":{},"body":{"classes/GameConstants.html":{}}}],["fast",{"_index":200,"title":{},"body":{"classes/GameConstants.html":{}}}],["fastest",{"_index":203,"title":{},"body":{"classes/GameConstants.html":{}}}],["ff0000",{"_index":577,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["ff00ff",{"_index":581,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["ffa500",{"_index":582,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["ffc0cb",{"_index":583,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["ffff00",{"_index":580,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["ffffff",{"_index":169,"title":{},"body":{"classes/GameConstants.html":{},"classes/ShapeConstants.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"classes/PlayerConstants.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{},"coverage.html":{}}}],["filename",{"_index":427,"title":{},"body":{"entities/Music.html":{}}}],["fill",{"_index":168,"title":{},"body":{"classes/GameConstants.html":{}}}],["font",{"_index":117,"title":{},"body":{"classes/GameConstants.html":{}}}],["function",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":718,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":112,"title":{},"body":{"classes/GameConstants.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"interfaces/IScreen.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/StartScreenService.html":{}}}],["game.service",{"_index":368,"title":{},"body":{"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{}}}],["game_background_color",{"_index":118,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_height",{"_index":119,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed",{"_index":120,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_decrease",{"_index":121,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_default",{"_index":122,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_default_string",{"_index":123,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_fast",{"_index":124,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_fast_string",{"_index":125,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_fastest",{"_index":126,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_fastest_string",{"_index":127,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_increase",{"_index":128,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_max",{"_index":129,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_min",{"_index":130,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_slow",{"_index":131,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_slow_string",{"_index":132,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_slowest",{"_index":133,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_slowest_string",{"_index":134,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_very_fast",{"_index":135,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_very_fast_string",{"_index":136,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_very_slow",{"_index":137,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_very_slow_string",{"_index":138,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_state_end",{"_index":160,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_state_pause",{"_index":158,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_state_play",{"_index":156,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_state_start",{"_index":154,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_width",{"_index":139,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_zone",{"_index":267,"title":{},"body":{"classes/GameConstants.html":{}}}],["gameconstants",{"_index":79,"title":{"classes/GameConstants.html":{}},"body":{"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"injectables/GameService.html":{},"injectables/StartScreenService.html":{},"coverage.html":{}}}],["gameconstants.enumgamestate.game_state_end",{"_index":107,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["gameconstants.enumgamestate.game_state_pause",{"_index":104,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["gameconstants.enumgamestate.game_state_play",{"_index":101,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["gameconstants.game_background_color",{"_index":348,"title":{},"body":{"injectables/GameService.html":{}}}],["gameconstants.game_height",{"_index":346,"title":{},"body":{"injectables/GameService.html":{}}}],["gameconstants.game_width",{"_index":347,"title":{},"body":{"injectables/GameService.html":{}}}],["gameconstants.greeting_texst",{"_index":636,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["gameconstants.hold_zone_height",{"_index":350,"title":{},"body":{"injectables/GameService.html":{}}}],["gameconstants.hold_zone_width",{"_index":351,"title":{},"body":{"injectables/GameService.html":{}}}],["gameconstants.score_profile_zone_height",{"_index":353,"title":{},"body":{"injectables/GameService.html":{}}}],["gameconstants.score_profile_zone_width",{"_index":354,"title":{},"body":{"injectables/GameService.html":{}}}],["gameconstants.zones.game_zone",{"_index":345,"title":{},"body":{"injectables/GameService.html":{}}}],["gameconstants.zones.hold_block_zone",{"_index":349,"title":{},"body":{"injectables/GameService.html":{}}}],["gameconstants.zones.next_block_zone",{"_index":355,"title":{},"body":{"injectables/GameService.html":{}}}],["gameconstants.zones.score_profile_zone",{"_index":352,"title":{},"body":{"injectables/GameService.html":{}}}],["gamecontroller",{"_index":276,"title":{"controllers/GameController.html":{}},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{},"coverage.html":{}}}],["gamemodule",{"_index":290,"title":{"modules/GameModule.html":{}},"body":{"modules/GameModule.html":{},"index.html":{},"modules.html":{}}}],["gameservice",{"_index":285,"title":{"injectables/GameService.html":{}},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{},"coverage.html":{},"index.html":{}}}],["gamezone",{"_index":360,"title":{"modules/GameZone.html":{}},"body":{"modules/GameZone.html":{},"coverage.html":{},"index.html":{},"modules.html":{}}}],["generate",{"_index":377,"title":{},"body":{"injectables/HoldZone.html":{},"injectables/ScoreZone.html":{},"injectables/ZoneFactoryService.html":{}}}],["generateblocks",{"_index":61,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["generates",{"_index":449,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["generatestack",{"_index":451,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["generatezone",{"_index":372,"title":{},"body":{"injectables/HoldZone.html":{},"injectables/ScoreZone.html":{}}}],["generatezones",{"_index":662,"title":{},"body":{"injectables/ZoneFactoryService.html":{}}}],["get('/hold",{"_index":278,"title":{},"body":{"controllers/GameController.html":{}}}],["get('/move",{"_index":281,"title":{},"body":{"controllers/GameController.html":{}}}],["get('/player",{"_index":607,"title":{},"body":{"controllers/StartScreenController.html":{}}}],["get('/rotate",{"_index":283,"title":{},"body":{"controllers/GameController.html":{}}}],["getblocks",{"_index":452,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["getcurrentgamestate",{"_index":62,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["getgreeting",{"_index":618,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{}}}],["green",{"_index":568,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["greeting_texst",{"_index":140,"title":{},"body":{"classes/GameConstants.html":{}}}],["greetings",{"_index":230,"title":{},"body":{"classes/GameConstants.html":{}}}],["h",{"_index":232,"title":{},"body":{"classes/GameConstants.html":{}}}],["healthcheck",{"_index":44,"title":{},"body":{"injectables/AppService.html":{},"injectables/PlayerService.html":{}}}],["height",{"_index":182,"title":{},"body":{"classes/GameConstants.html":{},"injectables/GameService.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Shape.html":{},"entities/Zone.html":{}}}],["height_square",{"_index":547,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["hex",{"_index":585,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["highest",{"_index":499,"title":{},"body":{"entities/Score.html":{}}}],["highscore",{"_index":497,"title":{},"body":{"entities/Score.html":{}}}],["hold",{"_index":234,"title":{},"body":{"classes/GameConstants.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{}}}],["hold_block_zone",{"_index":272,"title":{},"body":{"classes/GameConstants.html":{}}}],["hold_key",{"_index":141,"title":{},"body":{"classes/GameConstants.html":{}}}],["hold_zone_height",{"_index":142,"title":{},"body":{"classes/GameConstants.html":{}}}],["hold_zone_width",{"_index":143,"title":{},"body":{"classes/GameConstants.html":{}}}],["holdzone",{"_index":370,"title":{"injectables/HoldZone.html":{}},"body":{"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"coverage.html":{},"index.html":{}}}],["holdzonemodule",{"_index":382,"title":{"modules/HoldZoneModule.html":{}},"body":{"modules/HoldZoneModule.html":{},"index.html":{},"modules.html":{}}}],["id",{"_index":402,"title":{},"body":{"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Score.html":{},"entities/Shape.html":{}}}],["identifier",{"_index":407,"title":{},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{},"coverage.html":{}}}],["identify",{"_index":409,"title":{},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{}}}],["implements",{"_index":336,"title":{},"body":{"injectables/GameService.html":{},"entities/Shape.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"interfaces/IScreen.html":{},"entities/Level.html":{},"entities/Music.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"entities/Shape.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{}}}],["imports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{}}}],["increase",{"_index":206,"title":{},"body":{"classes/GameConstants.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"classes/PlayerConstants.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{}}}],["injectable",{"_index":41,"title":{"injectables/AppService.html":{},"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreZone.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{}},"body":{"injectables/AppService.html":{},"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreZone.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{},"coverage.html":{}}}],["injectables",{"_index":42,"title":{},"body":{"injectables/AppService.html":{},"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreZone.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{},"index.html":{}}}],["injectrepository",{"_index":78,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/StartScreenService.html":{}}}],["injectrepository(player",{"_index":635,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["injectrepository(shape",{"_index":85,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["input",{"_index":237,"title":{},"body":{"classes/GameConstants.html":{}}}],["instance",{"_index":456,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{},"entities/Shape.html":{},"entities/Zone.html":{}}}],["instructions",{"_index":251,"title":{},"body":{"classes/GameConstants.html":{},"injectables/StartScreenService.html":{}}}],["instructions_text",{"_index":144,"title":{},"body":{"classes/GameConstants.html":{}}}],["interface",{"_index":388,"title":{"interfaces/IScreen.html":{},"interfaces/IShape.html":{}},"body":{"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"coverage.html":{}}}],["interface/shape.interface",{"_index":539,"title":{},"body":{"entities/Shape.html":{}}}],["interfaces",{"_index":389,"title":{},"body":{"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"index.html":{}}}],["isactive",{"_index":468,"title":{},"body":{"entities/Player.html":{}}}],["iscreen",{"_index":333,"title":{"interfaces/IScreen.html":{}},"body":{"injectables/GameService.html":{},"interfaces/IScreen.html":{},"coverage.html":{}}}],["ishape",{"_index":399,"title":{"interfaces/IShape.html":{}},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{},"coverage.html":{}}}],["key",{"_index":235,"title":{},"body":{"classes/GameConstants.html":{}}}],["keys",{"_index":246,"title":{},"body":{"classes/GameConstants.html":{}}}],["l",{"_index":597,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["level",{"_index":262,"title":{"entities/Level.html":{}},"body":{"classes/GameConstants.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"coverage.html":{}}}],["level.entity",{"_index":440,"title":{},"body":{"entities/Music.html":{}}}],["level.number",{"_index":436,"title":{},"body":{"entities/Music.html":{}}}],["license",{"_index":729,"title":{},"body":{"properties.html":{}}}],["lines",{"_index":469,"title":{},"body":{"entities/Player.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"classes/PlayerConstants.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{}}}],["max",{"_index":242,"title":{},"body":{"classes/GameConstants.html":{}}}],["memberof",{"_index":274,"title":{},"body":{"classes/GameConstants.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{}}}],["metadata",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BlockGeneratorService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"interfaces/IScreen.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreZone.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{}}}],["minimum",{"_index":209,"title":{},"body":{"classes/GameConstants.html":{}}}],["mirrored",{"_index":600,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["mirrored_l",{"_index":599,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["miscellaneous",{"_index":717,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mode",{"_index":630,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["model",{"_index":418,"title":{},"body":{"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Score.html":{},"entities/Shape.html":{}}}],["model/level.entity",{"_index":367,"title":{},"body":{"modules/GameZone.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{}}}],["model/player.entity",{"_index":492,"title":{},"body":{"modules/PlayerModule.html":{},"injectables/StartScreenService.html":{}}}],["model/shape.entity",{"_index":56,"title":{},"body":{"modules/BlockGeneratorModule.html":{},"modules/NextBlockGeneratorModule.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"injectables/StartScreenService.html":{},"modules/ZonefactoryModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{},"index.html":{},"modules.html":{}}}],["move",{"_index":247,"title":{},"body":{"classes/GameConstants.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{}}}],["music",{"_index":254,"title":{"entities/Music.html":{}},"body":{"classes/GameConstants.html":{},"entities/Music.html":{},"coverage.html":{}}}],["music's",{"_index":430,"title":{},"body":{"entities/Music.html":{}}}],["music_volume",{"_index":145,"title":{},"body":{"classes/GameConstants.html":{}}}],["mysql2",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":69,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Music.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"injectables/ScoreZone.html":{},"entities/Shape.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{}}}],["needed",{"_index":259,"title":{},"body":{"classes/GameConstants.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":54,"title":{},"body":{"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"injectables/StartScreenService.html":{},"modules/ZonefactoryModule.html":{},"dependencies.html":{}}}],["new",{"_index":93,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{},"injectables/StartScreenService.html":{},"coverage.html":{}}}],["next",{"_index":261,"title":{},"body":{"classes/GameConstants.html":{},"injectables/NextBlockGeneratorService.html":{}}}],["next_block_zone",{"_index":268,"title":{},"body":{"classes/GameConstants.html":{}}}],["nextblockgeneratormodule",{"_index":442,"title":{"modules/NextBlockGeneratorModule.html":{}},"body":{"modules/NextBlockGeneratorModule.html":{},"index.html":{},"modules.html":{}}}],["nextblockgeneratorservice",{"_index":294,"title":{"injectables/NextBlockGeneratorService.html":{}},"body":{"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"modules/ScoreZoneModule.html":{},"injectables/StartScreenService.html":{},"modules/ZonefactoryModule.html":{},"coverage.html":{},"index.html":{}}}],["nextblockzone.service",{"_index":335,"title":{},"body":{"injectables/GameService.html":{}}}],["number",{"_index":179,"title":{},"body":{"classes/GameConstants.html":{},"injectables/GameService.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Score.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"entities/Zone.html":{}}}],["object",{"_index":151,"title":{},"body":{"classes/GameConstants.html":{},"classes/ShapeConstants.html":{}}}],["onetomany",{"_index":505,"title":{},"body":{"entities/Score.html":{}}}],["onetomany(undefined",{"_index":500,"title":{},"body":{"entities/Score.html":{}}}],["onetoone",{"_index":439,"title":{},"body":{"entities/Music.html":{}}}],["onetoone(undefined",{"_index":435,"title":{},"body":{"entities/Music.html":{}}}],["ongamestart",{"_index":308,"title":{},"body":{"injectables/GameService.html":{}}}],["onpresshold",{"_index":373,"title":{},"body":{"injectables/HoldZone.html":{}}}],["optional",{"_index":71,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"interfaces/IScreen.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/ScoreZone.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{}}}],["orange",{"_index":572,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["out",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{},"index.html":{}}}],["over",{"_index":108,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["overview",{"_index":720,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":701,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":337,"title":{},"body":{"injectables/GameService.html":{},"interfaces/IScreen.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Shape.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{}}}],["parameters",{"_index":68,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"interfaces/IScreen.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/ScoreZone.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{}}}],["path",{"_index":432,"title":{},"body":{"entities/Music.html":{}}}],["pause",{"_index":159,"title":{},"body":{"classes/GameConstants.html":{}}}],["paused",{"_index":106,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{}}}],["per",{"_index":189,"title":{},"body":{"classes/GameConstants.html":{}}}],["pink",{"_index":573,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["play",{"_index":157,"title":{},"body":{"classes/GameConstants.html":{}}}],["player",{"_index":298,"title":{"entities/Player.html":{}},"body":{"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"entities/Level.html":{},"entities/Player.html":{},"classes/PlayerConstants.html":{},"modules/PlayerModule.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"modules/ZonefactoryModule.html":{},"coverage.html":{}}}],["player's",{"_index":517,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["player(name",{"_index":639,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["player.entity",{"_index":506,"title":{},"body":{"entities/Score.html":{}}}],["player.id",{"_index":501,"title":{},"body":{"entities/Score.html":{}}}],["playerconstants",{"_index":483,"title":{"classes/PlayerConstants.html":{}},"body":{"classes/PlayerConstants.html":{},"coverage.html":{}}}],["playermodule",{"_index":487,"title":{"modules/PlayerModule.html":{}},"body":{"modules/PlayerModule.html":{},"index.html":{},"modules.html":{}}}],["playerrepository",{"_index":623,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["playerservice",{"_index":490,"title":{"injectables/PlayerService.html":{}},"body":{"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"coverage.html":{},"index.html":{}}}],["please",{"_index":649,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["points",{"_index":258,"title":{},"body":{"classes/GameConstants.html":{}}}],["points_for_level_change",{"_index":146,"title":{},"body":{"classes/GameConstants.html":{}}}],["popup",{"_index":627,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["position",{"_index":413,"title":{},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{}}}],["press",{"_index":227,"title":{},"body":{"classes/GameConstants.html":{},"injectables/HoldZone.html":{}}}],["pressed",{"_index":238,"title":{},"body":{"classes/GameConstants.html":{}}}],["primarygeneratedcolumn",{"_index":419,"title":{},"body":{"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Shape.html":{}}}],["private",{"_index":86,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"entities/Level.html":{},"entities/Music.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{}}}],["profile",{"_index":271,"title":{},"body":{"classes/GameConstants.html":{},"injectables/GameService.html":{},"injectables/ScoreZone.html":{}}}],["promise",{"_index":74,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{}}}],["promise((resolve",{"_index":642,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["properties",{"_index":114,"title":{"properties.html":{}},"body":{"classes/GameConstants.html":{},"injectables/GameService.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"entities/Score.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"entities/Zone.html":{},"properties.html":{}}}],["provided",{"_index":398,"title":{},"body":{"interfaces/IScreen.html":{}}}],["providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{}}}],["public",{"_index":275,"title":{},"body":{"classes/GameConstants.html":{},"classes/ShapeConstants.html":{},"entities/Zone.html":{}}}],["purple",{"_index":571,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["query",{"_index":609,"title":{},"body":{"controllers/StartScreenController.html":{}}}],["random",{"_index":88,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["rbg",{"_index":594,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/GameConstants.html":{},"controllers/GameController.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{}}}],["red",{"_index":567,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["reflect",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":66,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/StartScreenService.html":{}}}],["reset",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{},"index.html":{}}}],["resolve(true",{"_index":643,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"classes/PlayerConstants.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BlockGeneratorService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreZone.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BlockGeneratorService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"interfaces/IScreen.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreZone.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{}}}],["rgb(0",{"_index":588,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["rgb(255",{"_index":587,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["rimraf",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["rotate",{"_index":249,"title":{},"body":{"classes/GameConstants.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{}}}],["rotation",{"_index":403,"title":{},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{}}}],["rotation_shape",{"_index":548,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["rows",{"_index":186,"title":{},"body":{"classes/GameConstants.html":{}}}],["running",{"_index":164,"title":{},"body":{"classes/GameConstants.html":{}}}],["rxjs",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["schema",{"_index":530,"title":{},"body":{"entities/Shape.html":{}}}],["score",{"_index":270,"title":{"entities/Score.html":{}},"body":{"classes/GameConstants.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"coverage.html":{}}}],["score_profile_zone",{"_index":269,"title":{},"body":{"classes/GameConstants.html":{}}}],["score_profile_zone_height",{"_index":147,"title":{},"body":{"classes/GameConstants.html":{}}}],["score_profile_zone_width",{"_index":148,"title":{},"body":{"classes/GameConstants.html":{}}}],["scorezone",{"_index":508,"title":{"injectables/ScoreZone.html":{}},"body":{"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"coverage.html":{},"index.html":{}}}],["scorezonemodule",{"_index":523,"title":{"modules/ScoreZoneModule.html":{}},"body":{"modules/ScoreZoneModule.html":{},"index.html":{},"modules.html":{}}}],["screen",{"_index":183,"title":{},"body":{"classes/GameConstants.html":{},"interfaces/IScreen.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{}}}],["screen's",{"_index":396,"title":{},"body":{"interfaces/IScreen.html":{}}}],["second",{"_index":190,"title":{},"body":{"classes/GameConstants.html":{}}}],["service",{"_index":306,"title":{},"body":{"injectables/GameService.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{}}}],["service/blockgenerator.service",{"_index":57,"title":{},"body":{"modules/BlockGeneratorModule.html":{}}}],["service/game.service",{"_index":303,"title":{},"body":{"modules/GameModule.html":{},"modules/ZonefactoryModule.html":{}}}],["service/player.service",{"_index":493,"title":{},"body":{"modules/PlayerModule.html":{}}}],["service/startscreen.service",{"_index":611,"title":{},"body":{"controllers/StartScreenController.html":{}}}],["set",{"_index":322,"title":{},"body":{"injectables/GameService.html":{},"interfaces/IScreen.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{}}}],["setallzones",{"_index":309,"title":{},"body":{"injectables/GameService.html":{},"interfaces/IScreen.html":{}}}],["setgamezone",{"_index":310,"title":{},"body":{"injectables/GameService.html":{}}}],["setholdzone",{"_index":311,"title":{},"body":{"injectables/GameService.html":{}}}],["setnextzone",{"_index":312,"title":{},"body":{"injectables/GameService.html":{}}}],["setplayer",{"_index":605,"title":{},"body":{"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{}}}],["setplayer(@query('name",{"_index":612,"title":{},"body":{"controllers/StartScreenController.html":{}}}],["setplayer(name",{"_index":606,"title":{},"body":{"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{}}}],["setscoreprofilezone",{"_index":313,"title":{},"body":{"injectables/GameService.html":{}}}],["setup",{"_index":392,"title":{},"body":{"interfaces/IScreen.html":{}}}],["setzone",{"_index":314,"title":{},"body":{"injectables/GameService.html":{},"interfaces/IScreen.html":{}}}],["setzone(zonetype",{"_index":327,"title":{},"body":{"injectables/GameService.html":{},"interfaces/IScreen.html":{}}}],["shape",{"_index":55,"title":{"entities/Shape.html":{}},"body":{"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"modules/GameModule.html":{},"interfaces/IShape.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"coverage.html":{}}}],["shape's",{"_index":406,"title":{},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{}}}],["shape_color",{"_index":549,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["shape_color_hex",{"_index":550,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["shape_color_rgb",{"_index":551,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["shapeconstants",{"_index":83,"title":{"classes/ShapeConstants.html":{}},"body":{"injectables/BlockGeneratorService.html":{},"classes/ShapeConstants.html":{},"coverage.html":{}}}],["shapeconstants.height_square",{"_index":96,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["shapeconstants.shape_color.blue",{"_index":95,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["shapeconstants.shapetype.square",{"_index":94,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["shapeconstants.width_square",{"_index":97,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["shaperepository",{"_index":72,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["shapes",{"_index":401,"title":{},"body":{"interfaces/IShape.html":{}}}],["shapetype",{"_index":552,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["show",{"_index":515,"title":{},"body":{"injectables/ScoreZone.html":{},"injectables/StartScreenService.html":{}}}],["showdetails",{"_index":510,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["showinstructions",{"_index":619,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["showlevel",{"_index":511,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["shows",{"_index":458,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{},"injectables/ScoreZone.html":{}}}],["side",{"_index":565,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["slow",{"_index":211,"title":{},"body":{"classes/GameConstants.html":{}}}],["slowest",{"_index":215,"title":{},"body":{"classes/GameConstants.html":{}}}],["sound",{"_index":266,"title":{},"body":{"classes/GameConstants.html":{}}}],["sound_volume",{"_index":149,"title":{},"body":{"classes/GameConstants.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"classes/PlayerConstants.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{}}}],["spacebar",{"_index":228,"title":{},"body":{"classes/GameConstants.html":{}}}],["speed",{"_index":193,"title":{},"body":{"classes/GameConstants.html":{}}}],["square",{"_index":595,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["src/.../main.ts",{"_index":719,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/abstract/screen.abstract",{"_index":334,"title":{},"body":{"injectables/GameService.html":{}}}],["src/abstract/screen.abstract.ts",{"_index":390,"title":{},"body":{"interfaces/IScreen.html":{},"coverage.html":{}}}],["src/abstract/screen.abstract.ts:30",{"_index":395,"title":{},"body":{"interfaces/IScreen.html":{}}}],["src/abstract/screen.abstract.ts:36",{"_index":391,"title":{},"body":{"interfaces/IScreen.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":43,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":45,"title":{},"body":{"injectables/AppService.html":{}}}],["src/constants/game.constants",{"_index":80,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{}}}],["src/constants/game.constants.ts",{"_index":110,"title":{},"body":{"classes/GameConstants.html":{},"coverage.html":{}}}],["src/constants/game.constants.ts:108",{"_index":233,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:116",{"_index":253,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:123",{"_index":265,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:131",{"_index":257,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:139",{"_index":243,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:14",{"_index":224,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:146",{"_index":240,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:154",{"_index":229,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:163",{"_index":250,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:172",{"_index":176,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:174",{"_index":264,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:175",{"_index":263,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:21",{"_index":181,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:29",{"_index":185,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:37",{"_index":205,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:44",{"_index":192,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:51",{"_index":208,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:52",{"_index":207,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:53",{"_index":197,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:54",{"_index":210,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:55",{"_index":199,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:56",{"_index":218,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:57",{"_index":222,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:58",{"_index":214,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:59",{"_index":202,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:60",{"_index":216,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:61",{"_index":212,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:62",{"_index":201,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:63",{"_index":204,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:64",{"_index":198,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:65",{"_index":223,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:66",{"_index":220,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:73",{"_index":162,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:85",{"_index":273,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:97",{"_index":172,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/player.constants.ts",{"_index":484,"title":{},"body":{"classes/PlayerConstants.html":{},"coverage.html":{}}}],["src/constants/shape.constants.ts",{"_index":546,"title":{},"body":{"classes/ShapeConstants.html":{},"coverage.html":{}}}],["src/constants/shape.constants.ts:17",{"_index":555,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["src/constants/shape.constants.ts:18",{"_index":602,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["src/constants/shape.constants.ts:25",{"_index":563,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["src/constants/shape.constants.ts:37",{"_index":576,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["src/constants/shape.constants.ts:54",{"_index":593,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["src/constants/shape.constants.ts:72",{"_index":584,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["src/constants/shape.constants.ts:8",{"_index":601,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["src/controller/game.controller",{"_index":296,"title":{},"body":{"modules/GameModule.html":{}}}],["src/controller/game.controller.ts",{"_index":277,"title":{},"body":{"controllers/GameController.html":{},"coverage.html":{}}}],["src/controller/game.controller.ts:20",{"_index":284,"title":{},"body":{"controllers/GameController.html":{}}}],["src/controller/game.controller.ts:31",{"_index":279,"title":{},"body":{"controllers/GameController.html":{}}}],["src/controller/game.controller.ts:42",{"_index":282,"title":{},"body":{"controllers/GameController.html":{}}}],["src/controller/startscreen.controller.ts",{"_index":604,"title":{},"body":{"controllers/StartScreenController.html":{},"coverage.html":{}}}],["src/controller/startscreen.controller.ts:23",{"_index":608,"title":{},"body":{"controllers/StartScreenController.html":{}}}],["src/interface/shape.interface.ts",{"_index":400,"title":{},"body":{"interfaces/IShape.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":684,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/model/level.entity",{"_index":297,"title":{},"body":{"modules/GameModule.html":{}}}],["src/model/level.entity.ts",{"_index":417,"title":{},"body":{"entities/Level.html":{},"coverage.html":{}}}],["src/model/level.entity.ts:18",{"_index":420,"title":{},"body":{"entities/Level.html":{}}}],["src/model/level.entity.ts:27",{"_index":423,"title":{},"body":{"entities/Level.html":{}}}],["src/model/music.entity.ts",{"_index":425,"title":{},"body":{"entities/Music.html":{},"coverage.html":{}}}],["src/model/music.entity.ts:18",{"_index":433,"title":{},"body":{"entities/Music.html":{}}}],["src/model/music.entity.ts:26",{"_index":434,"title":{},"body":{"entities/Music.html":{}}}],["src/model/music.entity.ts:34",{"_index":431,"title":{},"body":{"entities/Music.html":{}}}],["src/model/music.entity.ts:42",{"_index":429,"title":{},"body":{"entities/Music.html":{}}}],["src/model/music.entity.ts:50",{"_index":437,"title":{},"body":{"entities/Music.html":{}}}],["src/model/player.entity",{"_index":299,"title":{},"body":{"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/ScoreZoneModule.html":{},"controllers/StartScreenController.html":{},"modules/ZonefactoryModule.html":{}}}],["src/model/player.entity.ts",{"_index":466,"title":{},"body":{"entities/Player.html":{},"coverage.html":{}}}],["src/model/player.entity.ts:21",{"_index":472,"title":{},"body":{"entities/Player.html":{}}}],["src/model/player.entity.ts:29",{"_index":479,"title":{},"body":{"entities/Player.html":{}}}],["src/model/player.entity.ts:37",{"_index":475,"title":{},"body":{"entities/Player.html":{}}}],["src/model/player.entity.ts:45",{"_index":471,"title":{},"body":{"entities/Player.html":{}}}],["src/model/player.entity.ts:54",{"_index":477,"title":{},"body":{"entities/Player.html":{}}}],["src/model/score.entity",{"_index":300,"title":{},"body":{"modules/GameModule.html":{}}}],["src/model/score.entity.ts",{"_index":496,"title":{},"body":{"entities/Score.html":{},"coverage.html":{}}}],["src/model/score.entity.ts:19",{"_index":502,"title":{},"body":{"entities/Score.html":{}}}],["src/model/score.entity.ts:28",{"_index":504,"title":{},"body":{"entities/Score.html":{}}}],["src/model/score.entity.ts:37",{"_index":498,"title":{},"body":{"entities/Score.html":{}}}],["src/model/shape.entity",{"_index":81,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"modules/GameModule.html":{},"injectables/NextBlockGeneratorService.html":{}}}],["src/model/shape.entity.ts",{"_index":529,"title":{},"body":{"entities/Shape.html":{},"coverage.html":{}}}],["src/model/shape.entity.ts:43",{"_index":533,"title":{},"body":{"entities/Shape.html":{}}}],["src/model/shape.entity.ts:51",{"_index":534,"title":{},"body":{"entities/Shape.html":{}}}],["src/model/shape.entity.ts:59",{"_index":531,"title":{},"body":{"entities/Shape.html":{}}}],["src/model/shape.entity.ts:67",{"_index":536,"title":{},"body":{"entities/Shape.html":{}}}],["src/model/shape.entity.ts:75",{"_index":532,"title":{},"body":{"entities/Shape.html":{}}}],["src/model/shape.entity.ts:83",{"_index":537,"title":{},"body":{"entities/Shape.html":{}}}],["src/model/shape.entity.ts:91",{"_index":538,"title":{},"body":{"entities/Shape.html":{}}}],["src/model/shape.entity.ts:99",{"_index":535,"title":{},"body":{"entities/Shape.html":{}}}],["src/model/zone.entity",{"_index":301,"title":{},"body":{"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"interfaces/IScreen.html":{},"modules/ScoreZoneModule.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{}}}],["src/model/zone.entity.ts",{"_index":652,"title":{},"body":{"entities/Zone.html":{},"coverage.html":{}}}],["src/model/zone.entity.ts:19",{"_index":656,"title":{},"body":{"entities/Zone.html":{}}}],["src/model/zone.entity.ts:20",{"_index":654,"title":{},"body":{"entities/Zone.html":{}}}],["src/model/zone.entity.ts:21",{"_index":655,"title":{},"body":{"entities/Zone.html":{}}}],["src/model/zone.entity.ts:22",{"_index":653,"title":{},"body":{"entities/Zone.html":{}}}],["src/module/blockgenerator.module.ts",{"_index":52,"title":{},"body":{"modules/BlockGeneratorModule.html":{}}}],["src/module/game.module.ts",{"_index":295,"title":{},"body":{"modules/GameModule.html":{}}}],["src/module/gamezone.module.ts",{"_index":365,"title":{},"body":{"modules/GameZone.html":{}}}],["src/module/holdzone.module.ts",{"_index":386,"title":{},"body":{"modules/HoldZoneModule.html":{}}}],["src/module/nextblockgenerator.module.ts",{"_index":446,"title":{},"body":{"modules/NextBlockGeneratorModule.html":{}}}],["src/module/player.module.ts",{"_index":491,"title":{},"body":{"modules/PlayerModule.html":{}}}],["src/module/scorezone.module.ts",{"_index":527,"title":{},"body":{"modules/ScoreZoneModule.html":{}}}],["src/module/zonefactory.module.ts",{"_index":669,"title":{},"body":{"modules/ZonefactoryModule.html":{}}}],["src/service/blockgenerator.service",{"_index":447,"title":{},"body":{"modules/NextBlockGeneratorModule.html":{}}}],["src/service/blockgenerator.service.ts",{"_index":59,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"coverage.html":{}}}],["src/service/blockgenerator.service.ts:13",{"_index":73,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["src/service/blockgenerator.service.ts:30",{"_index":75,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["src/service/blockgenerator.service.ts:33",{"_index":76,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["src/service/blockgenerator.service.ts:8",{"_index":67,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["src/service/game.service",{"_index":286,"title":{},"body":{"controllers/GameController.html":{}}}],["src/service/game.service.ts",{"_index":305,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["src/service/game.service.ts:104",{"_index":325,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:119",{"_index":319,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:128",{"_index":320,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:138",{"_index":317,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:14",{"_index":316,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:147",{"_index":318,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:16",{"_index":331,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:17",{"_index":332,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:18",{"_index":330,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:29",{"_index":328,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:43",{"_index":321,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:59",{"_index":323,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:74",{"_index":324,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:89",{"_index":326,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/gamezone.service.ts",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["src/service/holdzone.service",{"_index":387,"title":{},"body":{"modules/HoldZoneModule.html":{}}}],["src/service/holdzone.service.ts",{"_index":371,"title":{},"body":{"injectables/HoldZone.html":{},"coverage.html":{}}}],["src/service/holdzone.service.ts:13",{"_index":376,"title":{},"body":{"injectables/HoldZone.html":{}}}],["src/service/holdzone.service.ts:22",{"_index":378,"title":{},"body":{"injectables/HoldZone.html":{}}}],["src/service/holdzone.service.ts:5",{"_index":375,"title":{},"body":{"injectables/HoldZone.html":{}}}],["src/service/nextblockzone.service",{"_index":302,"title":{},"body":{"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/ScoreZoneModule.html":{},"injectables/StartScreenService.html":{},"modules/ZonefactoryModule.html":{}}}],["src/service/nextblockzone.service.ts",{"_index":448,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{},"coverage.html":{}}}],["src/service/nextblockzone.service.ts:13",{"_index":454,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["src/service/nextblockzone.service.ts:26",{"_index":457,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["src/service/nextblockzone.service.ts:30",{"_index":460,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["src/service/player.service.ts",{"_index":494,"title":{},"body":{"injectables/PlayerService.html":{},"coverage.html":{}}}],["src/service/player.service.ts:5",{"_index":495,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/service/scorezone.service",{"_index":528,"title":{},"body":{"modules/ScoreZoneModule.html":{}}}],["src/service/scorezone.service.ts",{"_index":509,"title":{},"body":{"injectables/ScoreZone.html":{},"coverage.html":{}}}],["src/service/scorezone.service.ts:14",{"_index":513,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["src/service/scorezone.service.ts:23",{"_index":514,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["src/service/scorezone.service.ts:32",{"_index":518,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["src/service/scorezone.service.ts:6",{"_index":512,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["src/service/startscreen.service.ts",{"_index":614,"title":{},"body":{"injectables/StartScreenService.html":{},"coverage.html":{}}}],["src/service/startscreen.service.ts:16",{"_index":622,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["src/service/startscreen.service.ts:30",{"_index":629,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["src/service/startscreen.service.ts:42",{"_index":631,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["src/service/startscreen.service.ts:49",{"_index":624,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["src/service/startscreen.service.ts:60",{"_index":632,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["src/service/startscreen.service.ts:69",{"_index":633,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["src/service/startscreen.service.ts:80",{"_index":625,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["src/service/zonefactory.service",{"_index":366,"title":{},"body":{"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{}}}],["src/service/zonefactory.service.ts",{"_index":660,"title":{},"body":{"injectables/ZoneFactoryService.html":{},"coverage.html":{}}}],["src/service/zonefactory.service.ts:11",{"_index":663,"title":{},"body":{"injectables/ZoneFactoryService.html":{}}}],["src/service/zonefactory.service.ts:19",{"_index":664,"title":{},"body":{"injectables/ZoneFactoryService.html":{}}}],["stack",{"_index":450,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["start",{"_index":155,"title":{},"body":{"classes/GameConstants.html":{},"injectables/GameService.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{}}}],["startgame",{"_index":620,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["startrolling",{"_index":63,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["startscreen",{"_index":615,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["startscreencontroller",{"_index":603,"title":{"controllers/StartScreenController.html":{}},"body":{"controllers/StartScreenController.html":{},"coverage.html":{}}}],["startscreenservice",{"_index":610,"title":{"injectables/StartScreenService.html":{}},"body":{"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"coverage.html":{},"index.html":{}}}],["state",{"_index":163,"title":{},"body":{"classes/GameConstants.html":{}}}],["statements",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":115,"title":{},"body":{"classes/GameConstants.html":{},"classes/ShapeConstants.html":{}}}],["stopped",{"_index":165,"title":{},"body":{"classes/GameConstants.html":{}}}],["stress",{"_index":438,"title":{},"body":{"entities/Music.html":{}}}],["stresslevel",{"_index":428,"title":{},"body":{"entities/Music.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/GameConstants.html":{},"injectables/GameService.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Music.html":{},"entities/Player.html":{},"injectables/PlayerService.html":{},"entities/Shape.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{}}}],["style",{"_index":173,"title":{},"body":{"classes/GameConstants.html":{}}}],["support",{"_index":724,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":725,"title":{},"body":{"modules.html":{}}}],["t",{"_index":598,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["table",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":188,"title":{},"body":{"classes/GameConstants.html":{}}}],["tells",{"_index":564,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["tetramino",{"_index":280,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/ShapeConstants.html":{}}}],["tetris",{"_index":46,"title":{},"body":{"injectables/AppService.html":{},"classes/GameConstants.html":{},"interfaces/IShape.html":{},"injectables/PlayerService.html":{}}}],["text",{"_index":231,"title":{},"body":{"classes/GameConstants.html":{}}}],["thank",{"_index":651,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.backgroundcolor",{"_index":659,"title":{},"body":{"entities/Zone.html":{}}}],["this.blockgeneratorservice.generateblocks",{"_index":463,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["this.blockgeneratorservice.startrolling",{"_index":647,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["this.color",{"_index":541,"title":{},"body":{"entities/Shape.html":{}}}],["this.confirminstructions",{"_index":644,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["this.deniedpopup",{"_index":645,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["this.gameservice.hold",{"_index":288,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.move",{"_index":289,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.rotate",{"_index":287,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.setallzones",{"_index":646,"title":{},"body":{"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{}}}],["this.gameservice.setholdzone",{"_index":380,"title":{},"body":{"injectables/HoldZone.html":{}}}],["this.gameservice.setscoreprofilezone",{"_index":519,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["this.generateblocks",{"_index":103,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["this.getcurrentgamestate",{"_index":102,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["this.height",{"_index":542,"title":{},"body":{"entities/Shape.html":{},"entities/Zone.html":{}}}],["this.hold",{"_index":358,"title":{},"body":{"injectables/GameService.html":{}}}],["this.level",{"_index":521,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["this.move",{"_index":359,"title":{},"body":{"injectables/GameService.html":{}}}],["this.name",{"_index":482,"title":{},"body":{"entities/Player.html":{}}}],["this.nextblockgeneratorservice.generatestack",{"_index":339,"title":{},"body":{"injectables/GameService.html":{},"injectables/StartScreenService.html":{}}}],["this.onpresshold",{"_index":381,"title":{},"body":{"injectables/HoldZone.html":{}}}],["this.playerrepository.create(new",{"_index":638,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["this.playerrepository.save(user",{"_index":640,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["this.rotate",{"_index":357,"title":{},"body":{"injectables/GameService.html":{}}}],["this.setallzones",{"_index":356,"title":{},"body":{"injectables/GameService.html":{}}}],["this.setgamezone",{"_index":340,"title":{},"body":{"injectables/GameService.html":{}}}],["this.setholdzone",{"_index":341,"title":{},"body":{"injectables/GameService.html":{}}}],["this.setnextzone",{"_index":343,"title":{},"body":{"injectables/GameService.html":{}}}],["this.setscoreprofilezone",{"_index":342,"title":{},"body":{"injectables/GameService.html":{}}}],["this.setzone",{"_index":344,"title":{},"body":{"injectables/GameService.html":{}}}],["this.shaperepository.create",{"_index":92,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["this.shaperepository.save(block",{"_index":100,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["this.showdetails",{"_index":520,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["this.showlevel",{"_index":522,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["this.stack",{"_index":464,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["this.stack.pop",{"_index":465,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["this.stack.push(await",{"_index":462,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["this.startgame",{"_index":641,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["this.startscreenservice.setplayer(name",{"_index":613,"title":{},"body":{"controllers/StartScreenController.html":{}}}],["this.width",{"_index":543,"title":{},"body":{"entities/Shape.html":{},"entities/Zone.html":{}}}],["this.x",{"_index":544,"title":{},"body":{"entities/Shape.html":{}}}],["this.y",{"_index":545,"title":{},"body":{"entities/Shape.html":{}}}],["this.zonetype",{"_index":658,"title":{},"body":{"entities/Zone.html":{}}}],["throw",{"_index":648,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["todo",{"_index":485,"title":{},"body":{"classes/PlayerConstants.html":{}}}],["true",{"_index":474,"title":{},"body":{"entities/Player.html":{}}}],["type",{"_index":70,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"coverage.html":{}}}],["typeorm",{"_index":82,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Score.html":{},"entities/Shape.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":53,"title":{},"body":{"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{}}}],["typeormmodule.forfeature([player",{"_index":304,"title":{},"body":{"modules/GameModule.html":{},"modules/PlayerModule.html":{}}}],["typeormmodule.forfeature([shape",{"_index":58,"title":{},"body":{"modules/BlockGeneratorModule.html":{},"modules/NextBlockGeneratorModule.html":{}}}],["typeormmodule.forfeature([zone",{"_index":369,"title":{},"body":{"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{}}}],["unique",{"_index":421,"title":{},"body":{"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Score.html":{}}}],["unknown",{"_index":459,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["unlicensed",{"_index":730,"title":{},"body":{"properties.html":{}}}],["up",{"_index":47,"title":{},"body":{"injectables/AppService.html":{},"classes/GameConstants.html":{}}}],["use",{"_index":244,"title":{},"body":{"classes/GameConstants.html":{}}}],["used",{"_index":408,"title":{},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{}}}],["user",{"_index":637,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["value",{"_index":153,"title":{},"body":{"classes/GameConstants.html":{},"injectables/NextBlockGeneratorService.html":{},"classes/ShapeConstants.html":{}}}],["version",{"_index":727,"title":{},"body":{"properties.html":{}}}],["very",{"_index":219,"title":{},"body":{"classes/GameConstants.html":{}}}],["void",{"_index":77,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/StartScreenService.html":{}}}],["volume",{"_index":255,"title":{},"body":{"classes/GameConstants.html":{}}}],["welcome",{"_index":226,"title":{},"body":{"classes/GameConstants.html":{}}}],["white",{"_index":575,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["width",{"_index":225,"title":{},"body":{"classes/GameConstants.html":{},"injectables/GameService.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Shape.html":{},"entities/Zone.html":{}}}],["width_square",{"_index":553,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["x",{"_index":404,"title":{},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{}}}],["y",{"_index":405,"title":{},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{}}}],["yellow",{"_index":570,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["z",{"_index":596,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["zone",{"_index":241,"title":{"entities/Zone.html":{}},"body":{"classes/GameConstants.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"interfaces/IScreen.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{},"coverage.html":{}}}],["zone(zonetype",{"_index":338,"title":{},"body":{"injectables/GameService.html":{}}}],["zonefactorymodule",{"_index":665,"title":{"modules/ZonefactoryModule.html":{}},"body":{"modules/ZonefactoryModule.html":{},"index.html":{},"modules.html":{}}}],["zonefactoryservice",{"_index":364,"title":{"injectables/ZoneFactoryService.html":{}},"body":{"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/ScoreZoneModule.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{},"coverage.html":{},"index.html":{}}}],["zones",{"_index":150,"title":{},"body":{"classes/GameConstants.html":{},"injectables/GameService.html":{},"interfaces/IScreen.html":{}}}],["zonetype",{"_index":329,"title":{},"body":{"injectables/GameService.html":{},"interfaces/IScreen.html":{},"entities/Zone.html":{}}}],["zoom",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                healthCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        healthCheck\n                        \n                    \n                \n            \n            \n                \nhealthCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  healthCheck(): string {\n    return 'tetris is up';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockGeneratorModule.html":{"url":"modules/BlockGeneratorModule.html","title":"module - BlockGeneratorModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockGeneratorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BlockGeneratorModule\n\n\n\ncluster_BlockGeneratorModule_providers\n\n\n\n\nBlockGeneratorService\n\nBlockGeneratorService\n\n\n\nBlockGeneratorModule\n\nBlockGeneratorModule\n\nBlockGeneratorModule -->\n\nBlockGeneratorService->BlockGeneratorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/blockgenerator.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BlockGeneratorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Shape } from './../model/shape.entity';\nimport { BlockGeneratorService } from './../service/blockgenerator.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Shape])],\n  providers: [BlockGeneratorService],\n  controllers: [],\n})\nexport class BlockGeneratorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlockGeneratorService.html":{"url":"injectables/BlockGeneratorService.html","title":"injectable - BlockGeneratorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BlockGeneratorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/blockgenerator.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateBlocks\n                            \n                            \n                                getCurrentGameState\n                            \n                            \n                                startRolling\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(shapeRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/service/blockgenerator.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shapeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateBlocks\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateBlocks()\n                \n            \n\n\n            \n                \n                    Defined in src/service/blockgenerator.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentGameState\n                        \n                    \n                \n            \n            \n                \ngetCurrentGameState()\n                \n            \n\n\n            \n                \n                    Defined in src/service/blockgenerator.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startRolling\n                        \n                    \n                \n            \n            \n                \nstartRolling()\n                \n            \n\n\n            \n                \n                    Defined in src/service/blockgenerator.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { GameConstants } from 'src/constants/game.constants';\nimport { Shape } from 'src/model/shape.entity';\nimport { Repository } from 'typeorm';\nimport { ShapeConstants } from './../constants/shape.constants';\n@Injectable()\nexport class BlockGeneratorService {\n  constructor(\n    @InjectRepository(Shape)\n    private shapeRepository: Repository,\n  ) {}\n  async generateBlocks(): Promise {\n    console.log('Generating Random blocks');\n    const block = this.shapeRepository.create(\n      new Shape(\n        ShapeConstants.SHAPETYPE.SQUARE,\n        ShapeConstants.SHAPE_COLOR.BLUE,\n        ShapeConstants.HEIGHT_SQUARE,\n        ShapeConstants.WIDTH_SQUARE,\n        0,\n        0,\n      ),\n    );\n    await this.shapeRepository.save(block);\n\n    return block;\n  }\n\n  getCurrentGameState() {\n    return GameConstants.enumGameState.GAME_STATE_PLAY;\n  }\n  startRolling() {\n    if (\n      GameConstants.enumGameState.GAME_STATE_PLAY === this.getCurrentGameState()\n    ) {\n      this.generateBlocks();\n    } else if (GameConstants.enumGameState.GAME_STATE_PAUSE) {\n      console.log('Game is paused');\n    } else if (\n      GameConstants.enumGameState.GAME_STATE_END === this.getCurrentGameState()\n    ) {\n      console.log('Game Over');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameConstants.html":{"url":"classes/GameConstants.html","title":"class - GameConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/constants/game.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Game Constants (Constants for the game)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                enumGameState\n                            \n                            \n                                    Static\n                                font\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_BACKGROUND_COLOR\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_HEIGHT\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_DECREASE\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_DEFAULT\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_DEFAULT_STRING\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_FAST\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_FAST_STRING\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_FASTEST\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_FASTEST_STRING\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_INCREASE\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_MAX\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_MIN\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_SLOW\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_SLOW_STRING\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_SLOWEST\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_SLOWEST_STRING\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_VERY_FAST\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_VERY_FAST_STRING\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_VERY_SLOW\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_VERY_SLOW_STRING\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_WIDTH\n                            \n                            \n                                    Static\n                                    Readonly\n                                GREETING_TEXST\n                            \n                            \n                                    Static\n                                HOLD_KEY\n                            \n                            \n                                    Static\n                                    Readonly\n                                HOLD_ZONE_HEIGHT\n                            \n                            \n                                    Static\n                                    Readonly\n                                HOLD_ZONE_WIDTH\n                            \n                            \n                                    Static\n                                    Readonly\n                                INSTRUCTIONS_TEXT\n                            \n                            \n                                    Static\n                                    Readonly\n                                MUSIC_VOLUME\n                            \n                            \n                                    Static\n                                    Readonly\n                                POINTS_FOR_LEVEL_CHANGE\n                            \n                            \n                                    Static\n                                    Readonly\n                                SCORE_PROFILE_ZONE_HEIGHT\n                            \n                            \n                                    Static\n                                    Readonly\n                                SCORE_PROFILE_ZONE_WIDTH\n                            \n                            \n                                    Static\n                                    Readonly\n                                SOUND_VOLUME\n                            \n                            \n                                    Static\n                                    Readonly\n                                ZONES\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        enumGameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    GAME_STATE_START: 'start',\n    GAME_STATE_PLAY: 'play',\n    GAME_STATE_PAUSE: 'pause',\n    GAME_STATE_END: 'end',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:73\n                        \n                    \n\n            \n                \n                    State of the game (running, paused, stopped)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        font\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    font: '16px Arial',\n    fill: '#ffffff',\n    align: 'center',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:97\n                        \n                    \n\n            \n                \n                    Font style (font-family) for the game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_BACKGROUND_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#000000'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:172\n                        \n                    \n\n            \n                \n                    Game Background Color\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_HEIGHT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:21\n                        \n                    \n\n            \n                \n                    The height of the screen (in blocks)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:29\n                        \n                    \n\n            \n                \n                    The number of rows each blocks takes up (in blocks per second)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_DECREASE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:44\n                        \n                    \n\n            \n                \n                    Speed decrease factor (in blocks per second)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_DEFAULT_STRING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_FAST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_FAST_STRING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'fast'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_FASTEST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_FASTEST_STRING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'fastest'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_INCREASE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:37\n                        \n                    \n\n            \n                \n                    Speed increase factor (in blocks per second)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_MAX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_MIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:51\n                        \n                    \n\n            \n                \n                    Minimum speed (in blocks per second)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_SLOW\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_SLOW_STRING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'slow'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_SLOWEST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_SLOWEST_STRING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'slowest'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_VERY_FAST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2000\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_VERY_FAST_STRING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'very fast'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_VERY_SLOW\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_VERY_SLOW_STRING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'very slow'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_WIDTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:14\n                        \n                    \n\n            \n                \n                    The width of the game screen (in blocks)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GREETING_TEXST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Welcome to Tetris! Press spacebar to start.'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:154\n                        \n                    \n\n            \n                \n                    Greetings Text\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        HOLD_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'H'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:108\n                        \n                    \n\n            \n                \n                    HOLD KEY (key code) input pressed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        HOLD_ZONE_HEIGHT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:146\n                        \n                    \n\n            \n                \n                    Hold zone max height (in block)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        HOLD_ZONE_WIDTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:139\n                        \n                    \n\n            \n                \n                    Hold zone max width (in block)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        INSTRUCTIONS_TEXT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ' Use the arrow keys to move the block.\\n' +\n    ' Use the spacebar to rotate the block.\\n'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:163\n                        \n                    \n\n            \n                \n                    Instructions Text\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MUSIC_VOLUME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:116\n                        \n                    \n\n            \n                \n                    Music volume (0-1) (default: 0.5)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        POINTS_FOR_LEVEL_CHANGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:131\n                        \n                    \n\n            \n                \n                    Points needed to enter next level\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        SCORE_PROFILE_ZONE_HEIGHT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:175\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        SCORE_PROFILE_ZONE_WIDTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:174\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        SOUND_VOLUME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:123\n                        \n                    \n\n            \n                \n                    Sound volume (0-1) (default: 0.5)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ZONES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    GAME_ZONE: 'game-zone',\n    NEXT_BLOCK_ZONE: 'next-block-zone',\n    SCORE_PROFILE_ZONE: 'score-profile-zone',\n    HOLD_BLOCK_ZONE: 'hold-block-zone',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:85\n                        \n                    \n\n            \n                \n                    Zones (Screen zones in the game screen)\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GameConstants {\n  /**\n   * The width of the game screen (in blocks)\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly GAME_WIDTH = 10;\n  /**\n   * The height of the screen (in blocks)\n   * @static\n   * @memberof GameConstants\n   * @type {number}\n   */\n  public static readonly GAME_HEIGHT = 20;\n  /**\n   * The number of rows each blocks takes up (in blocks per second)\n   *\n   * @static\n   * @memberof GameConstants\n   * @type {number}\n   */\n  public static readonly GAME_SPEED = 1000;\n  /**\n   * Speed increase factor (in blocks per second)\n   *\n   * @static\n   * @memberof GameConstants\n   * @type {number}\n   */\n  public static readonly GAME_SPEED_INCREASE = 100;\n  /**\n   * Speed decrease factor (in blocks per second)\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly GAME_SPEED_DECREASE = 100;\n  /**\n   * Minimum speed (in blocks per second)\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly GAME_SPEED_MIN = 100;\n  public static readonly GAME_SPEED_MAX = 1000;\n  public static readonly GAME_SPEED_DEFAULT = 500;\n  public static readonly GAME_SPEED_SLOW = 100;\n  public static readonly GAME_SPEED_FAST = 1000;\n  public static readonly GAME_SPEED_VERY_FAST = 2000;\n  public static readonly GAME_SPEED_VERY_SLOW = 50;\n  public static readonly GAME_SPEED_SLOWEST = 10;\n  public static readonly GAME_SPEED_FASTEST = 1000;\n  public static readonly GAME_SPEED_SLOWEST_STRING = 'slowest';\n  public static readonly GAME_SPEED_SLOW_STRING = 'slow';\n  public static readonly GAME_SPEED_FAST_STRING = 'fast';\n  public static readonly GAME_SPEED_FASTEST_STRING = 'fastest';\n  public static readonly GAME_SPEED_DEFAULT_STRING = 'default';\n  public static readonly GAME_SPEED_VERY_SLOW_STRING = 'very slow';\n  public static readonly GAME_SPEED_VERY_FAST_STRING = 'very fast';\n  /**\n   * State of the game (running, paused, stopped)\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly enumGameState = {\n    GAME_STATE_START: 'start',\n    GAME_STATE_PLAY: 'play',\n    GAME_STATE_PAUSE: 'pause',\n    GAME_STATE_END: 'end',\n  };\n  /**\n   * Zones (Screen zones in the game screen)\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly ZONES = {\n    GAME_ZONE: 'game-zone',\n    NEXT_BLOCK_ZONE: 'next-block-zone',\n    SCORE_PROFILE_ZONE: 'score-profile-zone',\n    HOLD_BLOCK_ZONE: 'hold-block-zone',\n  };\n  /**\n   * Font style (font-family) for the game\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static font = {\n    font: '16px Arial',\n    fill: '#ffffff',\n    align: 'center',\n  };\n  /**\n   * HOLD KEY (key code) input pressed\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static HOLD_KEY = 'H';\n\n  /**\n   * Music volume (0-1) (default: 0.5)\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly MUSIC_VOLUME = 0.5;\n  /**\n   * Sound volume (0-1) (default: 0.5)\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly SOUND_VOLUME = 0.5;\n\n  /**\n   * Points needed to enter next level\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly POINTS_FOR_LEVEL_CHANGE = 1000;\n\n  /**\n   * Hold zone max width (in block)\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly HOLD_ZONE_WIDTH = 4;\n  /**\n   * Hold zone max height (in block)\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly HOLD_ZONE_HEIGHT = 4;\n\n  /**\n   * Greetings Text\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly GREETING_TEXST =\n    'Welcome to Tetris! Press spacebar to start.';\n\n  /**\n   * Instructions Text\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly INSTRUCTIONS_TEXT =\n    ' Use the arrow keys to move the block.\\n' +\n    ' Use the spacebar to rotate the block.\\n';\n  /**\n   * Game Background Color\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly GAME_BACKGROUND_COLOR = '#000000';\n\n  public static readonly SCORE_PROFILE_ZONE_WIDTH = 4;\n  public static readonly SCORE_PROFILE_ZONE_HEIGHT = 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GameController.html":{"url":"controllers/GameController.html","title":"controller - GameController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GameController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controller/game.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                GameController is the controller for the game.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hold\n                            \n                            \n                                    Private\n                                move\n                            \n                            \n                                    Private\n                                rotate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hold\n                        \n                    \n                \n            \n            \n                \n                    \n                    hold()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/hold')\n                \n            \n\n            \n                \n                    Defined in src/controller/game.controller.ts:31\n                \n            \n\n\n            \n                \n                    Hold the tetramino\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        {void}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        move\n                        \n                    \n                \n            \n            \n                \n                    \n                    move()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/move')\n                \n            \n\n            \n                \n                    Defined in src/controller/game.controller.ts:42\n                \n            \n\n\n            \n                \n                    Move the tetramino\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        {void}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        rotate\n                        \n                    \n                \n            \n            \n                \n                    \n                    rotate()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/rotate')\n                \n            \n\n            \n                \n                    Defined in src/controller/game.controller.ts:20\n                \n            \n\n\n            \n                \n                    Rotate the tetramino\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        {void}\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { GameService } from 'src/service/game.service';\n/**\n * GameController is the controller for the game.\n *\n * @export\n * @class GameController\n */\n@Controller()\nexport class GameController {\n  constructor(private readonly gameservice: GameService) {}\n  /**\n   * Rotate the tetramino\n   *\n   * @private\n   * @return {*}  {void}\n   * @memberof GameController\n   */\n  @Get('/rotate')\n  private rotate(): void {\n    return this.gameservice.rotate();\n  }\n  /**\n   * Hold the tetramino\n   *\n   * @private\n   * @return {*}  {void}\n   * @memberof GameController\n   */\n  @Get('/hold')\n  private hold(): void {\n    return this.gameservice.hold();\n  }\n  /**\n   * Move the tetramino\n   *\n   * @private\n   * @return {*}  {void}\n   * @memberof GameController\n   */\n  @Get('/move')\n  private move(): void {\n    return this.gameservice.move();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GameModule.html":{"url":"modules/GameModule.html","title":"module - GameModule","body":"\n                   \n\n\n\n\n    Modules\n    GameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GameModule\n\n\n\ncluster_GameModule_providers\n\n\n\ncluster_GameModule_imports\n\n\n\n\nGameService\n\nGameService\n\n\n\nGameModule\n\nGameModule\n\nGameModule -->\n\nGameService->GameModule\n\n\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\nNextBlockGeneratorService\n\nNextBlockGeneratorService\n\nGameModule -->\n\nNextBlockGeneratorService->GameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GameService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GameController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GameService\n                        \n                        \n                            NextBlockGeneratorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { GameController } from 'src/controller/game.controller';\nimport { Level } from 'src/model/level.entity';\nimport { Player } from 'src/model/player.entity';\nimport { Score } from 'src/model/score.entity';\nimport { Shape } from 'src/model/shape.entity';\nimport { Zone } from 'src/model/zone.entity';\nimport { NextBlockGeneratorService } from 'src/service/nextblockzone.service';\nimport { GameService } from './../service/game.service';\n\n@Module({\n  imports: [\n    NextBlockGeneratorService,\n    GameService,\n    TypeOrmModule.forFeature([Player, Zone, Shape, Score, Level]),\n  ],\n  providers: [GameService],\n  controllers: [GameController],\n})\nexport class GameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/game.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Game service class for the game module of the game.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backgroundColor\n                            \n                            \n                                height\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hold\n                            \n                            \n                                move\n                            \n                            \n                                    Private\n                                onGameStart\n                            \n                            \n                                rotate\n                            \n                            \n                                setAllZones\n                            \n                            \n                                setGameZone\n                            \n                            \n                                setHoldZone\n                            \n                            \n                                    Private\n                                setNextZone\n                            \n                            \n                                setScoreProfileZone\n                            \n                            \n                                setZone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(nextBlockGeneratorService: NextBlockGeneratorService)\n                    \n                \n                        \n                            \n                                Defined in src/service/game.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nextBlockGeneratorService\n                                                  \n                                                        \n                                                                        NextBlockGeneratorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hold\n                        \n                    \n                \n            \n            \n                \nhold()\n                \n            \n\n\n            \n                \n                    Defined in src/service/game.service.ts:138\n                \n            \n\n\n            \n                \n                    hold the tetramino\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        {number}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        move\n                        \n                    \n                \n            \n            \n                \nmove()\n                \n            \n\n\n            \n                \n                    Defined in src/service/game.service.ts:147\n                \n            \n\n\n            \n                \n                    move the tetramino\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        {number}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onGameStart\n                        \n                    \n                \n            \n            \n                \n                    \n                    onGameStart()\n                \n            \n\n\n            \n                \n                    Defined in src/service/game.service.ts:119\n                \n            \n\n\n            \n                \n                    Start the game.\n\n\n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        {any[]}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rotate\n                        \n                    \n                \n            \n            \n                \nrotate()\n                \n            \n\n\n            \n                \n                    Defined in src/service/game.service.ts:128\n                \n            \n\n\n            \n                \n                    Rotate the tetramino\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        {number}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAllZones\n                        \n                    \n                \n            \n            \n                \nsetAllZones()\n                \n            \n\n\n            \n                \n                    Defined in src/service/game.service.ts:43\n                \n            \n\n\n            \n                \n                    Set all the zones.\n\n\n                    \n                    \n                    \n                        Returns :         Zone[]\n\n                    \n                    \n                        {Zone[]}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGameZone\n                        \n                    \n                \n            \n            \n                \nsetGameZone()\n                \n            \n\n\n            \n                \n                    Defined in src/service/game.service.ts:59\n                \n            \n\n\n            \n                \n                    Set the game zone.\n\n\n                    \n                    \n                    \n                        Returns :         Zone\n\n                    \n                    \n                        {Zone}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHoldZone\n                        \n                    \n                \n            \n            \n                \nsetHoldZone()\n                \n            \n\n\n            \n                \n                    Defined in src/service/game.service.ts:74\n                \n            \n\n\n            \n                \n                    Set the hold zone.\n\n\n                    \n                    \n                    \n                        Returns :         Zone\n\n                    \n                    \n                        {Zone}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setNextZone\n                        \n                    \n                \n            \n            \n                \n                    \n                    setNextZone()\n                \n            \n\n\n            \n                \n                    Defined in src/service/game.service.ts:104\n                \n            \n\n\n            \n                \n                    Start the game.\n\n\n                    \n                    \n                    \n                        Returns :         Zone\n\n                    \n                    \n                        {Zone}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setScoreProfileZone\n                        \n                    \n                \n            \n            \n                \nsetScoreProfileZone()\n                \n            \n\n\n            \n                \n                    Defined in src/service/game.service.ts:89\n                \n            \n\n\n            \n                \n                    Set the score profile zone.\n\n\n                    \n                    \n                    \n                        Returns :         Zone\n\n                    \n                    \n                        {Zone}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setZone\n                        \n                    \n                \n            \n            \n                \nsetZone(zoneType: string, height: number, width: number, backgroundColor: string)\n                \n            \n\n\n            \n                \n                    Defined in src/service/game.service.ts:29\n                \n            \n\n\n            \n                \n                    Set the zone.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    zoneType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    backgroundColor\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Zone\n\n                    \n                    \n                        {Zone}\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        backgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/service/game.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/service/game.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/service/game.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { IScreen } from 'src/abstract/screen.abstract';\nimport { GameConstants } from 'src/constants/game.constants';\nimport { Zone } from 'src/model/zone.entity';\nimport { NextBlockGeneratorService } from './nextblockzone.service';\n/**\n * Game service class for the game module of the game.\n *\n * @export\n * @class GameService\n * @implements {IScreen}\n */\n@Injectable()\nexport class GameService implements IScreen {\n  constructor(private nextBlockGeneratorService: NextBlockGeneratorService) {}\n  height: number;\n  width: number;\n  backgroundColor: string;\n  /**\n   * Set the zone.\n   *\n   * @param {string} zoneType\n   * @param {number} height\n   * @param {number} width\n   * @param {string} backgroundColor\n   * @return {*}  {Zone}\n   * @memberof GameService\n   */\n  setZone(\n    zoneType: string,\n    height: number,\n    width: number,\n    backgroundColor: string,\n  ): Zone {\n    return new Zone(zoneType, height, width, backgroundColor);\n  }\n  /**\n   * Set all the zones.\n   *\n   * @return {*}  {Zone[]}\n   * @memberof GameService\n   */\n  setAllZones(): Zone[] {\n    this.nextBlockGeneratorService.generateStack();\n    return [\n      this.setGameZone(),\n      this.setHoldZone(),\n      this.setScoreProfileZone(),\n      this.setNextZone(),\n    ];\n  }\n\n  /**\n   * Set the game zone.\n   *\n   * @return {*}  {Zone}\n   * @memberof GameService\n   */\n  setGameZone(): Zone {\n    return this.setZone(\n      GameConstants.ZONES.GAME_ZONE,\n      GameConstants.GAME_HEIGHT,\n      GameConstants.GAME_WIDTH,\n      GameConstants.GAME_BACKGROUND_COLOR,\n    );\n  }\n  /**\n   * Set the hold zone.\n   *\n   * @private\n   * @return {*}  {Zone}\n   * @memberof GameService\n   */\n  setHoldZone(): Zone {\n    return this.setZone(\n      GameConstants.ZONES.HOLD_BLOCK_ZONE,\n      GameConstants.HOLD_ZONE_HEIGHT,\n      GameConstants.HOLD_ZONE_WIDTH,\n      GameConstants.GAME_BACKGROUND_COLOR,\n    );\n  }\n  /**\n   * Set the score profile zone.\n   *\n   * @private\n   * @return {*}  {Zone}\n   * @memberof GameService\n   */\n  setScoreProfileZone(): Zone {\n    return this.setZone(\n      GameConstants.ZONES.SCORE_PROFILE_ZONE,\n      GameConstants.SCORE_PROFILE_ZONE_HEIGHT,\n      GameConstants.SCORE_PROFILE_ZONE_WIDTH,\n      GameConstants.GAME_BACKGROUND_COLOR,\n    );\n  }\n  /**\n   * Start the game.\n   *\n   * @private\n   * @return {*}  {Zone}\n   * @memberof GameService\n   */\n  private setNextZone(): Zone {\n    return this.setZone(\n      GameConstants.ZONES.NEXT_BLOCK_ZONE,\n      GameConstants.HOLD_ZONE_HEIGHT,\n      GameConstants.HOLD_ZONE_WIDTH,\n      GameConstants.GAME_BACKGROUND_COLOR,\n    );\n  }\n  /**\n   * Start the game.\n   *\n   * @private\n   * @return {*}  {any[]}\n   * @memberof GameService\n   */\n  private onGameStart(): any[] {\n    return this.setAllZones();\n  }\n  /**\n   * Rotate the tetramino\n   *\n   * @return {*}  {number}\n   * @memberof GameService\n   */\n  rotate(): void {\n    this.rotate();\n  }\n\n  /**\n   * hold the tetramino\n   *\n   * @return {*}  {number}\n   * @memberof GameService\n   */\n  hold(): void {\n    this.hold();\n  }\n  /**\n   * move the tetramino\n   *\n   * @return {*}  {number}\n   * @memberof GameService\n   */\n  move(): void {\n    this.move();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GameZone.html":{"url":"modules/GameZone.html","title":"module - GameZone","body":"\n                   \n\n\n\n\n    Modules\n    GameZone\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GameZone\n\n\n\ncluster_GameZone_providers\n\n\n\ncluster_GameZone_imports\n\n\n\n\nGameService\n\nGameService\n\n\n\nGameZone\n\nGameZone\n\nGameZone -->\n\nGameService->GameZone\n\n\n\n\n\nNextBlockGeneratorService\n\nNextBlockGeneratorService\n\nGameZone -->\n\nNextBlockGeneratorService->GameZone\n\n\n\n\n\nZoneFactoryService\n\nZoneFactoryService\n\nGameZone -->\n\nZoneFactoryService->GameZone\n\n\n\nGameZone -->\n\nZoneFactoryService->GameZone\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/gamezone.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ZoneFactoryService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GameService\n                        \n                        \n                            NextBlockGeneratorService\n                        \n                        \n                            ZoneFactoryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Player } from 'src/model/player.entity';\nimport { Zone } from 'src/model/zone.entity';\nimport { NextBlockGeneratorService } from 'src/service/nextblockzone.service';\nimport { ZoneFactoryService } from 'src/service/zonefactory.service';\nimport { Level } from './../model/level.entity';\nimport { GameService } from './game.service';\n\n@Module({\n  imports: [\n    GameService,\n    TypeOrmModule.forFeature([Zone, Player, Level]),\n    NextBlockGeneratorService,\n    ZoneFactoryService,\n  ],\n  providers: [ZoneFactoryService],\n  controllers: [],\n})\nexport class GameZone {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HoldZone.html":{"url":"injectables/HoldZone.html","title":"injectable - HoldZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HoldZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/holdzone.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateZone\n                            \n                            \n                                onPressHold\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameservice: GameService)\n                    \n                \n                        \n                            \n                                Defined in src/service/holdzone.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameservice\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateZone\n                        \n                    \n                \n            \n            \n                \ngenerateZone()\n                \n            \n\n\n            \n                \n                    Defined in src/service/holdzone.service.ts:13\n                \n            \n\n\n            \n                \n                    Generate game Zone\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPressHold\n                        \n                    \n                \n            \n            \n                \nonPressHold()\n                \n            \n\n\n            \n                \n                    Defined in src/service/holdzone.service.ts:22\n                \n            \n\n\n            \n                \n                    On press of Hold Button\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { GameService } from './game.service';\n\n@Injectable()\nexport class HoldZone {\n  constructor(private gameservice: GameService) {}\n  /**\n   * Generate game Zone\n   *\n   * @return {*}\n   * @memberof HoldZone\n   */\n  generateZone() {\n    return this.gameservice.setHoldZone();\n  }\n  /**\n   * On press of Hold Button\n   *\n   * @return {*}\n   * @memberof HoldZone\n   */\n  onPressHold() {\n    return this.onPressHold();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HoldZoneModule.html":{"url":"modules/HoldZoneModule.html","title":"module - HoldZoneModule","body":"\n                   \n\n\n\n\n    Modules\n    HoldZoneModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HoldZoneModule\n\n\n\ncluster_HoldZoneModule_imports\n\n\n\ncluster_HoldZoneModule_providers\n\n\n\n\nGameService\n\nGameService\n\n\n\nHoldZoneModule\n\nHoldZoneModule\n\nHoldZoneModule -->\n\nGameService->HoldZoneModule\n\n\n\n\n\nNextBlockGeneratorService\n\nNextBlockGeneratorService\n\nHoldZoneModule -->\n\nNextBlockGeneratorService->HoldZoneModule\n\n\n\n\n\nZoneFactoryService\n\nZoneFactoryService\n\nHoldZoneModule -->\n\nZoneFactoryService->HoldZoneModule\n\n\n\n\n\nHoldZone\n\nHoldZone\n\nHoldZoneModule -->\n\nHoldZone->HoldZoneModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/holdzone.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HoldZone\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GameService\n                        \n                        \n                            NextBlockGeneratorService\n                        \n                        \n                            ZoneFactoryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Player } from 'src/model/player.entity';\nimport { Zone } from 'src/model/zone.entity';\nimport { HoldZone } from 'src/service/holdzone.service';\nimport { NextBlockGeneratorService } from 'src/service/nextblockzone.service';\nimport { ZoneFactoryService } from 'src/service/zonefactory.service';\nimport { GameService } from './game.service';\n\n@Module({\n  imports: [\n    GameService,\n    TypeOrmModule.forFeature([Zone, Player]),\n    NextBlockGeneratorService,\n    ZoneFactoryService,\n  ],\n  providers: [HoldZone],\n  controllers: [],\n})\nexport class HoldZoneModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IScreen.html":{"url":"interfaces/IScreen.html","title":"interface - IScreen","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IScreen\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/abstract/screen.abstract.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            backgroundColor\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        setAllZones\n                                    \n                                \n                                \n                                    \n                                        setZone\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setAllZones\n                        \n                    \n                \n            \n            \n                \nsetAllZones()\n                \n            \n\n\n            \n                \n                    Defined in src/abstract/screen.abstract.ts:36\n                \n            \n\n\n            \n                \n                    Setup all the zones on the game console screen\n\n\n                    \n                        Returns :         Zone[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setZone\n                        \n                    \n                \n            \n            \n                \nsetZone(zoneType: any, height: number, width: number, bgColor: string)\n                \n            \n\n\n            \n                \n                    Defined in src/abstract/screen.abstract.ts:30\n                \n            \n\n\n            \n                \n                    Set screen's type according to zone provided\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    zoneType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bgColor\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Zone\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backgroundColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backgroundColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The screen's background color\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Height of the screen zone in blocks\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of the screen zone in blocks\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Zone } from 'src/model/zone.entity';\nexport interface IScreen {\n  /**\n   * Height of the screen zone in blocks\n   *\n   * @type {number}\n   * @memberof IScreen\n   */\n  height: number;\n  /**\n   * Width of the screen zone in blocks\n   *\n   * @type {number}\n   * @memberof IScreen\n   */\n  width: number;\n  /**\n   * The screen's background color\n   *\n   * @type {string}\n   * @memberof IScreen\n   */\n  backgroundColor: string;\n  /**\n   * Set screen's type according to zone provided\n   *\n   * @param {string} zoneType\n   * @memberof IScreen\n   */\n  setZone(zoneType: any, height: number, width: number, bgColor: string): Zone;\n  /**\n   * Setup all the zones on the game console screen\n   *\n   * @memberof IScreen\n   */\n  setAllZones(): Zone[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IShape.html":{"url":"interfaces/IShape.html","title":"interface - IShape","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IShape\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/shape.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Shape interface for block shapes in tetris.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            rotation\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The shape's color.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The shape's height (in blocks). This is the height of the shape.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The shape's identifier. This is used to identify the shape. It is also used to identify the shape in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The shape's name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The shape's rotation (in degrees).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The shape's width (in blocks). This is the width of the shape.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current shape's position in x axis (in blocks).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current shape's position in y axis (in blocks).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IShape {\n  /**\n   * The shape's identifier. This is used to identify the shape. It is also used to identify the shape in the database.\n   *\n   * @type {number}\n   * @memberof IShape\n   */\n  id: number;\n  /**\n   * The shape's name.\n   *\n   * @type {string}\n   * @memberof IShape\n   */\n  name: string;\n  /**\n   * The shape's color.\n   *\n   * @type {string}\n   * @memberof IShape\n   */\n  color: string;\n  /**\n   * The shape's width (in blocks). This is the width of the shape.\n   *\n   * @type {number}\n   * @memberof IShape\n   */\n  width: number;\n  /**\n   * The shape's height (in blocks). This is the height of the shape.\n   *\n   * @type {number}\n   * @memberof IShape\n   */\n  height: number;\n  /**\n   * Current shape's position in x axis (in blocks).\n   *\n   * @type {number}\n   * @memberof IShape\n   */\n  x: number;\n  /**\n   * Current shape's position in y axis (in blocks).\n   *\n   * @type {number}\n   * @memberof IShape\n   */\n  y: number;\n  /**\n   * The shape's rotation (in degrees).\n   *\n   * @type {number}\n   * @memberof IShape\n   */\n  rotation: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Level.html":{"url":"entities/Level.html","title":"entity - Level","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Level\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/level.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The level model\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                id\n                            \n                            \n                                number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/level.entity.ts:18\n                        \n                    \n\n            \n                \n                    Id of the level (unique)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/level.entity.ts:27\n                        \n                    \n\n            \n                \n                    Level of the player (current)\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * The level model\n *\n * @export\n * @class Level\n */\n@Entity('level')\nexport class Level {\n  /**\n   * Id of the level (unique)\n   *\n   * @type {number}\n   * @memberof Level\n   */\n  @PrimaryGeneratedColumn()\n  private id: number;\n\n  /**\n   * Level of the player (current)\n   *\n   * @type {number}\n   * @memberof Level\n   */\n  @Column()\n  number: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Music.html":{"url":"entities/Music.html","title":"entity - Music","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Music\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/music.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The music model\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                artist\n                            \n                            \n                                    Private\n                                fileName\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                name\n                            \n                            \n                                    Private\n                                stressLevel\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        artist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/music.entity.ts:42\n                        \n                    \n\n            \n                \n                    Music's artist\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/music.entity.ts:34\n                        \n                    \n\n            \n                \n                    Path of the music\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/music.entity.ts:18\n                        \n                    \n\n            \n                \n                    Id of the music (unique)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/music.entity.ts:26\n                        \n                    \n\n            \n                \n                    Name of the music\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stressLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, Level => Level.number)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/music.entity.ts:50\n                        \n                    \n\n            \n                \n                    Music's stress level (1-10)\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Level } from './level.entity';\n/**\n * The music model\n *\n * @export\n * @class Music\n */\n@Entity('music')\nexport class Music {\n  /**\n   * Id of the music (unique)\n   *\n   * @type {number}\n   * @memberof Music\n   */\n  @PrimaryGeneratedColumn()\n  private id: number;\n  /**\n   * Name of the music\n   *\n   * @type {string}\n   * @memberof Music\n   */\n  @Column()\n  private name: string;\n  /**\n   * Path of the music\n   *\n   * @type {string}\n   * @memberof Music\n   */\n  @Column()\n  private fileName: string;\n  /**\n   * Music's artist\n   *\n   * @type {string}\n   * @memberof Music\n   */\n  @Column()\n  private artist: string;\n  /**\n   * Music's stress level (1-10)\n   *\n   * @type {number}\n   * @memberof Music\n   */\n  @OneToOne(() => Level, (Level) => Level.number)\n  private stressLevel: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NextBlockGeneratorModule.html":{"url":"modules/NextBlockGeneratorModule.html","title":"module - NextBlockGeneratorModule","body":"\n                   \n\n\n\n\n    Modules\n    NextBlockGeneratorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NextBlockGeneratorModule\n\n\n\ncluster_NextBlockGeneratorModule_providers\n\n\n\ncluster_NextBlockGeneratorModule_imports\n\n\n\n\nBlockGeneratorService\n\nBlockGeneratorService\n\n\n\nNextBlockGeneratorModule\n\nNextBlockGeneratorModule\n\nNextBlockGeneratorModule -->\n\nBlockGeneratorService->NextBlockGeneratorModule\n\n\n\n\n\nNextBlockGeneratorService\n\nNextBlockGeneratorService\n\nNextBlockGeneratorModule -->\n\nNextBlockGeneratorService->NextBlockGeneratorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/nextblockgenerator.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NextBlockGeneratorService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockGeneratorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { BlockGeneratorService } from 'src/service/blockgenerator.service';\nimport { NextBlockGeneratorService } from 'src/service/nextblockzone.service';\nimport { Shape } from './../model/shape.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Shape]), BlockGeneratorService],\n  providers: [NextBlockGeneratorService],\n  controllers: [],\n})\nexport class NextBlockGeneratorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NextBlockGeneratorService.html":{"url":"injectables/NextBlockGeneratorService.html","title":"injectable - NextBlockGeneratorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NextBlockGeneratorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/nextblockzone.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Generates the next block for the game module\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateStack\n                            \n                            \n                                getBlocks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(blockGeneratorService: BlockGeneratorService)\n                    \n                \n                        \n                            \n                                Defined in src/service/nextblockzone.service.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an instance of NextBlockGeneratorService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        blockGeneratorService\n                                                  \n                                                        \n                                                                        BlockGeneratorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateStack\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateStack()\n                \n            \n\n\n            \n                \n                    Defined in src/service/nextblockzone.service.ts:26\n                \n            \n\n\n            \n                \n                    Generates the stack which shows the next block\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBlocks\n                        \n                    \n                \n            \n            \n                \ngetBlocks()\n                \n            \n\n\n            \n                \n                    Defined in src/service/nextblockzone.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        stack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Shape[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/service/nextblockzone.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Shape } from 'src/model/shape.entity';\nimport { BlockGeneratorService } from './blockgenerator.service';\n\n/**\n * Generates the next block for the game module\n *\n * @export\n * @class NextBlockGeneratorService\n */\n@Injectable()\nexport class NextBlockGeneratorService {\n  stack: Shape[] = [];\n  /**\n   * Creates an instance of NextBlockGeneratorService.\n   * @param {BlockGeneratorService} blockGeneratorService\n   * @memberof NextBlockGeneratorService\n   */\n  constructor(private blockGeneratorService: BlockGeneratorService) {}\n  /**\n   * Generates the stack which shows the next block\n   *\n   * @return {*}\n   * @memberof NextBlockGeneratorService\n   */\n  async generateStack() {\n    this.stack.push(await this.blockGeneratorService.generateBlocks());\n    return this.stack;\n  }\n  getBlocks() {\n    this.stack.pop();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Player.html":{"url":"entities/Player.html","title":"entity - Player","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Player\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/player.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The player model\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentLevel\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                lines\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/player.entity.ts:45\n                        \n                    \n\n            \n                \n                    Current level of the player (current) (1-10)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/player.entity.ts:21\n                        \n                    \n\n            \n                \n                    Id of the player (unique)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/player.entity.ts:37\n                        \n                    \n\n            \n                \n                    Is the player active?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lines\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/player.entity.ts:54\n                        \n                    \n\n            \n                \n                    lines cleared by the player (current)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/player.entity.ts:29\n                        \n                    \n\n            \n                \n                    Name of the player\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * The player model\n *\n * @class Player\n */\n@Entity('player')\nexport class Player {\n  constructor(name: string) {\n    this.name = name;\n  }\n\n  /**\n   * Id of the player (unique)\n   *\n   * @type {number}\n   * @memberof Player\n   */\n  @PrimaryGeneratedColumn()\n  id: number;\n  /**\n   * Name of the player\n   *\n   * @type {string}\n   * @memberof Player\n   */\n  @Column()\n  name: string;\n  /**\n   * Is the player active?\n   *\n   * @type {boolean}\n   * @memberof Player\n   */\n  @Column({ default: true })\n  isActive: boolean;\n  /**\n   * Current level of the player (current) (1-10)\n   *\n   * @type {number}\n   * @memberof Player\n   */\n  @Column({ default: 0 })\n  currentLevel: number;\n\n  /**\n   * lines cleared by the player (current)\n   *\n   * @type {number}\n   * @memberof Player\n   */\n  @Column({ default: 0 })\n  lines: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlayerConstants.html":{"url":"classes/PlayerConstants.html","title":"class - PlayerConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlayerConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/constants/player.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Player constants\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PlayerConstants {}\n// TODO: Add constants for player\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlayerModule.html":{"url":"modules/PlayerModule.html","title":"module - PlayerModule","body":"\n                   \n\n\n\n\n    Modules\n    PlayerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PlayerModule\n\n\n\ncluster_PlayerModule_providers\n\n\n\n\nPlayerService\n\nPlayerService\n\n\n\nPlayerModule\n\nPlayerModule\n\nPlayerModule -->\n\nPlayerService->PlayerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/player.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PlayerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Player } from '../model/player.entity';\nimport { PlayerService } from '../service/player.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Player])],\n  providers: [PlayerService],\n  controllers: [],\n})\nexport class PlayerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                healthCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        healthCheck\n                        \n                    \n                \n            \n            \n                \n                    \n                    healthCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/service/player.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PlayerService {\n  private healthCheck(): string {\n    return 'tetris!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Score.html":{"url":"entities/Score.html","title":"entity - Score","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Score\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/score.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The score model (for the score) in the database\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                highScore\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                score\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        highScore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/score.entity.ts:37\n                        \n                    \n\n            \n                \n                    Highscore of the player (highest)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, player => player.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/score.entity.ts:19\n                        \n                    \n\n            \n                \n                    Id of the score (unique) and common with the player\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/score.entity.ts:28\n                        \n                    \n\n            \n                \n                    Score of the player (current)\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToMany } from 'typeorm';\nimport { Player } from './player.entity';\n\n/**\n * The score model (for the score) in the database\n *\n * @export\n * @class Score\n */\n@Entity('score')\nexport class Score {\n  /**\n   * Id of the score (unique) and common with the player\n   *\n   * @type {number}\n   * @memberof Score\n   */\n  @OneToMany(() => Player, (player) => player.id)\n  private id: number;\n\n  /**\n   * Score of the player (current)\n   *\n   * @type {number}\n   * @memberof Score\n   */\n  @Column()\n  private score: number;\n\n  /**\n   * Highscore of the player (highest)\n   *\n   * @type {number}\n   * @memberof Score\n   */\n  @Column()\n  private highScore: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScoreZone.html":{"url":"injectables/ScoreZone.html","title":"injectable - ScoreZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScoreZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/scorezone.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateZone\n                            \n                            \n                                showDetails\n                            \n                            \n                                showLevel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameservice: GameService, level: Level)\n                    \n                \n                        \n                            \n                                Defined in src/service/scorezone.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameservice\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        Level\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateZone\n                        \n                    \n                \n            \n            \n                \ngenerateZone()\n                \n            \n\n\n            \n                \n                    Defined in src/service/scorezone.service.ts:14\n                \n            \n\n\n            \n                \n                    Generate score profile Zone\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDetails\n                        \n                    \n                \n            \n            \n                \nshowDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/service/scorezone.service.ts:23\n                \n            \n\n\n            \n                \n                    Show Details of Player's profile\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLevel\n                        \n                    \n                \n            \n            \n                \nshowLevel()\n                \n            \n\n\n            \n                \n                    Defined in src/service/scorezone.service.ts:32\n                \n            \n\n\n            \n                \n                    Shows the current level of the player\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Level } from './../model/level.entity';\nimport { GameService } from './game.service';\n\n@Injectable()\nexport class ScoreZone {\n  constructor(private gameservice: GameService, private level: Level) {}\n  /**\n   * Generate score profile Zone\n   *\n   * @return {*}\n   * @memberof ScoreZone\n   */\n  generateZone() {\n    return this.gameservice.setScoreProfileZone();\n  }\n  /**\n   * Show Details of Player's profile\n   *\n   * @return {*}\n   * @memberof ScoreZone\n   */\n  showDetails() {\n    return this.showDetails();\n  }\n  /**\n   * Shows the current level of the player\n   *\n   * @return {*}\n   * @memberof ScoreZone\n   */\n  showLevel() {\n    this.level;\n    return this.showLevel();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScoreZoneModule.html":{"url":"modules/ScoreZoneModule.html","title":"module - ScoreZoneModule","body":"\n                   \n\n\n\n\n    Modules\n    ScoreZoneModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ScoreZoneModule\n\n\n\ncluster_ScoreZoneModule_providers\n\n\n\ncluster_ScoreZoneModule_imports\n\n\n\n\nGameService\n\nGameService\n\n\n\nScoreZoneModule\n\nScoreZoneModule\n\nScoreZoneModule -->\n\nGameService->ScoreZoneModule\n\n\n\n\n\nNextBlockGeneratorService\n\nNextBlockGeneratorService\n\nScoreZoneModule -->\n\nNextBlockGeneratorService->ScoreZoneModule\n\n\n\n\n\nZoneFactoryService\n\nZoneFactoryService\n\nScoreZoneModule -->\n\nZoneFactoryService->ScoreZoneModule\n\n\n\n\n\nScoreZone\n\nScoreZone\n\nScoreZoneModule -->\n\nScoreZone->ScoreZoneModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/scorezone.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ScoreZone\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GameService\n                        \n                        \n                            NextBlockGeneratorService\n                        \n                        \n                            ZoneFactoryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Player } from 'src/model/player.entity';\nimport { Zone } from 'src/model/zone.entity';\nimport { NextBlockGeneratorService } from 'src/service/nextblockzone.service';\nimport { ScoreZone } from 'src/service/scorezone.service';\nimport { ZoneFactoryService } from 'src/service/zonefactory.service';\nimport { Level } from './../model/level.entity';\nimport { GameService } from './game.service';\n\n@Module({\n  imports: [\n    GameService,\n    TypeOrmModule.forFeature([Zone, Player, Level]),\n    NextBlockGeneratorService,\n    ZoneFactoryService,\n  ],\n  providers: [ScoreZone],\n  controllers: [],\n})\nexport class ScoreZoneModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Shape.html":{"url":"entities/Shape.html","title":"entity - Shape","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Shape\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/shape.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The shape model (entity) in the database (database schema)\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                height\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                rotation\n                            \n                            \n                                width\n                            \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/shape.entity.ts:59\n                        \n                    \n\n            \n                \n                    The shape's color.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/shape.entity.ts:75\n                        \n                    \n\n            \n                \n                    The shape's height (in blocks). This is the height of the shape.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/shape.entity.ts:43\n                        \n                    \n\n            \n                \n                    The shape's identifier. This is used to identify the shape. It is also used to identify the shape in the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/shape.entity.ts:51\n                        \n                    \n\n            \n                \n                    The shape's name.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rotation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/shape.entity.ts:99\n                        \n                    \n\n            \n                \n                    The shape's rotation (in degrees).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/shape.entity.ts:67\n                        \n                    \n\n            \n                \n                    The shape's width (in blocks). This is the width of the shape.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/shape.entity.ts:83\n                        \n                    \n\n            \n                \n                    Current shape's position in x axis (in blocks).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/shape.entity.ts:91\n                        \n                    \n\n            \n                \n                    Current shape's position in y axis (in blocks).\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { IShape } from './../interface/shape.interface';\n/**\n * The shape model (entity) in the database (database schema)\n *\n * @export\n * @class Shape\n * @implements {IShape}\n */\n@Entity('shape')\nexport class Shape implements IShape {\n  /**\n   * Creates an instance of Shape.\n   * @param {string} name\n   * @param {string} color\n   * @param {number} width\n   * @param {number} height\n   * @param {number} x\n   * @param {number} y\n   * @memberof Shape\n   */\n  constructor(\n    name: string,\n    color: string,\n    width: number,\n    height: number,\n    x: number,\n    y: number,\n  ) {\n    this.color = color;\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n  }\n  /**\n   * The shape's identifier. This is used to identify the shape. It is also used to identify the shape in the database.\n   *\n   * @type {number}\n   * @memberof Shape\n   */\n  @PrimaryGeneratedColumn()\n  id: number;\n  /**\n   * The shape's name.\n   *\n   * @type {string}\n   * @memberof Shape\n   */\n  @Column()\n  name: string;\n  /**\n   * The shape's color.\n   *\n   * @type {string}\n   * @memberof Shape\n   */\n  @Column()\n  color: string;\n  /**\n   * The shape's width (in blocks). This is the width of the shape.\n   *\n   * @type {number}\n   * @memberof Shape\n   */\n  @Column()\n  width: number;\n  /**\n   * The shape's height (in blocks). This is the height of the shape.\n   *\n   * @type {number}\n   * @memberof Shape\n   */\n  @Column()\n  height: number;\n  /**\n   * Current shape's position in x axis (in blocks).\n   *\n   * @type {number}\n   * @memberof Shape\n   */\n  @Column()\n  x: number;\n  /**\n   * Current shape's position in y axis (in blocks).\n   *\n   * @type {number}\n   * @memberof Shape\n   */\n  @Column()\n  y: number;\n  /**\n   * The shape's rotation (in degrees).\n   *\n   * @type {number}\n   * @memberof Shape\n   */\n  @Column()\n  rotation: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShapeConstants.html":{"url":"classes/ShapeConstants.html","title":"class - ShapeConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShapeConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/constants/shape.constants.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                HEIGHT_SQUARE\n                            \n                            \n                                    Static\n                                    Readonly\n                                ROTATION_SHAPE\n                            \n                            \n                                    Static\n                                    Readonly\n                                SHAPE_COLOR\n                            \n                            \n                                    Static\n                                    Readonly\n                                SHAPE_COLOR_HEX\n                            \n                            \n                                    Static\n                                    Readonly\n                                SHAPE_COLOR_RGB\n                            \n                            \n                                    Static\n                                    Readonly\n                                SHAPETYPE\n                            \n                            \n                                    Static\n                                    Readonly\n                                WIDTH_SQUARE\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        HEIGHT_SQUARE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/constants/shape.constants.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ROTATION_SHAPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    DEGREE_0: 0,\n    DEGREE_90: 90,\n    DEGREE_180: 180,\n    DEGREE_270: 270,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/constants/shape.constants.ts:25\n                        \n                    \n\n            \n                \n                    Tells what side shape is falling on\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        SHAPE_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    RED: 'red',\n    GREEN: 'green',\n    BLUE: 'blue',\n    YELLOW: 'yellow',\n    PURPLE: 'purple',\n    ORANGE: 'orange',\n    PINK: 'pink',\n    BLACK: 'black',\n    WHITE: 'white',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/constants/shape.constants.ts:37\n                        \n                    \n\n            \n                \n                    Shape's color.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        SHAPE_COLOR_HEX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    RED: '#FF0000',\n    GREEN: '#00FF00',\n    BLUE: '#0000FF',\n    YELLOW: '#FFFF00',\n    PURPLE: '#FF00FF',\n    ORANGE: '#FFA500',\n    PINK: '#FFC0CB',\n    BLACK: '#000000',\n    WHITE: '#FFFFFF',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/constants/shape.constants.ts:72\n                        \n                    \n\n            \n                \n                    Color to Hex conversion\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        SHAPE_COLOR_RGB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    RED: 'rgb(255, 0, 0)',\n    GREEN: 'rgb(0, 255, 0)',\n    BLUE: 'rgb(0, 0, 255)',\n    YELLOW: 'rgb(255, 255, 0)',\n    PURPLE: 'rgb(255, 0, 255)',\n    ORANGE: 'rgb(255, 165, 0)',\n    PINK: 'rgb(255, 192, 203)',\n    BLACK: 'rgb(0, 0, 0)',\n    WHITE: 'rgb(255, 255, 255)',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/constants/shape.constants.ts:54\n                        \n                    \n\n            \n                \n                    Color to rbg conversion.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        SHAPETYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    SQUARE: 'square',\n    Z: 'z-shape',\n    L: 'l-shape',\n    T: 't-shape',\n    MIRRORED_L: 'mirrored-l-shape',\n    I: 'i-shape',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/constants/shape.constants.ts:8\n                        \n                    \n\n            \n                \n                    Tells what type of shape is this tetramino\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        WIDTH_SQUARE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/constants/shape.constants.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ShapeConstants {\n  /**\n   * Tells what type of shape is this tetramino\n   *\n   * @static\n   * @memberof ShapeConstants\n   */\n  public static readonly SHAPETYPE = {\n    SQUARE: 'square',\n    Z: 'z-shape',\n    L: 'l-shape',\n    T: 't-shape',\n    MIRRORED_L: 'mirrored-l-shape',\n    I: 'i-shape',\n  };\n\n  static readonly HEIGHT_SQUARE = 2;\n  static readonly WIDTH_SQUARE = 2;\n  /**\n   * Tells what side shape is falling on\n   *\n   * @static\n   * @memberof ShapeConstants\n   */\n  public static readonly ROTATION_SHAPE = {\n    DEGREE_0: 0,\n    DEGREE_90: 90,\n    DEGREE_180: 180,\n    DEGREE_270: 270,\n  };\n  /**\n   * Shape's color.\n   *\n   * @static\n   * @memberof ShapeConstants\n   */\n  public static readonly SHAPE_COLOR = {\n    RED: 'red',\n    GREEN: 'green',\n    BLUE: 'blue',\n    YELLOW: 'yellow',\n    PURPLE: 'purple',\n    ORANGE: 'orange',\n    PINK: 'pink',\n    BLACK: 'black',\n    WHITE: 'white',\n  };\n  /**\n   * Color to rbg conversion.\n   *\n   * @static\n   * @memberof ShapeConstants\n   */\n  public static readonly SHAPE_COLOR_RGB = {\n    RED: 'rgb(255, 0, 0)',\n    GREEN: 'rgb(0, 255, 0)',\n    BLUE: 'rgb(0, 0, 255)',\n    YELLOW: 'rgb(255, 255, 0)',\n    PURPLE: 'rgb(255, 0, 255)',\n    ORANGE: 'rgb(255, 165, 0)',\n    PINK: 'rgb(255, 192, 203)',\n    BLACK: 'rgb(0, 0, 0)',\n    WHITE: 'rgb(255, 255, 255)',\n  };\n\n  /**\n   * Color to Hex conversion\n   *\n   * @static\n   * @memberof ShapeConstants\n   */\n  public static readonly SHAPE_COLOR_HEX = {\n    RED: '#FF0000',\n    GREEN: '#00FF00',\n    BLUE: '#0000FF',\n    YELLOW: '#FFFF00',\n    PURPLE: '#FF00FF',\n    ORANGE: '#FFA500',\n    PINK: '#FFC0CB',\n    BLACK: '#000000',\n    WHITE: '#FFFFFF',\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StartScreenController.html":{"url":"controllers/StartScreenController.html","title":"controller - StartScreenController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StartScreenController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controller/startscreen.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                StartScreenController is the controller for the start screen.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                setPlayer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        setPlayer\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPlayer(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/player')\n                \n            \n\n            \n                \n                    Defined in src/controller/startscreen.controller.ts:23\n                \n            \n\n\n            \n                \n                    Set the player details\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        {Promise}\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from '@nestjs/common';\nimport { Player } from 'src/model/player.entity';\nimport { StartScreenService } from '../service/startscreen.service';\n/**\n * StartScreenController is the controller for the start screen.\n *\n * @export\n * @class StartScreenController\n */\n@Controller()\nexport class StartScreenController {\n  constructor(private readonly startScreenService: StartScreenService) {}\n\n  /**\n   * Set the player details\n   *\n   * @private\n   * @param {string} name\n   * @return {*}  {Promise}\n   * @memberof StartScreenController\n   */\n  @Get('/player')\n  private async setPlayer(@Query('name') name: string): Promise {\n    return this.startScreenService.setPlayer(name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StartScreenService.html":{"url":"injectables/StartScreenService.html","title":"injectable - StartScreenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StartScreenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/startscreen.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Startscreen service class for the startscreen module of the game.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ConfirmInstructions\n                            \n                            \n                                    Private\n                                deniedPopup\n                            \n                            \n                                    Private\n                                getGreeting\n                            \n                            \n                                    Async\n                                setPlayer\n                            \n                            \n                                    Private\n                                showInstructions\n                            \n                            \n                                    Private\n                                startGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(playerRepository: Repository, gameService: GameService, blockGeneratorService: BlockGeneratorService, nextBlockGeneratorService: NextBlockGeneratorService)\n                    \n                \n                        \n                            \n                                Defined in src/service/startscreen.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        playerRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blockGeneratorService\n                                                  \n                                                        \n                                                                        BlockGeneratorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nextBlockGeneratorService\n                                                  \n                                                        \n                                                                        NextBlockGeneratorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        ConfirmInstructions\n                        \n                    \n                \n            \n            \n                \n                    \n                    ConfirmInstructions()\n                \n            \n\n\n            \n                \n                    Defined in src/service/startscreen.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        deniedPopup\n                        \n                    \n                \n            \n            \n                \n                    \n                    deniedPopup()\n                \n            \n\n\n            \n                \n                    Defined in src/service/startscreen.service.ts:80\n                \n            \n\n\n            \n                \n                    Show the denied popup.`\n\n\n                    \n                    \n                    \n                        Returns :     Error\n\n                    \n                    \n                        {Error}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getGreeting\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGreeting()\n                \n            \n\n\n            \n                \n                    Defined in src/service/startscreen.service.ts:30\n                \n            \n\n\n            \n                \n                    Get the game mode from the start screen.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setPlayer\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPlayer(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/service/startscreen.service.ts:42\n                \n            \n\n\n            \n                \n                    Set the player details.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        {Promise}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        showInstructions\n                        \n                    \n                \n            \n            \n                \n                    \n                    showInstructions()\n                \n            \n\n\n            \n                \n                    Defined in src/service/startscreen.service.ts:60\n                \n            \n\n\n            \n                \n                    Show instructions from the start screen.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        startGame\n                        \n                    \n                \n            \n            \n                \n                    \n                    startGame()\n                \n            \n\n\n            \n                \n                    Defined in src/service/startscreen.service.ts:69\n                \n            \n\n\n            \n                \n                    Start the game.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        {void}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { NextBlockGeneratorService } from 'src/service/nextblockzone.service';\nimport { Repository } from 'typeorm';\nimport { GameConstants } from './../constants/game.constants';\nimport { Player } from './../model/player.entity';\nimport { BlockGeneratorService } from './blockgenerator.service';\nimport { GameService } from './game.service';\n/**\n * Startscreen service class for the startscreen module of the game.\n *\n * @export\n * @class StartScreenService\n */\n@Injectable()\nexport class StartScreenService {\n  constructor(\n    @InjectRepository(Player)\n    private playerRepository: Repository,\n    private gameService: GameService,\n    private blockGeneratorService: BlockGeneratorService,\n    private nextBlockGeneratorService: NextBlockGeneratorService,\n  ) {}\n  /**\n   * Get the game mode from the start screen.\n   *\n   * @return {*}  {string}\n   * @memberof StartScreenService\n   */\n  private getGreeting(): string {\n    return GameConstants.GREETING_TEXST;\n  }\n\n  /**\n   * Set the player details.\n   *\n   * @private\n   * @param {string} name\n   * @return {*}  {Promise}\n   * @memberof StartScreenService\n   */\n  async setPlayer(name: string): Promise {\n    const user = this.playerRepository.create(new Player(name));\n    await this.playerRepository.save(user);\n    this.startGame();\n    return user;\n  }\n\n  private ConfirmInstructions(): Promise {\n    return new Promise((resolve) => {\n      resolve(true);\n    });\n  }\n  /**\n   * Show instructions from the start screen.\n   *\n   * @return void\n   * @memberof StartScreenService\n   */\n  private showInstructions(): void {\n    this.ConfirmInstructions() ? this.startGame() : this.deniedPopup();\n  }\n  /**\n   * Start the game.\n   *\n   * @return {*}  {void}\n   * @memberof StartScreenService\n   */\n  private startGame(): void {\n    this.gameService.setAllZones();\n    this.blockGeneratorService.startRolling();\n    this.nextBlockGeneratorService.generateStack();\n  }\n  /**\n   * Show the denied popup.`\n   *\n   * @return {*}  {Error}\n   * @memberof StartScreenService\n   */\n  private deniedPopup(): Error {\n    throw new Error(\n      'Please accept the instructions to start the game. Thank you!',\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Zone.html":{"url":"entities/Zone.html","title":"entity - Zone","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Zone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/zone.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Zone type in screen\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backgroundColor\n                            \n                            \n                                    Public\n                                height\n                            \n                            \n                                    Public\n                                width\n                            \n                            \n                                    Public\n                                zoneType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        backgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/model/zone.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/model/zone.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/model/zone.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        zoneType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/model/zone.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity } from 'typeorm';\n\n/**\n * Zone type in screen\n *\n * @export\n * @class Zone\n */\n@Entity('zone')\nexport class Zone {\n  /**\n   * Creates an instance of Zone.\n   * @param {string} zoneType\n   * @param {number} height\n   * @param {number} width\n   * @memberof Zone\n   */\n  constructor(\n    public zoneType: string,\n    public height: number,\n    public width: number,\n    public backgroundColor: string,\n  ) {\n    zoneType = this.zoneType;\n    height = this.height;\n    width = this.width;\n    backgroundColor = this.backgroundColor;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZoneFactoryService.html":{"url":"injectables/ZoneFactoryService.html","title":"injectable - ZoneFactoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ZoneFactoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/zonefactory.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Zone Factory Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateZones\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameservice: GameService)\n                    \n                \n                        \n                            \n                                Defined in src/service/zonefactory.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameservice\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateZones\n                        \n                    \n                \n            \n            \n                \ngenerateZones()\n                \n            \n\n\n            \n                \n                    Defined in src/service/zonefactory.service.ts:19\n                \n            \n\n\n            \n                \n                    Generate Zone\n\n\n                    \n                    \n                    \n                        Returns :         Zone[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Zone } from 'src/model/zone.entity';\nimport { GameService } from './game.service';\n/**\n * Zone Factory Service\n *\n * @export\n * @class ZoneFactoryService\n */\n@Injectable()\nexport class ZoneFactoryService {\n  constructor(private gameservice: GameService) {}\n  /**\n   * Generate Zone\n   *\n   * @return {*}\n   * @memberof ZoneFactoryService\n   */\n  generateZones(): Zone[] {\n    return this.gameservice.setAllZones();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZonefactoryModule.html":{"url":"modules/ZonefactoryModule.html","title":"module - ZonefactoryModule","body":"\n                   \n\n\n\n\n    Modules\n    ZonefactoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ZonefactoryModule\n\n\n\ncluster_ZonefactoryModule_imports\n\n\n\ncluster_ZonefactoryModule_providers\n\n\n\n\nGameService\n\nGameService\n\n\n\nZonefactoryModule\n\nZonefactoryModule\n\nZonefactoryModule -->\n\nGameService->ZonefactoryModule\n\n\n\n\n\nNextBlockGeneratorService\n\nNextBlockGeneratorService\n\nZonefactoryModule -->\n\nNextBlockGeneratorService->ZonefactoryModule\n\n\n\n\n\nZoneFactoryService\n\nZoneFactoryService\n\nZonefactoryModule -->\n\nZoneFactoryService->ZonefactoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/zonefactory.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ZoneFactoryService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GameService\n                        \n                        \n                            NextBlockGeneratorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Player } from 'src/model/player.entity';\nimport { Zone } from 'src/model/zone.entity';\nimport { NextBlockGeneratorService } from 'src/service/nextblockzone.service';\nimport { ZoneFactoryService } from 'src/service/zonefactory.service';\nimport { GameService } from './../service/game.service';\n\n@Module({\n  imports: [\n    GameService,\n    TypeOrmModule.forFeature([Zone, Player]),\n    NextBlockGeneratorService,\n  ],\n  providers: [ZoneFactoryService],\n  controllers: [],\n})\nexport class ZonefactoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/abstract/screen.abstract.ts\n            \n            interface\n            IScreen\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/constants/game.constants.ts\n            \n            class\n            GameConstants\n            \n                52 %\n                (19/36)\n            \n        \n        \n            \n                \n                src/constants/player.constants.ts\n            \n            class\n            PlayerConstants\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants/shape.constants.ts\n            \n            class\n            ShapeConstants\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/controller/game.controller.ts\n            \n            controller\n            GameController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/controller/startscreen.controller.ts\n            \n            controller\n            StartScreenController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/interface/shape.interface.ts\n            \n            interface\n            IShape\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/model/level.entity.ts\n            \n            entity\n            Level\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/model/music.entity.ts\n            \n            entity\n            Music\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/model/player.entity.ts\n            \n            entity\n            Player\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/model/score.entity.ts\n            \n            entity\n            Score\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/model/shape.entity.ts\n            \n            entity\n            Shape\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/model/zone.entity.ts\n            \n            entity\n            Zone\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/service/blockgenerator.service.ts\n            \n            injectable\n            BlockGeneratorService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/service/game.service.ts\n            \n            injectable\n            GameService\n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                src/service/gamezone.service.ts\n            \n            injectable\n            GameZone\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/service/holdzone.service.ts\n            \n            injectable\n            HoldZone\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/service/nextblockzone.service.ts\n            \n            injectable\n            NextBlockGeneratorService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/service/player.service.ts\n            \n            injectable\n            PlayerService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/service/scorezone.service.ts\n            \n            injectable\n            ScoreZone\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/service/startscreen.service.ts\n            \n            injectable\n            StartScreenService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/service/zonefactory.service.ts\n            \n            injectable\n            ZoneFactoryService\n            \n                66 %\n                (2/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            mysql2 : ^2.3.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.2.44\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_BlockGeneratorModule\n\n\n\ncluster_BlockGeneratorModule_providers\n\n\n\ncluster_GameModule\n\n\n\ncluster_GameModule_imports\n\n\n\ncluster_GameZone\n\n\n\ncluster_GameZone_imports\n\n\n\ncluster_HoldZoneModule\n\n\n\ncluster_HoldZoneModule_providers\n\n\n\ncluster_NextBlockGeneratorModule\n\n\n\ncluster_PlayerModule\n\n\n\ncluster_PlayerModule_providers\n\n\n\ncluster_ScoreZoneModule\n\n\n\ncluster_ScoreZoneModule_providers\n\n\n\ncluster_ZonefactoryModule\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nBlockGeneratorService\n\nBlockGeneratorService\n\n\n\nBlockGeneratorModule\n\nBlockGeneratorModule\n\nBlockGeneratorModule -->\n\nBlockGeneratorService->BlockGeneratorModule\n\n\n\n\n\nNextBlockGeneratorModule\n\nNextBlockGeneratorModule\n\nNextBlockGeneratorModule -->\n\nBlockGeneratorService->NextBlockGeneratorModule\n\n\n\n\n\nGameService\n\nGameService\n\n\n\nGameModule\n\nGameModule\n\nGameModule -->\n\nGameService->GameModule\n\n\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\nGameZone\n\nGameZone\n\nGameZone -->\n\nGameService->GameZone\n\n\n\n\n\nHoldZoneModule\n\nHoldZoneModule\n\nHoldZoneModule -->\n\nGameService->HoldZoneModule\n\n\n\n\n\nPlayerModule\n\nPlayerModule\n\nPlayerModule -->\n\nGameService->PlayerModule\n\n\n\n\n\nScoreZoneModule\n\nScoreZoneModule\n\nScoreZoneModule -->\n\nGameService->ScoreZoneModule\n\n\n\n\n\nZonefactoryModule\n\nZonefactoryModule\n\nZonefactoryModule -->\n\nGameService->ZonefactoryModule\n\n\n\n\n\nNextBlockGeneratorService\n\nNextBlockGeneratorService\n\nGameModule -->\n\nNextBlockGeneratorService->GameModule\n\n\n\nGameZone -->\n\nNextBlockGeneratorService->GameZone\n\n\n\nHoldZoneModule -->\n\nNextBlockGeneratorService->HoldZoneModule\n\n\n\nNextBlockGeneratorModule -->\n\nNextBlockGeneratorService->NextBlockGeneratorModule\n\n\n\nPlayerModule -->\n\nNextBlockGeneratorService->PlayerModule\n\n\n\nScoreZoneModule -->\n\nNextBlockGeneratorService->ScoreZoneModule\n\n\n\nZonefactoryModule -->\n\nNextBlockGeneratorService->ZonefactoryModule\n\n\n\n\n\nZoneFactoryService\n\nZoneFactoryService\n\nGameZone -->\n\nZoneFactoryService->GameZone\n\n\n\nGameZone -->\n\nZoneFactoryService->GameZone\n\n\n\nHoldZoneModule -->\n\nZoneFactoryService->HoldZoneModule\n\n\n\nScoreZoneModule -->\n\nZoneFactoryService->ScoreZoneModule\n\n\n\nZonefactoryModule -->\n\nZoneFactoryService->ZonefactoryModule\n\n\n\n\n\nHoldZone\n\nHoldZone\n\nHoldZoneModule -->\n\nHoldZone->HoldZoneModule\n\n\n\n\n\nPlayerService\n\nPlayerService\n\nPlayerModule -->\n\nPlayerService->PlayerModule\n\n\n\n\n\nStartScreenService\n\nStartScreenService\n\nPlayerModule -->\n\nStartScreenService->PlayerModule\n\n\n\n\n\nScoreZone\n\nScoreZone\n\nScoreZoneModule -->\n\nScoreZone->ScoreZoneModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockGeneratorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GameZone\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HoldZoneModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NextBlockGeneratorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlayerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlayerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScoreZoneModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZonefactoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
