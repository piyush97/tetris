var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.964,1,2.168]],["body/controllers/AppController.html",[0,3.298,1,3.641,2,1.55,3,0.261,4,0.261,5,0.218,6,3.793,7,0.67,8,1.897,9,4.584,10,2.262,11,0.028,12,0.86,13,4.505,14,1.55,15,1.766,16,0.552,17,0.794,18,3.257,19,3.793,20,0.261,21,0.176,22,2.262,23,2.974,24,1.666,25,4.505,26,0.023,27,0.023]],["title/modules/AppModule.html",[28,0.579,29,2.168]],["body/modules/AppModule.html",[1,3.894,2,1.87,3,0.255,4,0.255,5,0.213,11,0.028,16,0.59,17,0.775,18,3.523,19,3.705,20,0.255,21,0.172,26,0.022,27,0.022,28,0.958,29,4.257,30,1.514,31,1.87,32,3.705,33,3.705,34,2.163,35,1.751,36,1.751,37,4.4,38,2.332,39,4.4,40,1.887]],["title/injectables/AppService.html",[18,1.794,41,0.678]],["body/injectables/AppService.html",[3,0.272,4,0.272,5,0.226,7,0.696,8,1.942,9,4.643,11,0.028,12,0.894,14,1.61,15,1.807,16,0.468,17,0.825,18,3.084,20,0.272,21,0.182,24,1.73,26,0.023,27,0.023,41,1.165,42,1.862,43,3.94,44,4.679,45,3.94,46,4.679]],["title/modules/BlockGeneratorModule.html",[28,0.579,47,2.168]],["body/modules/BlockGeneratorModule.html",[2,1.499,3,0.253,4,0.253,5,0.211,11,0.028,16,0.614,17,0.768,20,0.253,21,0.17,26,0.022,27,0.022,28,0.952,30,1.499,31,1.859,34,2.15,35,1.734,36,1.734,38,2.317,40,1.869,47,4.246,48,3.668,49,3.668,50,2.981,51,4.357,52,2.019,53,1.611,54,1.734,55,3.668,56,4.357,57,3.668]],["title/injectables/BlockGeneratorService.html",[41,0.678,50,1.522]],["body/injectables/BlockGeneratorService.html",[3,0.196,4,0.196,5,0.163,7,0.501,8,1.574,11,0.028,12,1.063,14,1.786,16,0.601,17,0.594,20,0.196,21,0.131,24,1.692,26,0.019,27,0.019,41,0.944,42,1.342,50,2.12,53,1.247,54,1.82,58,2.839,59,3.427,60,5.568,61,5.568,62,5.568,63,1.962,64,3.372,65,4.688,66,3.372,67,1.446,68,1.08,69,0.696,70,1.446,71,4.575,72,3.372,73,3.375,74,3.372,75,3.372,76,2.488,77,2.839,78,1.842,79,2.839,80,2.488,81,1.446,82,2.226,83,3.372,84,3.372,85,1.446,86,3.372,87,3.372,88,2.017,89,2.839,90,3.02,91,3.372,92,2.226,93,3.372,94,3.372,95,3.372,96,3.372,97,2.736,98,2.839,99,3.372,100,4.575,101,4.575,102,3.372,103,3.372,104,4.575,105,2.839,106,3.372,107,3.372]],["title/classes/GameConstants.html",[21,0.128,78,1.794]],["body/classes/GameConstants.html",[3,0.054,4,0.054,5,0.045,7,0.137,11,0.028,12,1.139,15,1.362,20,0.054,21,0.036,23,4.396,26,0.007,27,0.007,69,1.242,78,2.909,88,2.874,90,2.553,97,1.588,105,1.375,108,0.609,109,0.776,110,0.275,111,2.626,112,1.375,113,0.487,114,5.677,115,2.197,116,4.073,117,2.197,118,2.197,119,2.197,120,2.197,121,2.197,122,2.197,123,2.197,124,2.197,125,2.197,126,2.197,127,2.197,128,2.197,129,2.197,130,2.197,131,2.197,132,2.197,133,2.197,134,2.197,135,2.197,136,2.197,137,2.197,138,2.197,139,2.197,140,2.197,141,2.197,142,2.197,143,2.197,144,2.197,145,2.197,146,2.197,147,2.197,148,2.197,149,2.679,150,1.85,151,4.034,152,4.403,153,1.633,154,1.959,155,1.633,156,1.633,157,1.633,158,1.633,159,1.633,160,1.633,161,0.922,162,1.633,163,1.633,164,1.633,165,1.633,166,1.633,167,1.633,168,1.375,169,1.633,170,1.633,171,0.922,172,1.633,173,1.633,174,1.375,175,0.922,176,1.375,177,0.976,178,2.09,179,1.633,180,0.922,181,1.451,182,2.553,183,4.255,184,0.922,185,1.633,186,1.633,187,1.633,188,1.633,189,3.867,190,3.867,191,3.256,192,0.922,193,3.357,194,1.633,195,2.656,196,1.633,197,0.922,198,0.922,199,0.922,200,2.656,201,0.922,202,0.922,203,1.633,204,0.922,205,0.922,206,1.633,207,0.922,208,0.922,209,1.633,210,0.922,211,2.656,212,0.922,213,1.753,214,0.922,215,1.633,216,0.922,217,1.633,218,0.922,219,2.656,220,0.922,221,1.375,222,0.922,223,0.922,224,0.922,225,1.451,226,1.633,227,1.375,228,1.375,229,2.656,230,0.922,231,1.633,232,2.656,233,1.633,234,0.922,235,2.853,236,2.656,237,1.633,238,1.633,239,1.633,240,3.357,241,0.922,242,1.359,243,2.656,244,0.922,245,2.656,246,1.633,247,1.633,248,1.633,249,2.656,250,1.633,251,0.922,252,1.375,253,3.867,254,0.922,255,1.078,256,2.656,257,2.477,258,0.922,259,1.633,260,1.633,261,1.633,262,2.236,263,0.65,264,0.922,265,0.922,266,0.922,267,1.633,268,1.633,269,1.633,270,1.633,271,0.82,272,1.205,273,1.633,274,0.922,275,1.337,276,4.403]],["title/modules/GameModule.html",[28,0.579,277,2.168]],["body/modules/GameModule.html",[2,1.299,3,0.219,4,0.219,5,0.183,11,0.028,16,0.648,17,0.665,20,0.219,21,0.147,26,0.02,27,0.02,28,0.869,30,1.299,31,1.696,34,1.962,35,1.502,36,1.502,38,2.115,40,2.115,52,1.749,53,1.396,54,1.962,80,2.785,242,1.47,263,1.962,271,2.476,277,4.313,278,3.178,279,3.775,280,3.178,281,2.073,282,2.132,283,3.775,284,3.775,285,0.974,286,2.062,287,3.775,288,1.749,289,1.895,290,3.178,291,3.178]],["title/injectables/GameService.html",[41,0.678,281,1.052]],["body/injectables/GameService.html",[3,0.116,4,0.116,5,0.097,7,0.297,8,1.074,11,0.028,12,1.102,14,1.792,15,1.813,16,0.471,17,0.352,20,0.181,21,0.169,22,1.004,24,2.224,26,0.013,27,0.013,28,0.55,41,0.645,42,0.796,63,0.858,67,1.339,68,1,69,0.971,70,1.339,78,1.093,79,1.684,85,2.429,92,1.32,110,0.596,111,3.203,113,0.931,149,2.304,154,3.202,178,2.168,181,2.944,225,2.944,235,2.304,242,1.967,271,1.568,272,2.304,275,1.345,281,1.813,282,1.716,288,0.927,292,1.684,293,2.304,294,3.977,295,4.339,296,3.654,297,4.339,298,4.339,299,4.339,300,4.339,301,3.233,302,2,303,2,304,2,305,2,306,4.179,307,2,308,2,309,2,310,2,311,1.684,312,2,313,2.834,314,2,315,2,316,2,317,2.535,318,2,319,2,320,2.629,321,2.371,322,2,323,1.684,324,2,325,2,326,2,327,2,328,4.339,329,2,330,2,331,2,332,4.339,333,2,334,3.122,335,3.122,336,2,337,2,338,2,339,2,340,2]],["title/modules/GameZone.html",[28,0.579,341,1.964]],["body/modules/GameZone.html",[2,1.295,3,0.218,4,0.218,5,0.182,11,0.028,16,0.64,17,0.663,20,0.218,21,0.147,26,0.02,27,0.02,28,0.867,30,1.295,31,1.693,34,1.959,35,1.498,36,1.498,38,2.111,40,2.111,52,1.744,53,1.392,242,1.122,263,1.959,281,1.983,282,2.13,285,1.27,286,2.056,288,1.744,289,1.89,341,3.959,342,3.169,343,3.764,344,3.169,345,2.998,346,3.764,347,2.485,348,2.777,349,1.89,350,2.485]],["title/injectables/HoldZone.html",[41,0.678,351,1.964]],["body/injectables/HoldZone.html",[3,0.223,4,0.223,5,0.186,7,0.571,8,1.716,11,0.028,12,1.058,14,1.716,16,0.499,17,0.677,20,0.223,21,0.15,22,1.928,24,2.168,26,0.02,27,0.02,41,1.029,42,1.528,63,1.647,67,1.647,68,1.23,69,0.793,70,1.647,111,2.725,228,4.199,235,3.68,242,1.487,275,1.287,281,1.994,349,1.928,351,3.506,352,3.233,353,4.936,354,5.863,355,2.834,356,3.84,357,3.84,358,3.68,359,3.84,360,4.987,361,3.84,362,3.84]],["title/modules/HoldZoneModule.html",[28,0.579,363,2.168]],["body/modules/HoldZoneModule.html",[2,1.291,3,0.218,4,0.218,5,0.182,11,0.028,16,0.64,17,0.661,20,0.218,21,0.146,26,0.02,27,0.02,28,0.866,30,1.291,31,1.69,34,1.955,35,1.494,36,1.494,38,2.107,40,2.107,52,1.739,53,1.388,242,1.119,281,1.981,282,2.129,285,1.268,286,2.051,288,1.739,289,1.884,345,2.867,347,2.478,349,1.884,350,2.478,351,3.701,363,4.368,364,3.16,365,3.753,366,3.16,367,3.753,368,3.753]],["title/interfaces/IScreen.html",[317,2.168,369,1.964]],["body/interfaces/IScreen.html",[3,0.178,4,0.178,5,0.148,7,0.456,8,1.475,11,0.028,12,0.819,14,1.475,15,1.955,16,0.307,20,0.178,26,0.018,27,0.018,67,1.316,68,0.982,69,1.28,70,1.316,88,3.199,111,2.342,113,1.278,149,3.163,176,3.609,177,2.563,178,2.403,181,3.389,182,3.849,225,3.389,242,1.893,275,1.453,288,1.422,294,3.947,296,4.503,301,3.609,306,3.163,311,3.609,313,3.163,317,3.95,321,1.676,369,1.835,370,2.264,371,2.583,372,3.068,373,4.287,374,4.287,375,4.941,376,3.068,377,5.349,378,4.287,379,4.287]],["title/interfaces/IShape.html",[369,1.964,380,2.168]],["body/interfaces/IShape.html",[3,0.155,4,0.155,5,0.129,7,0.397,11,0.028,15,1.885,20,0.155,26,0.016,27,0.016,54,2.389,68,1.783,69,1.33,88,3.521,90,1.764,110,0.797,113,1.158,177,3.331,178,2.459,181,3.217,225,3.217,227,2.25,275,1.52,369,2.323,370,1.972,380,4.025,381,2.25,382,2.673,383,2.745,384,4.689,385,4.689,386,4.689,387,4.753,388,2.867,389,4.231,390,4.231,391,2.867,392,3.271,393,2.745,394,4.231,395,4.231]],["title/entities/Level.html",[263,1.307,396,1.052]],["body/entities/Level.html",[3,0.223,4,0.223,5,0.186,7,0.571,10,2.504,11,0.028,12,0.952,16,0.384,20,0.289,21,0.194,26,0.02,27,0.02,69,1.21,81,1.647,85,2.376,110,1.145,113,1.487,178,2.402,263,2.626,275,1.287,285,1.287,383,3.319,393,2.725,396,1.23,397,1.928,398,3.233,399,2.982,400,3.656,401,3.84,402,3.292,403,3.312,404,3.84,405,3.84]],["title/entities/Music.html",[255,2.168,396,1.052]],["body/entities/Music.html",[3,0.169,4,0.169,5,0.141,7,0.432,10,2.769,11,0.028,12,1.053,15,1.962,16,0.413,20,0.24,21,0.161,26,0.017,27,0.017,68,1.766,69,1.282,81,1.247,85,2.782,110,0.867,113,1.23,178,2.119,213,2.724,255,4.305,257,3.045,263,2.28,275,1.424,383,3.013,396,0.931,397,1.459,399,2.468,400,3.167,402,2.724,403,3.524,406,2.448,407,5.516,408,4.798,409,4.798,410,2.907,411,5.223,412,2.907,413,4.127,414,2.907,415,2.907,416,2.907,417,4.127,418,2.907,419,4.127,420,4.127,421,2.907,422,2.907]],["title/modules/NextBlockGeneratorModule.html",[28,0.579,423,2.168]],["body/modules/NextBlockGeneratorModule.html",[2,1.428,3,0.241,4,0.241,5,0.201,11,0.028,16,0.623,17,0.732,20,0.241,21,0.162,26,0.021,27,0.021,28,0.924,30,1.428,31,1.804,34,2.086,35,1.652,36,1.652,38,2.249,40,2.249,50,2.945,52,1.924,53,1.536,54,1.652,55,3.496,57,3.496,282,2.186,289,2.085,423,4.31,424,3.496,425,4.153,426,4.153,427,4.153,428,4.153]],["title/injectables/NextBlockGeneratorService.html",[41,0.678,282,1.13]],["body/injectables/NextBlockGeneratorService.html",[3,0.194,4,0.194,5,0.161,7,0.496,8,1.563,11,0.028,12,1.059,14,1.563,16,0.517,17,0.588,20,0.264,21,0.177,22,1.676,24,1.68,26,0.019,27,0.019,28,0.801,41,0.938,42,1.328,50,2.887,54,2.055,59,3.409,63,1.432,67,1.432,68,1.069,69,0.938,70,1.432,76,2.463,80,2.463,90,3.66,110,0.995,111,2.482,113,1.354,151,2.204,152,2.463,262,4.668,275,1.173,282,2.106,321,1.824,429,2.811,430,5.544,431,5.8,432,5.544,433,5.544,434,3.338,435,4.543,436,3.352,437,3.352,438,3.338,439,3.825,440,3.338,441,3.338,442,2.811,443,3.338,444,3.338,445,3.338,446,3.338]],["title/entities/Player.html",[285,0.848,396,1.052]],["body/entities/Player.html",[3,0.171,4,0.171,5,0.142,7,0.438,10,2.783,11,0.028,12,1.058,15,1.682,16,0.295,20,0.171,21,0.162,26,0.017,27,0.017,68,1.843,69,1.286,81,1.263,97,3.142,110,0.878,113,1.242,151,3.19,178,2.273,213,2.75,257,3.074,263,1.658,275,1.431,285,1.714,383,3.028,393,3.144,396,0.943,397,1.479,399,2.491,400,3.19,402,2.75,403,3.441,447,2.48,448,4.833,449,4.833,450,5.543,451,4.833,452,2.946,453,2.946,454,4.833,455,4.166,456,2.946,457,4.166,458,2.946,459,4.166,460,2.946,461,2.946,462,2.946,463,2.946]],["title/classes/PlayerConstants.html",[21,0.128,464,2.423]],["body/classes/PlayerConstants.html",[3,0.289,4,0.289,5,0.241,11,0.026,20,0.289,21,0.194,26,0.024,27,0.024,108,3.286,110,1.484,112,4.93,285,1.511,464,4.321,465,4.191,466,4.978,467,4.978]],["title/modules/PlayerModule.html",[28,0.579,468,2.168]],["body/modules/PlayerModule.html",[2,1.499,3,0.253,4,0.253,5,0.211,11,0.028,16,0.614,17,0.768,20,0.253,21,0.17,26,0.022,27,0.022,28,0.952,30,1.499,31,1.859,34,2.15,35,1.734,36,1.734,38,2.317,40,1.869,52,2.019,53,1.611,285,1.125,291,3.668,468,4.246,469,3.668,470,3.668,471,3.847,472,4.357,473,3.668,474,4.357]],["title/injectables/PlayerService.html",[41,0.678,471,1.964]],["body/injectables/PlayerService.html",[3,0.269,4,0.269,5,0.224,7,0.689,8,1.929,9,4.627,11,0.028,12,0.884,14,1.593,15,1.796,16,0.463,17,0.816,20,0.269,21,0.181,24,1.712,26,0.023,27,0.023,41,1.158,42,1.843,45,3.899,85,2.588,285,1.195,471,3.354,475,3.899,476,4.63]],["title/entities/Score.html",[271,1.649,396,1.052]],["body/entities/Score.html",[3,0.192,4,0.192,5,0.16,7,0.491,10,2.58,11,0.028,12,0.981,16,0.452,20,0.262,21,0.176,26,0.018,27,0.018,69,1.231,81,1.418,85,2.704,110,0.985,113,1.345,178,2.331,271,3.343,275,1.326,285,1.646,383,3.158,391,3.33,393,2.465,396,1.058,397,1.659,399,2.699,402,2.979,403,3.456,477,2.783,478,5.78,479,3.305,480,4.513,481,3.305,482,4.513,483,3.305,484,4.513,485,3.305,486,4.513,487,3.305,488,3.305]],["title/injectables/ScoreZone.html",[41,0.678,489,1.964]],["body/injectables/ScoreZone.html",[3,0.196,4,0.196,5,0.164,7,0.503,8,1.576,11,0.028,12,1.064,14,1.788,16,0.52,17,0.596,20,0.196,21,0.132,22,1.697,24,2.221,26,0.019,27,0.019,41,0.946,42,1.345,63,1.45,67,1.45,68,1.082,69,0.698,70,1.45,85,1.45,242,1.366,263,2.521,271,2.301,272,4.112,275,1.342,281,1.923,285,1.183,348,2.494,349,1.697,353,4.693,355,2.494,358,3.381,393,2.504,439,3.858,489,3.484,490,2.846,491,5.573,492,5.573,493,3.381,494,3.381,495,3.381,496,3.858,497,3.858,498,4.583,499,3.381,500,3.381,501,3.381,502,3.381,503,3.381]],["title/modules/ScoreZoneModule.html",[28,0.579,504,2.168]],["body/modules/ScoreZoneModule.html",[2,1.27,3,0.214,4,0.214,5,0.179,11,0.028,16,0.645,17,0.65,20,0.214,21,0.144,26,0.02,27,0.02,28,0.856,30,1.27,31,1.672,34,1.934,35,1.469,36,1.469,38,2.084,40,2.084,52,1.71,53,1.365,242,1.1,263,1.934,281,1.972,282,2.119,285,1.254,286,2.016,288,1.71,289,1.853,345,2.854,347,2.436,348,2.723,349,1.853,350,2.436,489,3.683,504,4.357,505,3.107,506,3.107,507,3.691,508,3.691,509,3.691]],["title/entities/Shape.html",[54,1.307,396,1.052]],["body/entities/Shape.html",[3,0.123,4,0.123,5,0.102,7,0.315,10,2.758,11,0.028,12,1.049,15,1.843,16,0.327,20,0.189,21,0.127,26,0.013,27,0.013,54,2.567,63,0.909,68,1.703,69,1.279,81,0.909,88,3.285,110,0.631,113,0.973,177,3.285,178,2.411,181,3.144,225,3.144,275,1.454,320,2.748,321,2.789,380,2.629,383,2.176,384,4.069,385,4.625,386,4.625,387,4.573,388,2.409,389,3.767,390,3.767,391,3.767,392,2.748,393,2.445,394,3.767,395,3.767,396,1.275,397,1.064,399,1.952,400,2.629,403,3.675,436,1.563,437,1.563,510,1.784,511,3.264,512,2.118,513,2.118,514,2.118,515,2.118,516,2.118,517,2.118,518,2.118,519,2.118,520,2.118,521,2.118,522,2.118,523,1.784,524,1.784,525,2.118,526,2.118]],["title/classes/ShapeConstants.html",[21,0.128,82,2.168]],["body/classes/ShapeConstants.html",[3,0.112,4,0.112,5,0.094,7,0.287,11,0.028,12,0.982,20,0.112,21,0.075,23,4.163,26,0.012,27,0.012,54,2.375,69,1.131,82,3.395,97,3.75,108,1.276,113,0.906,114,5.428,150,3.899,151,3.395,152,3.795,168,2.56,174,2.56,177,2.94,178,1.124,275,1.195,276,3.417,387,2.243,527,1.628,528,3.757,529,3.757,530,3.757,531,3.757,532,3.757,533,3.757,534,3.757,535,3.586,536,1.933,537,3.04,538,3.04,539,3.04,540,3.04,541,3.04,542,3.04,543,3.04,544,1.933,545,4.259,546,3.04,547,3.04,548,5.327,549,5.327,550,5.327,551,5.327,552,5.327,553,5.327,554,5.327,555,5.327,556,5.327,557,1.933,558,3.04,559,3.04,560,3.04,561,3.04,562,3.04,563,3.04,564,3.04,565,1.933,566,3.04,567,4.259,568,5.813,569,4.916,570,5.813,571,3.04,572,3.04,573,3.04,574,1.933,575,3.04,576,4.259,577,4.259,578,4.916,579,4.259,580,3.04,581,3.04,582,1.933,583,3.04,584,1.933]],["title/controllers/StartScreenController.html",[0,1.964,585,2.423]],["body/controllers/StartScreenController.html",[0,3.142,2,1.433,3,0.242,4,0.242,5,0.201,7,0.619,8,1.807,10,2.091,11,0.028,12,0.795,14,1.433,15,1.843,16,0.576,17,0.734,20,0.242,21,0.162,22,2.091,23,2.75,24,1.54,26,0.022,27,0.022,59,3.799,67,1.787,68,1.843,69,0.86,70,1.787,73,3.876,85,2.468,285,1.075,286,2.276,585,3.876,586,3.507,587,4.423,588,3.507,589,5.254,590,4.166,591,4.166,592,3.441,593,4.166,594,4.166,595,4.166]],["title/injectables/StartScreenService.html",[41,0.678,592,1.964]],["body/injectables/StartScreenService.html",[3,0.129,4,0.129,5,0.107,7,0.33,8,1.163,11,0.028,12,1.032,14,1.788,15,1.785,16,0.558,17,0.391,20,0.196,21,0.179,24,2.061,26,0.014,27,0.014,28,0.596,41,0.698,42,0.882,50,2.505,53,0.82,59,2.705,63,1.45,65,3.858,67,1.45,68,1.467,69,0.698,70,1.45,73,3.836,76,4.112,77,1.867,78,1.212,81,0.951,85,2.747,89,1.867,92,2.232,98,1.867,110,0.661,111,2.954,154,3.989,182,3.025,252,3.45,275,1.273,281,1.731,282,1.86,285,1.057,289,1.113,293,2.495,306,2.495,321,1.212,323,1.867,349,1.113,442,1.867,473,1.867,496,3.858,497,2.846,587,2.846,588,2.846,592,3.333,596,1.867,597,4.583,598,4.583,599,4.583,600,4.583,601,4.583,602,4.583,603,2.218,604,2.218,605,3.381,606,2.218,607,2.218,608,3.381,609,3.381,610,4.933,611,2.218,612,3.381,613,2.218,614,2.218,615,2.218,616,2.218,617,2.218,618,2.218,619,3.381,620,2.218,621,2.218,622,2.218,623,3.381,624,2.218,625,2.218,626,2.218,627,2.218,628,1.867,629,2.218,630,2.218,631,2.218,632,2.218,633,2.218]],["title/entities/Zone.html",[242,0.979,396,1.052]],["body/entities/Zone.html",[3,0.208,4,0.208,5,0.174,7,0.534,11,0.028,12,1.091,15,1.904,16,0.359,20,0.277,21,0.186,26,0.02,27,0.02,63,1.54,69,1.262,81,1.54,110,1.07,113,1.422,178,2.26,181,3.248,182,3.15,225,3.248,242,1.859,275,0.927,276,4.85,294,4.214,313,4.387,321,2.928,396,1.15,397,1.803,436,2.65,437,2.65,523,3.023,524,3.023,634,3.023,635,3.591,636,3.591,637,3.591,638,3.591,639,3.591,640,3.591,641,3.591]],["title/injectables/ZoneFactoryService.html",[41,0.678,345,1.522]],["body/injectables/ZoneFactoryService.html",[3,0.228,4,0.228,5,0.19,7,0.583,8,1.738,11,0.028,12,0.965,14,1.348,16,0.56,17,0.691,20,0.293,21,0.197,22,1.968,24,1.869,26,0.021,27,0.021,41,1.043,42,1.56,63,1.681,67,1.681,68,1.255,69,0.809,70,1.681,110,1.168,242,1.899,275,1.012,281,2.005,288,1.816,293,3.729,345,2.737,349,1.968,355,2.892,358,3.729,628,3.3,642,3.3,643,5.054,644,5.908,645,3.92,646,3.92]],["title/modules/ZonefactoryModule.html",[28,0.579,647,2.168]],["body/modules/ZonefactoryModule.html",[2,1.34,3,0.226,4,0.226,5,0.188,11,0.028,16,0.636,17,0.687,20,0.226,21,0.152,26,0.021,27,0.021,28,0.887,30,1.34,31,1.732,34,2.003,35,1.551,36,1.551,38,2.159,40,2.159,52,1.805,53,1.441,242,1.162,281,2.002,282,2.15,285,1.299,286,2.129,288,1.805,289,1.956,290,3.281,345,2.896,347,2.572,350,2.572,647,4.336,648,3.281,649,3.897,650,3.897,651,3.897]],["title/coverage.html",[652,3.783]],["body/coverage.html",[0,2.699,1,2.182,5,0.16,6,2.783,11,0.028,18,1.806,21,0.2,26,0.018,27,0.018,41,1.316,43,2.783,50,1.531,54,1.315,58,2.783,69,0.682,78,1.806,82,2.182,92,2.182,97,3.568,109,2.783,191,5.234,221,2.783,242,0.985,255,2.182,263,1.315,271,1.659,281,1.058,282,1.137,285,0.853,292,2.783,317,2.182,341,1.976,345,1.531,351,1.976,352,2.783,369,2.699,371,2.783,380,2.182,381,2.783,388,2.439,396,1.91,398,2.783,406,2.783,429,2.783,447,2.783,464,2.439,465,2.783,471,1.976,475,2.783,477,2.783,489,1.976,490,2.783,510,2.783,527,2.783,585,2.439,586,2.783,592,1.976,596,2.783,634,2.783,642,2.783,652,2.783,653,3.305,654,3.305,655,4.513,656,4.513,657,5.521,658,3.305,659,3.305,660,6.106,661,3.305,662,3.305,663,3.305,664,2.783,665,3.305,666,2.783,667,3.305,668,3.305,669,4.513,670,3.305,671,3.305,672,3.305,673,4.513,674,4.513,675,3.305,676,3.305,677,3.305,678,3.305,679,3.305]],["title/dependencies.html",[31,1.36,680,2.305]],["body/dependencies.html",[11,0.028,17,0.839,26,0.023,27,0.023,31,1.639,53,1.761,81,2.043,681,6.107,682,4.763,683,4.763,684,4.763,685,4.763,686,4.763,687,4.763,688,4.763,689,4.763,690,4.763,691,4.763,692,4.763,693,4.763,694,4.763,695,4.763]],["title/miscellaneous/functions.html",[696,2.305,697,3.328]],["body/miscellaneous/functions.html",[7,0.769,11,0.025,26,0.025,27,0.025,664,4.354,666,5.322,696,4.354,697,4.354,698,5.171]],["title/index.html",[7,0.488,699,2.765]],["body/index.html",[2,1.078,11,0.028,18,2.73,26,0.018,27,0.018,29,3.563,30,1.078,31,1.496,32,2.638,33,2.638,34,1.731,35,1.247,36,1.247,42,1.247,47,3.563,48,2.638,49,2.638,50,2.501,108,2.068,213,2.871,277,4.051,278,2.638,280,2.638,281,1.995,282,2.144,341,3.773,342,2.638,344,2.638,345,2.789,351,2.988,363,4.165,364,2.638,366,2.638,370,2.312,397,1.573,423,3.874,424,2.638,468,4.165,469,2.638,470,2.638,471,2.988,489,2.988,504,4.165,505,2.638,506,2.638,535,3.662,592,2.988,647,4.051,648,2.638,699,2.638,700,3.133,701,3.133]],["title/modules.html",[30,1.546]],["body/modules.html",[11,0.022,26,0.022,27,0.022,29,2.924,30,1.524,47,2.924,277,2.924,341,2.649,363,2.924,423,2.924,468,3.603,504,2.924,647,2.924,702,6.705,703,6.705,704,6.705,705,6.705]],["title/properties.html",[113,1.178,680,2.305]],["body/properties.html",[11,0.027,26,0.024,27,0.024,110,1.524,113,1.524,706,5.112,707,5.112,708,5.112,709,5.112,710,5.112]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"classes/PlayerConstants.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{}}}],["0",{"_index":97,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"entities/Player.html":{},"classes/ShapeConstants.html":{},"coverage.html":{}}}],["0.0.1",{"_index":707,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["0.2.44",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":253,"title":{},"body":{"classes/GameConstants.html":{}}}],["0/1",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":174,"title":{},"body":{"classes/GameConstants.html":{},"classes/ShapeConstants.html":{}}}],["0000ff",{"_index":560,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["00ff00",{"_index":559,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["1",{"_index":257,"title":{},"body":{"classes/GameConstants.html":{},"entities/Music.html":{},"entities/Player.html":{}}}],["1/1",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":213,"title":{},"body":{"classes/GameConstants.html":{},"entities/Music.html":{},"entities/Player.html":{},"index.html":{}}}],["100",{"_index":191,"title":{},"body":{"classes/GameConstants.html":{},"coverage.html":{}}}],["1000",{"_index":183,"title":{},"body":{"classes/GameConstants.html":{}}}],["165",{"_index":571,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["16px",{"_index":165,"title":{},"body":{"classes/GameConstants.html":{}}}],["180",{"_index":541,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["19/36",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["192",{"_index":572,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["2",{"_index":535,"title":{},"body":{"classes/ShapeConstants.html":{},"index.html":{}}}],["2.3.3",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":677,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":179,"title":{},"body":{"classes/GameConstants.html":{}}}],["2000",{"_index":217,"title":{},"body":{"classes/GameConstants.html":{}}}],["203",{"_index":573,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["255",{"_index":570,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["270",{"_index":543,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["3",{"_index":701,"title":{},"body":{"index.html":{}}}],["3.0.2",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":240,"title":{},"body":{"classes/GameConstants.html":{}}}],["5/6",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":221,"title":{},"body":{"classes/GameConstants.html":{},"coverage.html":{}}}],["500",{"_index":196,"title":{},"body":{"classes/GameConstants.html":{}}}],["52",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":700,"title":{},"body":{"index.html":{}}}],["6/8",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":669,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["8.0.0",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["8/12",{"_index":670,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":539,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["accept",{"_index":632,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["according",{"_index":378,"title":{},"body":{"interfaces/IScreen.html":{}}}],["active",{"_index":457,"title":{},"body":{"entities/Player.html":{}}}],["add",{"_index":467,"title":{},"body":{"classes/PlayerConstants.html":{}}}],["align",{"_index":169,"title":{},"body":{"classes/GameConstants.html":{}}}],["app.controller",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"index.html":{}}}],["arial",{"_index":166,"title":{},"body":{"classes/GameConstants.html":{}}}],["arrow",{"_index":246,"title":{},"body":{"classes/GameConstants.html":{}}}],["artist",{"_index":407,"title":{},"body":{"entities/Music.html":{}}}],["async",{"_index":59,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/NextBlockGeneratorService.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{}}}],["author",{"_index":710,"title":{},"body":{"properties.html":{}}}],["await",{"_index":98,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/StartScreenService.html":{}}}],["axis",{"_index":395,"title":{},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{}}}],["background",{"_index":176,"title":{},"body":{"classes/GameConstants.html":{},"interfaces/IScreen.html":{}}}],["backgroundcolor",{"_index":294,"title":{},"body":{"injectables/GameService.html":{},"interfaces/IScreen.html":{},"entities/Zone.html":{}}}],["bgcolor",{"_index":375,"title":{},"body":{"interfaces/IScreen.html":{}}}],["black",{"_index":555,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["block",{"_index":90,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"interfaces/IShape.html":{},"injectables/NextBlockGeneratorService.html":{}}}],["block.\\n",{"_index":249,"title":{},"body":{"classes/GameConstants.html":{}}}],["blockgenerator.service",{"_index":442,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{},"injectables/StartScreenService.html":{}}}],["blockgeneratormodule",{"_index":47,"title":{"modules/BlockGeneratorModule.html":{}},"body":{"modules/BlockGeneratorModule.html":{},"index.html":{},"modules.html":{}}}],["blockgeneratorservice",{"_index":50,"title":{"injectables/BlockGeneratorService.html":{}},"body":{"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/StartScreenService.html":{},"coverage.html":{},"index.html":{}}}],["blocks",{"_index":88,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Shape.html":{}}}],["blue",{"_index":550,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["boolean",{"_index":454,"title":{},"body":{"entities/Player.html":{}}}],["bootstrap",{"_index":666,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":705,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":702,"title":{},"body":{"modules.html":{}}}],["button",{"_index":360,"title":{},"body":{"injectables/HoldZone.html":{}}}],["center",{"_index":170,"title":{},"body":{"classes/GameConstants.html":{}}}],["class",{"_index":21,"title":{"classes/GameConstants.html":{},"classes/PlayerConstants.html":{},"classes/ShapeConstants.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"entities/Level.html":{},"entities/Music.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"classes/PlayerConstants.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{},"coverage.html":{}}}],["classes",{"_index":108,"title":{},"body":{"classes/GameConstants.html":{},"classes/PlayerConstants.html":{},"classes/ShapeConstants.html":{},"index.html":{}}}],["cleared",{"_index":459,"title":{},"body":{"entities/Player.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_providers",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_blockgeneratormodule",{"_index":48,"title":{},"body":{"modules/BlockGeneratorModule.html":{},"index.html":{}}}],["cluster_blockgeneratormodule_providers",{"_index":49,"title":{},"body":{"modules/BlockGeneratorModule.html":{},"index.html":{}}}],["cluster_gamemodule",{"_index":278,"title":{},"body":{"modules/GameModule.html":{},"index.html":{}}}],["cluster_gamemodule_imports",{"_index":280,"title":{},"body":{"modules/GameModule.html":{},"index.html":{}}}],["cluster_gamemodule_providers",{"_index":279,"title":{},"body":{"modules/GameModule.html":{}}}],["cluster_gamezone",{"_index":342,"title":{},"body":{"modules/GameZone.html":{},"index.html":{}}}],["cluster_gamezone_imports",{"_index":344,"title":{},"body":{"modules/GameZone.html":{},"index.html":{}}}],["cluster_gamezone_providers",{"_index":343,"title":{},"body":{"modules/GameZone.html":{}}}],["cluster_holdzonemodule",{"_index":364,"title":{},"body":{"modules/HoldZoneModule.html":{},"index.html":{}}}],["cluster_holdzonemodule_imports",{"_index":365,"title":{},"body":{"modules/HoldZoneModule.html":{}}}],["cluster_holdzonemodule_providers",{"_index":366,"title":{},"body":{"modules/HoldZoneModule.html":{},"index.html":{}}}],["cluster_nextblockgeneratormodule",{"_index":424,"title":{},"body":{"modules/NextBlockGeneratorModule.html":{},"index.html":{}}}],["cluster_nextblockgeneratormodule_imports",{"_index":426,"title":{},"body":{"modules/NextBlockGeneratorModule.html":{}}}],["cluster_nextblockgeneratormodule_providers",{"_index":425,"title":{},"body":{"modules/NextBlockGeneratorModule.html":{}}}],["cluster_playermodule",{"_index":469,"title":{},"body":{"modules/PlayerModule.html":{},"index.html":{}}}],["cluster_playermodule_providers",{"_index":470,"title":{},"body":{"modules/PlayerModule.html":{},"index.html":{}}}],["cluster_scorezonemodule",{"_index":505,"title":{},"body":{"modules/ScoreZoneModule.html":{},"index.html":{}}}],["cluster_scorezonemodule_imports",{"_index":507,"title":{},"body":{"modules/ScoreZoneModule.html":{}}}],["cluster_scorezonemodule_providers",{"_index":506,"title":{},"body":{"modules/ScoreZoneModule.html":{},"index.html":{}}}],["cluster_zonefactorymodule",{"_index":648,"title":{},"body":{"modules/ZonefactoryModule.html":{},"index.html":{}}}],["cluster_zonefactorymodule_imports",{"_index":649,"title":{},"body":{"modules/ZonefactoryModule.html":{}}}],["cluster_zonefactorymodule_providers",{"_index":650,"title":{},"body":{"modules/ZonefactoryModule.html":{}}}],["code",{"_index":237,"title":{},"body":{"classes/GameConstants.html":{}}}],["color",{"_index":177,"title":{},"body":{"classes/GameConstants.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{}}}],["column",{"_index":403,"title":{},"body":{"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Score.html":{},"entities/Shape.html":{}}}],["column({default",{"_index":451,"title":{},"body":{"entities/Player.html":{}}}],["common",{"_index":484,"title":{},"body":{"entities/Score.html":{}}}],["confirminstructions",{"_index":598,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["console",{"_index":374,"title":{},"body":{"interfaces/IScreen.html":{}}}],["console.log('game",{"_index":104,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["console.log('generating",{"_index":86,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["const",{"_index":89,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/StartScreenService.html":{}}}],["constants",{"_index":112,"title":{},"body":{"classes/GameConstants.html":{},"classes/PlayerConstants.html":{}}}],["constants/game.constants",{"_index":616,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["constants/shape.constants",{"_index":83,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["constructor",{"_index":63,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/ScoreZone.html":{},"entities/Shape.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{}}}],["constructor(blockgeneratorservice",{"_index":434,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["constructor(gameservice",{"_index":355,"title":{},"body":{"injectables/HoldZone.html":{},"injectables/ScoreZone.html":{},"injectables/ZoneFactoryService.html":{}}}],["constructor(name",{"_index":462,"title":{},"body":{"entities/Player.html":{}}}],["constructor(nextblockgeneratorservice",{"_index":302,"title":{},"body":{"injectables/GameService.html":{}}}],["constructor(playerrepository",{"_index":603,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/ScoreZone.html":{},"controllers/StartScreenController.html":{},"injectables/ZoneFactoryService.html":{}}}],["constructor(shaperepository",{"_index":64,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/StartScreenController.html":{}},"body":{"controllers/AppController.html":{},"controllers/StartScreenController.html":{},"coverage.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"controllers/StartScreenController.html":{},"modules/ZonefactoryModule.html":{},"index.html":{}}}],["conversion",{"_index":567,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["coverage",{"_index":652,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":436,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{},"entities/Shape.html":{},"entities/Zone.html":{}}}],["current",{"_index":393,"title":{},"body":{"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Player.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"entities/Shape.html":{}}}],["currentlevel",{"_index":448,"title":{},"body":{"entities/Player.html":{}}}],["database",{"_index":391,"title":{},"body":{"interfaces/IShape.html":{},"entities/Score.html":{},"entities/Shape.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Score.html":{},"entities/Shape.html":{},"controllers/StartScreenController.html":{}}}],["decrease",{"_index":194,"title":{},"body":{"classes/GameConstants.html":{}}}],["default",{"_index":151,"title":{},"body":{"classes/GameConstants.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"classes/ShapeConstants.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"interfaces/IScreen.html":{},"entities/Level.html":{},"entities/Music.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{}}}],["degree_0",{"_index":537,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["degree_180",{"_index":540,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["degree_270",{"_index":542,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["degree_90",{"_index":538,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["degrees",{"_index":392,"title":{},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{}}}],["denied",{"_index":608,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["deniedpopup",{"_index":599,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":110,"title":{},"body":{"classes/GameConstants.html":{},"injectables/GameService.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"classes/PlayerConstants.html":{},"entities/Score.html":{},"entities/Shape.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"properties.html":{}}}],["details",{"_index":497,"title":{},"body":{"injectables/ScoreZone.html":{},"injectables/StartScreenService.html":{}}}],["documentation",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["each",{"_index":186,"title":{},"body":{"classes/GameConstants.html":{}}}],["end",{"_index":160,"title":{},"body":{"classes/GameConstants.html":{}}}],["enter",{"_index":261,"title":{},"body":{"classes/GameConstants.html":{}}}],["entities",{"_index":397,"title":{},"body":{"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Score.html":{},"entities/Shape.html":{},"entities/Zone.html":{},"index.html":{}}}],["entity",{"_index":396,"title":{"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Score.html":{},"entities/Shape.html":{},"entities/Zone.html":{}},"body":{"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Score.html":{},"entities/Shape.html":{},"entities/Zone.html":{},"coverage.html":{}}}],["entity('level",{"_index":405,"title":{},"body":{"entities/Level.html":{}}}],["entity('music",{"_index":422,"title":{},"body":{"entities/Music.html":{}}}],["entity('player",{"_index":461,"title":{},"body":{"entities/Player.html":{}}}],["entity('score",{"_index":488,"title":{},"body":{"entities/Score.html":{}}}],["entity('shape",{"_index":521,"title":{},"body":{"entities/Shape.html":{}}}],["entity('zone",{"_index":639,"title":{},"body":{"entities/Zone.html":{}}}],["enumgamestate",{"_index":115,"title":{},"body":{"classes/GameConstants.html":{}}}],["error",{"_index":610,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"classes/PlayerConstants.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{}}}],["express",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["factor",{"_index":195,"title":{},"body":{"classes/GameConstants.html":{}}}],["factory",{"_index":643,"title":{},"body":{"injectables/ZoneFactoryService.html":{}}}],["falling",{"_index":547,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["family",{"_index":173,"title":{},"body":{"classes/GameConstants.html":{}}}],["fast",{"_index":200,"title":{},"body":{"classes/GameConstants.html":{}}}],["fastest",{"_index":203,"title":{},"body":{"classes/GameConstants.html":{}}}],["ff0000",{"_index":558,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["ff00ff",{"_index":562,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["ffa500",{"_index":563,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["ffc0cb",{"_index":564,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["ffff00",{"_index":561,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["ffffff",{"_index":168,"title":{},"body":{"classes/GameConstants.html":{},"classes/ShapeConstants.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"classes/PlayerConstants.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{},"coverage.html":{}}}],["filename",{"_index":408,"title":{},"body":{"entities/Music.html":{}}}],["fill",{"_index":167,"title":{},"body":{"classes/GameConstants.html":{}}}],["font",{"_index":116,"title":{},"body":{"classes/GameConstants.html":{}}}],["function",{"_index":665,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":697,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":111,"title":{},"body":{"classes/GameConstants.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"interfaces/IScreen.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/StartScreenService.html":{}}}],["game.service",{"_index":349,"title":{},"body":{"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{}}}],["game_background_color",{"_index":117,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_height",{"_index":118,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed",{"_index":119,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_decrease",{"_index":120,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_default",{"_index":121,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_default_string",{"_index":122,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_fast",{"_index":123,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_fast_string",{"_index":124,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_fastest",{"_index":125,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_fastest_string",{"_index":126,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_increase",{"_index":127,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_max",{"_index":128,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_min",{"_index":129,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_slow",{"_index":130,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_slow_string",{"_index":131,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_slowest",{"_index":132,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_slowest_string",{"_index":133,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_very_fast",{"_index":134,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_very_fast_string",{"_index":135,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_very_slow",{"_index":136,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_speed_very_slow_string",{"_index":137,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_state_end",{"_index":159,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_state_pause",{"_index":157,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_state_play",{"_index":155,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_state_start",{"_index":153,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_width",{"_index":138,"title":{},"body":{"classes/GameConstants.html":{}}}],["game_zone",{"_index":268,"title":{},"body":{"classes/GameConstants.html":{}}}],["gameconstants",{"_index":78,"title":{"classes/GameConstants.html":{}},"body":{"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"injectables/GameService.html":{},"injectables/StartScreenService.html":{},"coverage.html":{}}}],["gameconstants.enumgamestate.game_state_end",{"_index":106,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["gameconstants.enumgamestate.game_state_pause",{"_index":103,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["gameconstants.enumgamestate.game_state_play",{"_index":100,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["gameconstants.game_background_color",{"_index":332,"title":{},"body":{"injectables/GameService.html":{}}}],["gameconstants.game_height",{"_index":330,"title":{},"body":{"injectables/GameService.html":{}}}],["gameconstants.game_width",{"_index":331,"title":{},"body":{"injectables/GameService.html":{}}}],["gameconstants.greeting_texst",{"_index":618,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["gameconstants.hold_zone_height",{"_index":334,"title":{},"body":{"injectables/GameService.html":{}}}],["gameconstants.hold_zone_width",{"_index":335,"title":{},"body":{"injectables/GameService.html":{}}}],["gameconstants.score_profile_zone_height",{"_index":337,"title":{},"body":{"injectables/GameService.html":{}}}],["gameconstants.score_profile_zone_width",{"_index":338,"title":{},"body":{"injectables/GameService.html":{}}}],["gameconstants.zones.game_zone",{"_index":329,"title":{},"body":{"injectables/GameService.html":{}}}],["gameconstants.zones.hold_block_zone",{"_index":333,"title":{},"body":{"injectables/GameService.html":{}}}],["gameconstants.zones.next_block_zone",{"_index":339,"title":{},"body":{"injectables/GameService.html":{}}}],["gameconstants.zones.score_profile_zone",{"_index":336,"title":{},"body":{"injectables/GameService.html":{}}}],["gamemodule",{"_index":277,"title":{"modules/GameModule.html":{}},"body":{"modules/GameModule.html":{},"index.html":{},"modules.html":{}}}],["gameservice",{"_index":281,"title":{"injectables/GameService.html":{}},"body":{"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{},"coverage.html":{},"index.html":{}}}],["gamezone",{"_index":341,"title":{"modules/GameZone.html":{}},"body":{"modules/GameZone.html":{},"coverage.html":{},"index.html":{},"modules.html":{}}}],["generate",{"_index":358,"title":{},"body":{"injectables/HoldZone.html":{},"injectables/ScoreZone.html":{},"injectables/ZoneFactoryService.html":{}}}],["generateblocks",{"_index":60,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["generates",{"_index":430,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["generatestack",{"_index":432,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["generatezone",{"_index":353,"title":{},"body":{"injectables/HoldZone.html":{},"injectables/ScoreZone.html":{}}}],["generatezones",{"_index":644,"title":{},"body":{"injectables/ZoneFactoryService.html":{}}}],["get('/player",{"_index":589,"title":{},"body":{"controllers/StartScreenController.html":{}}}],["getblocks",{"_index":433,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["getcurrentgamestate",{"_index":61,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["getgreeting",{"_index":600,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PlayerService.html":{}}}],["green",{"_index":549,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["greeting_texst",{"_index":139,"title":{},"body":{"classes/GameConstants.html":{}}}],["greetings",{"_index":231,"title":{},"body":{"classes/GameConstants.html":{}}}],["h",{"_index":233,"title":{},"body":{"classes/GameConstants.html":{}}}],["height",{"_index":181,"title":{},"body":{"classes/GameConstants.html":{},"injectables/GameService.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Shape.html":{},"entities/Zone.html":{}}}],["height_square",{"_index":528,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["hello",{"_index":45,"title":{},"body":{"injectables/AppService.html":{},"injectables/PlayerService.html":{}}}],["hex",{"_index":566,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["highest",{"_index":480,"title":{},"body":{"entities/Score.html":{}}}],["highscore",{"_index":478,"title":{},"body":{"entities/Score.html":{}}}],["hold",{"_index":235,"title":{},"body":{"classes/GameConstants.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{}}}],["hold_block_zone",{"_index":273,"title":{},"body":{"classes/GameConstants.html":{}}}],["hold_key",{"_index":140,"title":{},"body":{"classes/GameConstants.html":{}}}],["hold_zone_height",{"_index":141,"title":{},"body":{"classes/GameConstants.html":{}}}],["hold_zone_width",{"_index":142,"title":{},"body":{"classes/GameConstants.html":{}}}],["holdzone",{"_index":351,"title":{"injectables/HoldZone.html":{}},"body":{"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"coverage.html":{},"index.html":{}}}],["holdzonemodule",{"_index":363,"title":{"modules/HoldZoneModule.html":{}},"body":{"modules/HoldZoneModule.html":{},"index.html":{},"modules.html":{}}}],["id",{"_index":383,"title":{},"body":{"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Score.html":{},"entities/Shape.html":{}}}],["identifier",{"_index":388,"title":{},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{},"coverage.html":{}}}],["identify",{"_index":390,"title":{},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{}}}],["implements",{"_index":320,"title":{},"body":{"injectables/GameService.html":{},"entities/Shape.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"interfaces/IScreen.html":{},"entities/Level.html":{},"entities/Music.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"entities/Shape.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{}}}],["imports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{}}}],["increase",{"_index":206,"title":{},"body":{"classes/GameConstants.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"classes/PlayerConstants.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{}}}],["injectable",{"_index":41,"title":{"injectables/AppService.html":{},"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreZone.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{}},"body":{"injectables/AppService.html":{},"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreZone.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{},"coverage.html":{}}}],["injectables",{"_index":42,"title":{},"body":{"injectables/AppService.html":{},"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreZone.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{},"index.html":{}}}],["injectrepository",{"_index":77,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/StartScreenService.html":{}}}],["injectrepository(player",{"_index":617,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["injectrepository(shape",{"_index":84,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["input",{"_index":238,"title":{},"body":{"classes/GameConstants.html":{}}}],["instance",{"_index":437,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{},"entities/Shape.html":{},"entities/Zone.html":{}}}],["instructions",{"_index":252,"title":{},"body":{"classes/GameConstants.html":{},"injectables/StartScreenService.html":{}}}],["instructions_text",{"_index":143,"title":{},"body":{"classes/GameConstants.html":{}}}],["interface",{"_index":369,"title":{"interfaces/IScreen.html":{},"interfaces/IShape.html":{}},"body":{"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"coverage.html":{}}}],["interface/shape.interface",{"_index":520,"title":{},"body":{"entities/Shape.html":{}}}],["interfaces",{"_index":370,"title":{},"body":{"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"index.html":{}}}],["isactive",{"_index":449,"title":{},"body":{"entities/Player.html":{}}}],["iscreen",{"_index":317,"title":{"interfaces/IScreen.html":{}},"body":{"injectables/GameService.html":{},"interfaces/IScreen.html":{},"coverage.html":{}}}],["ishape",{"_index":380,"title":{"interfaces/IShape.html":{}},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{},"coverage.html":{}}}],["key",{"_index":236,"title":{},"body":{"classes/GameConstants.html":{}}}],["keys",{"_index":247,"title":{},"body":{"classes/GameConstants.html":{}}}],["l",{"_index":578,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["level",{"_index":263,"title":{"entities/Level.html":{}},"body":{"classes/GameConstants.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"coverage.html":{}}}],["level.entity",{"_index":421,"title":{},"body":{"entities/Music.html":{}}}],["level.number",{"_index":417,"title":{},"body":{"entities/Music.html":{}}}],["license",{"_index":708,"title":{},"body":{"properties.html":{}}}],["lines",{"_index":450,"title":{},"body":{"entities/Player.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"classes/PlayerConstants.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{}}}],["max",{"_index":243,"title":{},"body":{"classes/GameConstants.html":{}}}],["memberof",{"_index":275,"title":{},"body":{"classes/GameConstants.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{}}}],["metadata",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"interfaces/IScreen.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreZone.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{}}}],["minimum",{"_index":209,"title":{},"body":{"classes/GameConstants.html":{}}}],["mirrored",{"_index":581,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["mirrored_l",{"_index":580,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["miscellaneous",{"_index":696,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mode",{"_index":612,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["model",{"_index":399,"title":{},"body":{"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Score.html":{},"entities/Shape.html":{}}}],["model/level.entity",{"_index":348,"title":{},"body":{"modules/GameZone.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{}}}],["model/player.entity",{"_index":473,"title":{},"body":{"modules/PlayerModule.html":{},"injectables/StartScreenService.html":{}}}],["model/shape.entity",{"_index":55,"title":{},"body":{"modules/BlockGeneratorModule.html":{},"modules/NextBlockGeneratorModule.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"injectables/StartScreenService.html":{},"modules/ZonefactoryModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{},"index.html":{},"modules.html":{}}}],["move",{"_index":248,"title":{},"body":{"classes/GameConstants.html":{}}}],["music",{"_index":255,"title":{"entities/Music.html":{}},"body":{"classes/GameConstants.html":{},"entities/Music.html":{},"coverage.html":{}}}],["music's",{"_index":411,"title":{},"body":{"entities/Music.html":{}}}],["music_volume",{"_index":144,"title":{},"body":{"classes/GameConstants.html":{}}}],["mysql2",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":68,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Music.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"injectables/ScoreZone.html":{},"entities/Shape.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{}}}],["needed",{"_index":260,"title":{},"body":{"classes/GameConstants.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":53,"title":{},"body":{"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"injectables/StartScreenService.html":{},"modules/ZonefactoryModule.html":{},"dependencies.html":{}}}],["new",{"_index":92,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{},"injectables/StartScreenService.html":{},"coverage.html":{}}}],["next",{"_index":262,"title":{},"body":{"classes/GameConstants.html":{},"injectables/NextBlockGeneratorService.html":{}}}],["next_block_zone",{"_index":269,"title":{},"body":{"classes/GameConstants.html":{}}}],["nextblockgeneratormodule",{"_index":423,"title":{"modules/NextBlockGeneratorModule.html":{}},"body":{"modules/NextBlockGeneratorModule.html":{},"index.html":{},"modules.html":{}}}],["nextblockgeneratorservice",{"_index":282,"title":{"injectables/NextBlockGeneratorService.html":{}},"body":{"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"modules/ScoreZoneModule.html":{},"injectables/StartScreenService.html":{},"modules/ZonefactoryModule.html":{},"coverage.html":{},"index.html":{}}}],["nextblockzone.service",{"_index":319,"title":{},"body":{"injectables/GameService.html":{}}}],["number",{"_index":178,"title":{},"body":{"classes/GameConstants.html":{},"injectables/GameService.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Score.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"entities/Zone.html":{}}}],["object",{"_index":150,"title":{},"body":{"classes/GameConstants.html":{},"classes/ShapeConstants.html":{}}}],["onetomany",{"_index":486,"title":{},"body":{"entities/Score.html":{}}}],["onetomany(undefined",{"_index":481,"title":{},"body":{"entities/Score.html":{}}}],["onetoone",{"_index":420,"title":{},"body":{"entities/Music.html":{}}}],["onetoone(undefined",{"_index":416,"title":{},"body":{"entities/Music.html":{}}}],["ongamestart",{"_index":295,"title":{},"body":{"injectables/GameService.html":{}}}],["onpresshold",{"_index":354,"title":{},"body":{"injectables/HoldZone.html":{}}}],["optional",{"_index":70,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"interfaces/IScreen.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/ScoreZone.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{}}}],["orange",{"_index":553,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["out",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{},"index.html":{}}}],["over",{"_index":107,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["overview",{"_index":699,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":680,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":321,"title":{},"body":{"injectables/GameService.html":{},"interfaces/IScreen.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Shape.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{}}}],["parameters",{"_index":67,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"interfaces/IScreen.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/ScoreZone.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{}}}],["path",{"_index":413,"title":{},"body":{"entities/Music.html":{}}}],["pause",{"_index":158,"title":{},"body":{"classes/GameConstants.html":{}}}],["paused",{"_index":105,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{}}}],["per",{"_index":189,"title":{},"body":{"classes/GameConstants.html":{}}}],["pink",{"_index":554,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["play",{"_index":156,"title":{},"body":{"classes/GameConstants.html":{}}}],["player",{"_index":285,"title":{"entities/Player.html":{}},"body":{"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"entities/Level.html":{},"entities/Player.html":{},"classes/PlayerConstants.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"modules/ZonefactoryModule.html":{},"coverage.html":{}}}],["player's",{"_index":498,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["player(name",{"_index":621,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["player.entity",{"_index":487,"title":{},"body":{"entities/Score.html":{}}}],["player.id",{"_index":482,"title":{},"body":{"entities/Score.html":{}}}],["playerconstants",{"_index":464,"title":{"classes/PlayerConstants.html":{}},"body":{"classes/PlayerConstants.html":{},"coverage.html":{}}}],["playermodule",{"_index":468,"title":{"modules/PlayerModule.html":{}},"body":{"modules/PlayerModule.html":{},"index.html":{},"modules.html":{}}}],["playerrepository",{"_index":605,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["playerservice",{"_index":471,"title":{"injectables/PlayerService.html":{}},"body":{"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"coverage.html":{},"index.html":{}}}],["please",{"_index":631,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["points",{"_index":259,"title":{},"body":{"classes/GameConstants.html":{}}}],["points_for_level_change",{"_index":145,"title":{},"body":{"classes/GameConstants.html":{}}}],["popup",{"_index":609,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["position",{"_index":394,"title":{},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{}}}],["press",{"_index":228,"title":{},"body":{"classes/GameConstants.html":{},"injectables/HoldZone.html":{}}}],["pressed",{"_index":239,"title":{},"body":{"classes/GameConstants.html":{}}}],["primarygeneratedcolumn",{"_index":400,"title":{},"body":{"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Shape.html":{}}}],["private",{"_index":85,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{},"entities/Level.html":{},"entities/Music.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{}}}],["profile",{"_index":272,"title":{},"body":{"classes/GameConstants.html":{},"injectables/GameService.html":{},"injectables/ScoreZone.html":{}}}],["promise",{"_index":73,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{}}}],["promise((resolve",{"_index":624,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["properties",{"_index":113,"title":{"properties.html":{}},"body":{"classes/GameConstants.html":{},"injectables/GameService.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"entities/Score.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"entities/Zone.html":{},"properties.html":{}}}],["provided",{"_index":379,"title":{},"body":{"interfaces/IScreen.html":{}}}],["providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{}}}],["public",{"_index":276,"title":{},"body":{"classes/GameConstants.html":{},"classes/ShapeConstants.html":{},"entities/Zone.html":{}}}],["purple",{"_index":552,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["query",{"_index":591,"title":{},"body":{"controllers/StartScreenController.html":{}}}],["random",{"_index":87,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["rbg",{"_index":575,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/GameConstants.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{}}}],["red",{"_index":548,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["reflect",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":65,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/StartScreenService.html":{}}}],["reset",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{},"index.html":{}}}],["resolve(true",{"_index":625,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"classes/PlayerConstants.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreZone.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"interfaces/IScreen.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreZone.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{}}}],["rgb(0",{"_index":569,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["rgb(255",{"_index":568,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["rimraf",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["rotate",{"_index":250,"title":{},"body":{"classes/GameConstants.html":{}}}],["rotation",{"_index":384,"title":{},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{}}}],["rotation_shape",{"_index":529,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["rows",{"_index":185,"title":{},"body":{"classes/GameConstants.html":{}}}],["running",{"_index":163,"title":{},"body":{"classes/GameConstants.html":{}}}],["rxjs",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["schema",{"_index":511,"title":{},"body":{"entities/Shape.html":{}}}],["score",{"_index":271,"title":{"entities/Score.html":{}},"body":{"classes/GameConstants.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"coverage.html":{}}}],["score_profile_zone",{"_index":270,"title":{},"body":{"classes/GameConstants.html":{}}}],["score_profile_zone_height",{"_index":146,"title":{},"body":{"classes/GameConstants.html":{}}}],["score_profile_zone_width",{"_index":147,"title":{},"body":{"classes/GameConstants.html":{}}}],["scorezone",{"_index":489,"title":{"injectables/ScoreZone.html":{}},"body":{"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"coverage.html":{},"index.html":{}}}],["scorezonemodule",{"_index":504,"title":{"modules/ScoreZoneModule.html":{}},"body":{"modules/ScoreZoneModule.html":{},"index.html":{},"modules.html":{}}}],["screen",{"_index":182,"title":{},"body":{"classes/GameConstants.html":{},"interfaces/IScreen.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{}}}],["screen's",{"_index":377,"title":{},"body":{"interfaces/IScreen.html":{}}}],["second",{"_index":190,"title":{},"body":{"classes/GameConstants.html":{}}}],["service",{"_index":293,"title":{},"body":{"injectables/GameService.html":{},"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{}}}],["service/blockgenerator.service",{"_index":56,"title":{},"body":{"modules/BlockGeneratorModule.html":{}}}],["service/game.service",{"_index":290,"title":{},"body":{"modules/GameModule.html":{},"modules/ZonefactoryModule.html":{}}}],["service/player.service",{"_index":474,"title":{},"body":{"modules/PlayerModule.html":{}}}],["service/startscreen.service",{"_index":593,"title":{},"body":{"controllers/StartScreenController.html":{}}}],["set",{"_index":306,"title":{},"body":{"injectables/GameService.html":{},"interfaces/IScreen.html":{},"injectables/StartScreenService.html":{}}}],["setallzones",{"_index":296,"title":{},"body":{"injectables/GameService.html":{},"interfaces/IScreen.html":{}}}],["setgamezone",{"_index":297,"title":{},"body":{"injectables/GameService.html":{}}}],["setholdzone",{"_index":298,"title":{},"body":{"injectables/GameService.html":{}}}],["setnextzone",{"_index":299,"title":{},"body":{"injectables/GameService.html":{}}}],["setplayer",{"_index":587,"title":{},"body":{"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{}}}],["setplayer(@query('name",{"_index":594,"title":{},"body":{"controllers/StartScreenController.html":{}}}],["setplayer(name",{"_index":588,"title":{},"body":{"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{}}}],["setscoreprofilezone",{"_index":300,"title":{},"body":{"injectables/GameService.html":{}}}],["setup",{"_index":373,"title":{},"body":{"interfaces/IScreen.html":{}}}],["setzone",{"_index":301,"title":{},"body":{"injectables/GameService.html":{},"interfaces/IScreen.html":{}}}],["setzone(zonetype",{"_index":311,"title":{},"body":{"injectables/GameService.html":{},"interfaces/IScreen.html":{}}}],["shape",{"_index":54,"title":{"entities/Shape.html":{}},"body":{"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"modules/GameModule.html":{},"interfaces/IShape.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"coverage.html":{}}}],["shape's",{"_index":387,"title":{},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{}}}],["shape_color",{"_index":530,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["shape_color_hex",{"_index":531,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["shape_color_rgb",{"_index":532,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["shapeconstants",{"_index":82,"title":{"classes/ShapeConstants.html":{}},"body":{"injectables/BlockGeneratorService.html":{},"classes/ShapeConstants.html":{},"coverage.html":{}}}],["shapeconstants.height_square",{"_index":95,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["shapeconstants.shape_color.blue",{"_index":94,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["shapeconstants.shapetype.square",{"_index":93,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["shapeconstants.width_square",{"_index":96,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["shaperepository",{"_index":71,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["shapes",{"_index":382,"title":{},"body":{"interfaces/IShape.html":{}}}],["shapetype",{"_index":533,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["show",{"_index":496,"title":{},"body":{"injectables/ScoreZone.html":{},"injectables/StartScreenService.html":{}}}],["showdetails",{"_index":491,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["showinstructions",{"_index":601,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["showlevel",{"_index":492,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["shows",{"_index":439,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{},"injectables/ScoreZone.html":{}}}],["side",{"_index":546,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["slow",{"_index":211,"title":{},"body":{"classes/GameConstants.html":{}}}],["slowest",{"_index":215,"title":{},"body":{"classes/GameConstants.html":{}}}],["sound",{"_index":267,"title":{},"body":{"classes/GameConstants.html":{}}}],["sound_volume",{"_index":148,"title":{},"body":{"classes/GameConstants.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/BlockGeneratorModule.html":{},"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"modules/NextBlockGeneratorModule.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"classes/PlayerConstants.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{}}}],["spacebar",{"_index":229,"title":{},"body":{"classes/GameConstants.html":{}}}],["speed",{"_index":193,"title":{},"body":{"classes/GameConstants.html":{}}}],["square",{"_index":576,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["src/.../main.ts",{"_index":698,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/abstract/screen.abstract",{"_index":318,"title":{},"body":{"injectables/GameService.html":{}}}],["src/abstract/screen.abstract.ts",{"_index":371,"title":{},"body":{"interfaces/IScreen.html":{},"coverage.html":{}}}],["src/abstract/screen.abstract.ts:30",{"_index":376,"title":{},"body":{"interfaces/IScreen.html":{}}}],["src/abstract/screen.abstract.ts:36",{"_index":372,"title":{},"body":{"interfaces/IScreen.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":43,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":44,"title":{},"body":{"injectables/AppService.html":{}}}],["src/constants/game.constants",{"_index":79,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/GameService.html":{}}}],["src/constants/game.constants.ts",{"_index":109,"title":{},"body":{"classes/GameConstants.html":{},"coverage.html":{}}}],["src/constants/game.constants.ts:108",{"_index":234,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:116",{"_index":254,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:123",{"_index":266,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:131",{"_index":258,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:139",{"_index":244,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:14",{"_index":224,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:146",{"_index":241,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:154",{"_index":230,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:163",{"_index":251,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:172",{"_index":175,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:174",{"_index":265,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:175",{"_index":264,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:21",{"_index":180,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:29",{"_index":184,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:37",{"_index":205,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:44",{"_index":192,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:51",{"_index":208,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:52",{"_index":207,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:53",{"_index":197,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:54",{"_index":210,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:55",{"_index":199,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:56",{"_index":218,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:57",{"_index":222,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:58",{"_index":214,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:59",{"_index":202,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:60",{"_index":216,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:61",{"_index":212,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:62",{"_index":201,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:63",{"_index":204,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:64",{"_index":198,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:65",{"_index":223,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:66",{"_index":220,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:73",{"_index":161,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:85",{"_index":274,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/game.constants.ts:97",{"_index":171,"title":{},"body":{"classes/GameConstants.html":{}}}],["src/constants/player.constants.ts",{"_index":465,"title":{},"body":{"classes/PlayerConstants.html":{},"coverage.html":{}}}],["src/constants/shape.constants.ts",{"_index":527,"title":{},"body":{"classes/ShapeConstants.html":{},"coverage.html":{}}}],["src/constants/shape.constants.ts:17",{"_index":536,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["src/constants/shape.constants.ts:18",{"_index":584,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["src/constants/shape.constants.ts:25",{"_index":544,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["src/constants/shape.constants.ts:37",{"_index":557,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["src/constants/shape.constants.ts:54",{"_index":574,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["src/constants/shape.constants.ts:72",{"_index":565,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["src/constants/shape.constants.ts:8",{"_index":582,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["src/controller/startscreen.controller.ts",{"_index":586,"title":{},"body":{"controllers/StartScreenController.html":{},"coverage.html":{}}}],["src/controller/startscreen.controller.ts:10",{"_index":590,"title":{},"body":{"controllers/StartScreenController.html":{}}}],["src/interface/shape.interface.ts",{"_index":381,"title":{},"body":{"interfaces/IShape.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":664,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/model/level.entity",{"_index":284,"title":{},"body":{"modules/GameModule.html":{}}}],["src/model/level.entity.ts",{"_index":398,"title":{},"body":{"entities/Level.html":{},"coverage.html":{}}}],["src/model/level.entity.ts:18",{"_index":401,"title":{},"body":{"entities/Level.html":{}}}],["src/model/level.entity.ts:27",{"_index":404,"title":{},"body":{"entities/Level.html":{}}}],["src/model/music.entity.ts",{"_index":406,"title":{},"body":{"entities/Music.html":{},"coverage.html":{}}}],["src/model/music.entity.ts:18",{"_index":414,"title":{},"body":{"entities/Music.html":{}}}],["src/model/music.entity.ts:26",{"_index":415,"title":{},"body":{"entities/Music.html":{}}}],["src/model/music.entity.ts:34",{"_index":412,"title":{},"body":{"entities/Music.html":{}}}],["src/model/music.entity.ts:42",{"_index":410,"title":{},"body":{"entities/Music.html":{}}}],["src/model/music.entity.ts:50",{"_index":418,"title":{},"body":{"entities/Music.html":{}}}],["src/model/player.entity",{"_index":286,"title":{},"body":{"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/ScoreZoneModule.html":{},"controllers/StartScreenController.html":{},"modules/ZonefactoryModule.html":{}}}],["src/model/player.entity.ts",{"_index":447,"title":{},"body":{"entities/Player.html":{},"coverage.html":{}}}],["src/model/player.entity.ts:21",{"_index":453,"title":{},"body":{"entities/Player.html":{}}}],["src/model/player.entity.ts:29",{"_index":460,"title":{},"body":{"entities/Player.html":{}}}],["src/model/player.entity.ts:37",{"_index":456,"title":{},"body":{"entities/Player.html":{}}}],["src/model/player.entity.ts:45",{"_index":452,"title":{},"body":{"entities/Player.html":{}}}],["src/model/player.entity.ts:54",{"_index":458,"title":{},"body":{"entities/Player.html":{}}}],["src/model/score.entity",{"_index":287,"title":{},"body":{"modules/GameModule.html":{}}}],["src/model/score.entity.ts",{"_index":477,"title":{},"body":{"entities/Score.html":{},"coverage.html":{}}}],["src/model/score.entity.ts:19",{"_index":483,"title":{},"body":{"entities/Score.html":{}}}],["src/model/score.entity.ts:28",{"_index":485,"title":{},"body":{"entities/Score.html":{}}}],["src/model/score.entity.ts:37",{"_index":479,"title":{},"body":{"entities/Score.html":{}}}],["src/model/shape.entity",{"_index":80,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"modules/GameModule.html":{},"injectables/NextBlockGeneratorService.html":{}}}],["src/model/shape.entity.ts",{"_index":510,"title":{},"body":{"entities/Shape.html":{},"coverage.html":{}}}],["src/model/shape.entity.ts:43",{"_index":514,"title":{},"body":{"entities/Shape.html":{}}}],["src/model/shape.entity.ts:51",{"_index":515,"title":{},"body":{"entities/Shape.html":{}}}],["src/model/shape.entity.ts:59",{"_index":512,"title":{},"body":{"entities/Shape.html":{}}}],["src/model/shape.entity.ts:67",{"_index":517,"title":{},"body":{"entities/Shape.html":{}}}],["src/model/shape.entity.ts:75",{"_index":513,"title":{},"body":{"entities/Shape.html":{}}}],["src/model/shape.entity.ts:83",{"_index":518,"title":{},"body":{"entities/Shape.html":{}}}],["src/model/shape.entity.ts:91",{"_index":519,"title":{},"body":{"entities/Shape.html":{}}}],["src/model/shape.entity.ts:99",{"_index":516,"title":{},"body":{"entities/Shape.html":{}}}],["src/model/zone.entity",{"_index":288,"title":{},"body":{"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"interfaces/IScreen.html":{},"modules/ScoreZoneModule.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{}}}],["src/model/zone.entity.ts",{"_index":634,"title":{},"body":{"entities/Zone.html":{},"coverage.html":{}}}],["src/model/zone.entity.ts:19",{"_index":638,"title":{},"body":{"entities/Zone.html":{}}}],["src/model/zone.entity.ts:20",{"_index":636,"title":{},"body":{"entities/Zone.html":{}}}],["src/model/zone.entity.ts:21",{"_index":637,"title":{},"body":{"entities/Zone.html":{}}}],["src/model/zone.entity.ts:22",{"_index":635,"title":{},"body":{"entities/Zone.html":{}}}],["src/module/blockgenerator.module.ts",{"_index":51,"title":{},"body":{"modules/BlockGeneratorModule.html":{}}}],["src/module/game.module.ts",{"_index":283,"title":{},"body":{"modules/GameModule.html":{}}}],["src/module/gamezone.module.ts",{"_index":346,"title":{},"body":{"modules/GameZone.html":{}}}],["src/module/holdzone.module.ts",{"_index":367,"title":{},"body":{"modules/HoldZoneModule.html":{}}}],["src/module/nextblockgenerator.module.ts",{"_index":427,"title":{},"body":{"modules/NextBlockGeneratorModule.html":{}}}],["src/module/player.module.ts",{"_index":472,"title":{},"body":{"modules/PlayerModule.html":{}}}],["src/module/scorezone.module.ts",{"_index":508,"title":{},"body":{"modules/ScoreZoneModule.html":{}}}],["src/module/zonefactory.module.ts",{"_index":651,"title":{},"body":{"modules/ZonefactoryModule.html":{}}}],["src/service/blockgenerator.service",{"_index":428,"title":{},"body":{"modules/NextBlockGeneratorModule.html":{}}}],["src/service/blockgenerator.service.ts",{"_index":58,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"coverage.html":{}}}],["src/service/blockgenerator.service.ts:13",{"_index":72,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["src/service/blockgenerator.service.ts:30",{"_index":74,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["src/service/blockgenerator.service.ts:33",{"_index":75,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["src/service/blockgenerator.service.ts:8",{"_index":66,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["src/service/game.service.ts",{"_index":292,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["src/service/game.service.ts:104",{"_index":309,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:119",{"_index":304,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:14",{"_index":303,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:16",{"_index":315,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:17",{"_index":316,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:18",{"_index":314,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:29",{"_index":312,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:43",{"_index":305,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:59",{"_index":307,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:74",{"_index":308,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/game.service.ts:89",{"_index":310,"title":{},"body":{"injectables/GameService.html":{}}}],["src/service/gamezone.service.ts",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["src/service/holdzone.service",{"_index":368,"title":{},"body":{"modules/HoldZoneModule.html":{}}}],["src/service/holdzone.service.ts",{"_index":352,"title":{},"body":{"injectables/HoldZone.html":{},"coverage.html":{}}}],["src/service/holdzone.service.ts:13",{"_index":357,"title":{},"body":{"injectables/HoldZone.html":{}}}],["src/service/holdzone.service.ts:22",{"_index":359,"title":{},"body":{"injectables/HoldZone.html":{}}}],["src/service/holdzone.service.ts:5",{"_index":356,"title":{},"body":{"injectables/HoldZone.html":{}}}],["src/service/nextblockzone.service",{"_index":289,"title":{},"body":{"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/ScoreZoneModule.html":{},"injectables/StartScreenService.html":{},"modules/ZonefactoryModule.html":{}}}],["src/service/nextblockzone.service.ts",{"_index":429,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{},"coverage.html":{}}}],["src/service/nextblockzone.service.ts:13",{"_index":435,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["src/service/nextblockzone.service.ts:26",{"_index":438,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["src/service/nextblockzone.service.ts:30",{"_index":441,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["src/service/player.service.ts",{"_index":475,"title":{},"body":{"injectables/PlayerService.html":{},"coverage.html":{}}}],["src/service/player.service.ts:5",{"_index":476,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/service/scorezone.service",{"_index":509,"title":{},"body":{"modules/ScoreZoneModule.html":{}}}],["src/service/scorezone.service.ts",{"_index":490,"title":{},"body":{"injectables/ScoreZone.html":{},"coverage.html":{}}}],["src/service/scorezone.service.ts:14",{"_index":494,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["src/service/scorezone.service.ts:23",{"_index":495,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["src/service/scorezone.service.ts:32",{"_index":499,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["src/service/scorezone.service.ts:6",{"_index":493,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["src/service/startscreen.service.ts",{"_index":596,"title":{},"body":{"injectables/StartScreenService.html":{},"coverage.html":{}}}],["src/service/startscreen.service.ts:16",{"_index":604,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["src/service/startscreen.service.ts:30",{"_index":611,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["src/service/startscreen.service.ts:42",{"_index":613,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["src/service/startscreen.service.ts:49",{"_index":606,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["src/service/startscreen.service.ts:60",{"_index":614,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["src/service/startscreen.service.ts:69",{"_index":615,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["src/service/startscreen.service.ts:80",{"_index":607,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["src/service/zonefactory.service",{"_index":347,"title":{},"body":{"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{}}}],["src/service/zonefactory.service.ts",{"_index":642,"title":{},"body":{"injectables/ZoneFactoryService.html":{},"coverage.html":{}}}],["src/service/zonefactory.service.ts:11",{"_index":645,"title":{},"body":{"injectables/ZoneFactoryService.html":{}}}],["src/service/zonefactory.service.ts:19",{"_index":646,"title":{},"body":{"injectables/ZoneFactoryService.html":{}}}],["stack",{"_index":431,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["start",{"_index":154,"title":{},"body":{"classes/GameConstants.html":{},"injectables/GameService.html":{},"injectables/StartScreenService.html":{}}}],["startgame",{"_index":602,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["startrolling",{"_index":62,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["startscreen",{"_index":597,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["startscreencontroller",{"_index":585,"title":{"controllers/StartScreenController.html":{}},"body":{"controllers/StartScreenController.html":{},"coverage.html":{}}}],["startscreenservice",{"_index":592,"title":{"injectables/StartScreenService.html":{}},"body":{"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"coverage.html":{},"index.html":{}}}],["state",{"_index":162,"title":{},"body":{"classes/GameConstants.html":{}}}],["statements",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":114,"title":{},"body":{"classes/GameConstants.html":{},"classes/ShapeConstants.html":{}}}],["stopped",{"_index":164,"title":{},"body":{"classes/GameConstants.html":{}}}],["stress",{"_index":419,"title":{},"body":{"entities/Music.html":{}}}],["stresslevel",{"_index":409,"title":{},"body":{"entities/Music.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/GameConstants.html":{},"injectables/GameService.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Music.html":{},"entities/Player.html":{},"injectables/PlayerService.html":{},"entities/Shape.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{}}}],["style",{"_index":172,"title":{},"body":{"classes/GameConstants.html":{}}}],["support",{"_index":703,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":704,"title":{},"body":{"modules.html":{}}}],["t",{"_index":579,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["table",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":678,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":187,"title":{},"body":{"classes/GameConstants.html":{}}}],["tells",{"_index":545,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["tetramino",{"_index":583,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["tetris",{"_index":227,"title":{},"body":{"classes/GameConstants.html":{},"interfaces/IShape.html":{}}}],["text",{"_index":232,"title":{},"body":{"classes/GameConstants.html":{}}}],["thank",{"_index":633,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.backgroundcolor",{"_index":641,"title":{},"body":{"entities/Zone.html":{}}}],["this.blockgeneratorservice.generateblocks",{"_index":444,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["this.blockgeneratorservice.startrolling",{"_index":629,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["this.color",{"_index":522,"title":{},"body":{"entities/Shape.html":{}}}],["this.confirminstructions",{"_index":626,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["this.deniedpopup",{"_index":627,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["this.gameservice.setallzones",{"_index":628,"title":{},"body":{"injectables/StartScreenService.html":{},"injectables/ZoneFactoryService.html":{}}}],["this.gameservice.setholdzone",{"_index":361,"title":{},"body":{"injectables/HoldZone.html":{}}}],["this.gameservice.setscoreprofilezone",{"_index":500,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["this.generateblocks",{"_index":102,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["this.getcurrentgamestate",{"_index":101,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["this.height",{"_index":523,"title":{},"body":{"entities/Shape.html":{},"entities/Zone.html":{}}}],["this.level",{"_index":502,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["this.name",{"_index":463,"title":{},"body":{"entities/Player.html":{}}}],["this.nextblockgeneratorservice.generatestack",{"_index":323,"title":{},"body":{"injectables/GameService.html":{},"injectables/StartScreenService.html":{}}}],["this.onpresshold",{"_index":362,"title":{},"body":{"injectables/HoldZone.html":{}}}],["this.playerrepository.create(new",{"_index":620,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["this.playerrepository.save(user",{"_index":622,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["this.setallzones",{"_index":340,"title":{},"body":{"injectables/GameService.html":{}}}],["this.setgamezone",{"_index":324,"title":{},"body":{"injectables/GameService.html":{}}}],["this.setholdzone",{"_index":325,"title":{},"body":{"injectables/GameService.html":{}}}],["this.setnextzone",{"_index":327,"title":{},"body":{"injectables/GameService.html":{}}}],["this.setscoreprofilezone",{"_index":326,"title":{},"body":{"injectables/GameService.html":{}}}],["this.setzone",{"_index":328,"title":{},"body":{"injectables/GameService.html":{}}}],["this.shaperepository.create",{"_index":91,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["this.shaperepository.save(block",{"_index":99,"title":{},"body":{"injectables/BlockGeneratorService.html":{}}}],["this.showdetails",{"_index":501,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["this.showlevel",{"_index":503,"title":{},"body":{"injectables/ScoreZone.html":{}}}],["this.stack",{"_index":445,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["this.stack.pop",{"_index":446,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["this.stack.push(await",{"_index":443,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["this.startgame",{"_index":623,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["this.startscreenservice.setplayer(name",{"_index":595,"title":{},"body":{"controllers/StartScreenController.html":{}}}],["this.width",{"_index":524,"title":{},"body":{"entities/Shape.html":{},"entities/Zone.html":{}}}],["this.x",{"_index":525,"title":{},"body":{"entities/Shape.html":{}}}],["this.y",{"_index":526,"title":{},"body":{"entities/Shape.html":{}}}],["this.zonetype",{"_index":640,"title":{},"body":{"entities/Zone.html":{}}}],["throw",{"_index":630,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["todo",{"_index":466,"title":{},"body":{"classes/PlayerConstants.html":{}}}],["true",{"_index":455,"title":{},"body":{"entities/Player.html":{}}}],["type",{"_index":69,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"classes/GameConstants.html":{},"injectables/GameService.html":{},"injectables/HoldZone.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Level.html":{},"entities/Music.html":{},"injectables/NextBlockGeneratorService.html":{},"entities/Player.html":{},"entities/Score.html":{},"injectables/ScoreZone.html":{},"entities/Shape.html":{},"classes/ShapeConstants.html":{},"controllers/StartScreenController.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"coverage.html":{}}}],["typeorm",{"_index":81,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Score.html":{},"entities/Shape.html":{},"injectables/StartScreenService.html":{},"entities/Zone.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":52,"title":{},"body":{"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{}}}],["typeormmodule.forfeature([player",{"_index":291,"title":{},"body":{"modules/GameModule.html":{},"modules/PlayerModule.html":{}}}],["typeormmodule.forfeature([shape",{"_index":57,"title":{},"body":{"modules/BlockGeneratorModule.html":{},"modules/NextBlockGeneratorModule.html":{}}}],["typeormmodule.forfeature([zone",{"_index":350,"title":{},"body":{"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{}}}],["unique",{"_index":402,"title":{},"body":{"entities/Level.html":{},"entities/Music.html":{},"entities/Player.html":{},"entities/Score.html":{}}}],["unknown",{"_index":440,"title":{},"body":{"injectables/NextBlockGeneratorService.html":{}}}],["unlicensed",{"_index":709,"title":{},"body":{"properties.html":{}}}],["up",{"_index":188,"title":{},"body":{"classes/GameConstants.html":{}}}],["use",{"_index":245,"title":{},"body":{"classes/GameConstants.html":{}}}],["used",{"_index":389,"title":{},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{}}}],["user",{"_index":619,"title":{},"body":{"injectables/StartScreenService.html":{}}}],["value",{"_index":152,"title":{},"body":{"classes/GameConstants.html":{},"injectables/NextBlockGeneratorService.html":{},"classes/ShapeConstants.html":{}}}],["version",{"_index":706,"title":{},"body":{"properties.html":{}}}],["very",{"_index":219,"title":{},"body":{"classes/GameConstants.html":{}}}],["void",{"_index":76,"title":{},"body":{"injectables/BlockGeneratorService.html":{},"injectables/NextBlockGeneratorService.html":{},"injectables/StartScreenService.html":{}}}],["volume",{"_index":256,"title":{},"body":{"classes/GameConstants.html":{}}}],["welcome",{"_index":226,"title":{},"body":{"classes/GameConstants.html":{}}}],["white",{"_index":556,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["width",{"_index":225,"title":{},"body":{"classes/GameConstants.html":{},"injectables/GameService.html":{},"interfaces/IScreen.html":{},"interfaces/IShape.html":{},"entities/Shape.html":{},"entities/Zone.html":{}}}],["width_square",{"_index":534,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["world",{"_index":46,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":385,"title":{},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{}}}],["y",{"_index":386,"title":{},"body":{"interfaces/IShape.html":{},"entities/Shape.html":{}}}],["yellow",{"_index":551,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["z",{"_index":577,"title":{},"body":{"classes/ShapeConstants.html":{}}}],["zone",{"_index":242,"title":{"entities/Zone.html":{}},"body":{"classes/GameConstants.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"modules/GameZone.html":{},"injectables/HoldZone.html":{},"modules/HoldZoneModule.html":{},"interfaces/IScreen.html":{},"injectables/ScoreZone.html":{},"modules/ScoreZoneModule.html":{},"entities/Zone.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{},"coverage.html":{}}}],["zone(zonetype",{"_index":322,"title":{},"body":{"injectables/GameService.html":{}}}],["zonefactorymodule",{"_index":647,"title":{"modules/ZonefactoryModule.html":{}},"body":{"modules/ZonefactoryModule.html":{},"index.html":{},"modules.html":{}}}],["zonefactoryservice",{"_index":345,"title":{"injectables/ZoneFactoryService.html":{}},"body":{"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/ScoreZoneModule.html":{},"injectables/ZoneFactoryService.html":{},"modules/ZonefactoryModule.html":{},"coverage.html":{},"index.html":{}}}],["zones",{"_index":149,"title":{},"body":{"classes/GameConstants.html":{},"injectables/GameService.html":{},"interfaces/IScreen.html":{}}}],["zonetype",{"_index":313,"title":{},"body":{"injectables/GameService.html":{},"interfaces/IScreen.html":{},"entities/Zone.html":{}}}],["zoom",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockGeneratorModule.html":{},"modules/GameModule.html":{},"modules/GameZone.html":{},"modules/HoldZoneModule.html":{},"modules/NextBlockGeneratorModule.html":{},"modules/PlayerModule.html":{},"modules/ScoreZoneModule.html":{},"modules/ZonefactoryModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockGeneratorModule.html":{"url":"modules/BlockGeneratorModule.html","title":"module - BlockGeneratorModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockGeneratorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BlockGeneratorModule\n\n\n\ncluster_BlockGeneratorModule_providers\n\n\n\n\nBlockGeneratorService\n\nBlockGeneratorService\n\n\n\nBlockGeneratorModule\n\nBlockGeneratorModule\n\nBlockGeneratorModule -->\n\nBlockGeneratorService->BlockGeneratorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/blockgenerator.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BlockGeneratorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Shape } from './../model/shape.entity';\nimport { BlockGeneratorService } from './../service/blockgenerator.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Shape])],\n  providers: [BlockGeneratorService],\n  controllers: [],\n})\nexport class BlockGeneratorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlockGeneratorService.html":{"url":"injectables/BlockGeneratorService.html","title":"injectable - BlockGeneratorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BlockGeneratorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/blockgenerator.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateBlocks\n                            \n                            \n                                getCurrentGameState\n                            \n                            \n                                startRolling\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(shapeRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/service/blockgenerator.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shapeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateBlocks\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateBlocks()\n                \n            \n\n\n            \n                \n                    Defined in src/service/blockgenerator.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentGameState\n                        \n                    \n                \n            \n            \n                \ngetCurrentGameState()\n                \n            \n\n\n            \n                \n                    Defined in src/service/blockgenerator.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startRolling\n                        \n                    \n                \n            \n            \n                \nstartRolling()\n                \n            \n\n\n            \n                \n                    Defined in src/service/blockgenerator.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { GameConstants } from 'src/constants/game.constants';\nimport { Shape } from 'src/model/shape.entity';\nimport { Repository } from 'typeorm';\nimport { ShapeConstants } from './../constants/shape.constants';\n@Injectable()\nexport class BlockGeneratorService {\n  constructor(\n    @InjectRepository(Shape)\n    private shapeRepository: Repository,\n  ) {}\n  async generateBlocks(): Promise {\n    console.log('Generating Random blocks');\n    const block = this.shapeRepository.create(\n      new Shape(\n        ShapeConstants.SHAPETYPE.SQUARE,\n        ShapeConstants.SHAPE_COLOR.BLUE,\n        ShapeConstants.HEIGHT_SQUARE,\n        ShapeConstants.WIDTH_SQUARE,\n        0,\n        0,\n      ),\n    );\n    await this.shapeRepository.save(block);\n\n    return block;\n  }\n\n  getCurrentGameState() {\n    return GameConstants.enumGameState.GAME_STATE_PLAY;\n  }\n  startRolling() {\n    if (\n      GameConstants.enumGameState.GAME_STATE_PLAY === this.getCurrentGameState()\n    ) {\n      this.generateBlocks();\n    } else if (GameConstants.enumGameState.GAME_STATE_PAUSE) {\n      console.log('Game is paused');\n    } else if (\n      GameConstants.enumGameState.GAME_STATE_END === this.getCurrentGameState()\n    ) {\n      console.log('Game Over');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameConstants.html":{"url":"classes/GameConstants.html","title":"class - GameConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/constants/game.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Game Constants (Constants for the game)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                enumGameState\n                            \n                            \n                                    Static\n                                font\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_BACKGROUND_COLOR\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_HEIGHT\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_DECREASE\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_DEFAULT\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_DEFAULT_STRING\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_FAST\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_FAST_STRING\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_FASTEST\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_FASTEST_STRING\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_INCREASE\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_MAX\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_MIN\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_SLOW\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_SLOW_STRING\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_SLOWEST\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_SLOWEST_STRING\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_VERY_FAST\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_VERY_FAST_STRING\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_VERY_SLOW\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_SPEED_VERY_SLOW_STRING\n                            \n                            \n                                    Static\n                                    Readonly\n                                GAME_WIDTH\n                            \n                            \n                                    Static\n                                    Readonly\n                                GREETING_TEXST\n                            \n                            \n                                    Static\n                                HOLD_KEY\n                            \n                            \n                                    Static\n                                    Readonly\n                                HOLD_ZONE_HEIGHT\n                            \n                            \n                                    Static\n                                    Readonly\n                                HOLD_ZONE_WIDTH\n                            \n                            \n                                    Static\n                                    Readonly\n                                INSTRUCTIONS_TEXT\n                            \n                            \n                                    Static\n                                    Readonly\n                                MUSIC_VOLUME\n                            \n                            \n                                    Static\n                                    Readonly\n                                POINTS_FOR_LEVEL_CHANGE\n                            \n                            \n                                    Static\n                                    Readonly\n                                SCORE_PROFILE_ZONE_HEIGHT\n                            \n                            \n                                    Static\n                                    Readonly\n                                SCORE_PROFILE_ZONE_WIDTH\n                            \n                            \n                                    Static\n                                    Readonly\n                                SOUND_VOLUME\n                            \n                            \n                                    Static\n                                    Readonly\n                                ZONES\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        enumGameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    GAME_STATE_START: 'start',\n    GAME_STATE_PLAY: 'play',\n    GAME_STATE_PAUSE: 'pause',\n    GAME_STATE_END: 'end',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:73\n                        \n                    \n\n            \n                \n                    State of the game (running, paused, stopped)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        font\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    font: '16px Arial',\n    fill: '#ffffff',\n    align: 'center',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:97\n                        \n                    \n\n            \n                \n                    Font style (font-family) for the game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_BACKGROUND_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#000000'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:172\n                        \n                    \n\n            \n                \n                    Game Background Color\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_HEIGHT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:21\n                        \n                    \n\n            \n                \n                    The height of the screen (in blocks)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:29\n                        \n                    \n\n            \n                \n                    The number of rows each blocks takes up (in blocks per second)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_DECREASE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:44\n                        \n                    \n\n            \n                \n                    Speed decrease factor (in blocks per second)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_DEFAULT_STRING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_FAST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_FAST_STRING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'fast'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_FASTEST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_FASTEST_STRING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'fastest'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_INCREASE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:37\n                        \n                    \n\n            \n                \n                    Speed increase factor (in blocks per second)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_MAX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_MIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:51\n                        \n                    \n\n            \n                \n                    Minimum speed (in blocks per second)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_SLOW\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_SLOW_STRING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'slow'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_SLOWEST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_SLOWEST_STRING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'slowest'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_VERY_FAST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2000\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_VERY_FAST_STRING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'very fast'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_VERY_SLOW\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_SPEED_VERY_SLOW_STRING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'very slow'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GAME_WIDTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:14\n                        \n                    \n\n            \n                \n                    The width of the game screen (in blocks)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        GREETING_TEXST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Welcome to Tetris! Press spacebar to start.'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:154\n                        \n                    \n\n            \n                \n                    Greetings Text\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        HOLD_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'H'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:108\n                        \n                    \n\n            \n                \n                    HOLD KEY (key code) input pressed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        HOLD_ZONE_HEIGHT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:146\n                        \n                    \n\n            \n                \n                    Hold zone max height (in block)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        HOLD_ZONE_WIDTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:139\n                        \n                    \n\n            \n                \n                    Hold zone max width (in block)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        INSTRUCTIONS_TEXT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ' Use the arrow keys to move the block.\\n' +\n    ' Use the spacebar to rotate the block.\\n'\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:163\n                        \n                    \n\n            \n                \n                    Instructions Text\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MUSIC_VOLUME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:116\n                        \n                    \n\n            \n                \n                    Music volume (0-1) (default: 0.5)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        POINTS_FOR_LEVEL_CHANGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:131\n                        \n                    \n\n            \n                \n                    Points needed to enter next level\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        SCORE_PROFILE_ZONE_HEIGHT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:175\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        SCORE_PROFILE_ZONE_WIDTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:174\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        SOUND_VOLUME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:123\n                        \n                    \n\n            \n                \n                    Sound volume (0-1) (default: 0.5)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ZONES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    GAME_ZONE: 'game-zone',\n    NEXT_BLOCK_ZONE: 'next-block-zone',\n    SCORE_PROFILE_ZONE: 'score-profile-zone',\n    HOLD_BLOCK_ZONE: 'hold-block-zone',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/constants/game.constants.ts:85\n                        \n                    \n\n            \n                \n                    Zones (Screen zones in the game screen)\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GameConstants {\n  /**\n   * The width of the game screen (in blocks)\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly GAME_WIDTH = 10;\n  /**\n   * The height of the screen (in blocks)\n   * @static\n   * @memberof GameConstants\n   * @type {number}\n   */\n  public static readonly GAME_HEIGHT = 20;\n  /**\n   * The number of rows each blocks takes up (in blocks per second)\n   *\n   * @static\n   * @memberof GameConstants\n   * @type {number}\n   */\n  public static readonly GAME_SPEED = 1000;\n  /**\n   * Speed increase factor (in blocks per second)\n   *\n   * @static\n   * @memberof GameConstants\n   * @type {number}\n   */\n  public static readonly GAME_SPEED_INCREASE = 100;\n  /**\n   * Speed decrease factor (in blocks per second)\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly GAME_SPEED_DECREASE = 100;\n  /**\n   * Minimum speed (in blocks per second)\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly GAME_SPEED_MIN = 100;\n  public static readonly GAME_SPEED_MAX = 1000;\n  public static readonly GAME_SPEED_DEFAULT = 500;\n  public static readonly GAME_SPEED_SLOW = 100;\n  public static readonly GAME_SPEED_FAST = 1000;\n  public static readonly GAME_SPEED_VERY_FAST = 2000;\n  public static readonly GAME_SPEED_VERY_SLOW = 50;\n  public static readonly GAME_SPEED_SLOWEST = 10;\n  public static readonly GAME_SPEED_FASTEST = 1000;\n  public static readonly GAME_SPEED_SLOWEST_STRING = 'slowest';\n  public static readonly GAME_SPEED_SLOW_STRING = 'slow';\n  public static readonly GAME_SPEED_FAST_STRING = 'fast';\n  public static readonly GAME_SPEED_FASTEST_STRING = 'fastest';\n  public static readonly GAME_SPEED_DEFAULT_STRING = 'default';\n  public static readonly GAME_SPEED_VERY_SLOW_STRING = 'very slow';\n  public static readonly GAME_SPEED_VERY_FAST_STRING = 'very fast';\n  /**\n   * State of the game (running, paused, stopped)\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly enumGameState = {\n    GAME_STATE_START: 'start',\n    GAME_STATE_PLAY: 'play',\n    GAME_STATE_PAUSE: 'pause',\n    GAME_STATE_END: 'end',\n  };\n  /**\n   * Zones (Screen zones in the game screen)\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly ZONES = {\n    GAME_ZONE: 'game-zone',\n    NEXT_BLOCK_ZONE: 'next-block-zone',\n    SCORE_PROFILE_ZONE: 'score-profile-zone',\n    HOLD_BLOCK_ZONE: 'hold-block-zone',\n  };\n  /**\n   * Font style (font-family) for the game\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static font = {\n    font: '16px Arial',\n    fill: '#ffffff',\n    align: 'center',\n  };\n  /**\n   * HOLD KEY (key code) input pressed\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static HOLD_KEY = 'H';\n\n  /**\n   * Music volume (0-1) (default: 0.5)\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly MUSIC_VOLUME = 0.5;\n  /**\n   * Sound volume (0-1) (default: 0.5)\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly SOUND_VOLUME = 0.5;\n\n  /**\n   * Points needed to enter next level\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly POINTS_FOR_LEVEL_CHANGE = 1000;\n\n  /**\n   * Hold zone max width (in block)\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly HOLD_ZONE_WIDTH = 4;\n  /**\n   * Hold zone max height (in block)\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly HOLD_ZONE_HEIGHT = 4;\n\n  /**\n   * Greetings Text\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly GREETING_TEXST =\n    'Welcome to Tetris! Press spacebar to start.';\n\n  /**\n   * Instructions Text\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly INSTRUCTIONS_TEXT =\n    ' Use the arrow keys to move the block.\\n' +\n    ' Use the spacebar to rotate the block.\\n';\n  /**\n   * Game Background Color\n   *\n   * @static\n   * @memberof GameConstants\n   */\n  public static readonly GAME_BACKGROUND_COLOR = '#000000';\n\n  public static readonly SCORE_PROFILE_ZONE_WIDTH = 4;\n  public static readonly SCORE_PROFILE_ZONE_HEIGHT = 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GameModule.html":{"url":"modules/GameModule.html","title":"module - GameModule","body":"\n                   \n\n\n\n\n    Modules\n    GameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GameModule\n\n\n\ncluster_GameModule_providers\n\n\n\ncluster_GameModule_imports\n\n\n\n\nGameService\n\nGameService\n\n\n\nGameModule\n\nGameModule\n\nGameModule -->\n\nGameService->GameModule\n\n\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\nNextBlockGeneratorService\n\nNextBlockGeneratorService\n\nGameModule -->\n\nNextBlockGeneratorService->GameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GameService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GameService\n                        \n                        \n                            NextBlockGeneratorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Level } from 'src/model/level.entity';\nimport { Player } from 'src/model/player.entity';\nimport { Score } from 'src/model/score.entity';\nimport { Shape } from 'src/model/shape.entity';\nimport { Zone } from 'src/model/zone.entity';\nimport { NextBlockGeneratorService } from 'src/service/nextblockzone.service';\nimport { GameService } from './../service/game.service';\n\n@Module({\n  imports: [\n    NextBlockGeneratorService,\n    GameService,\n    TypeOrmModule.forFeature([Player, Zone, Shape, Score, Level]),\n  ],\n  providers: [GameService],\n  controllers: [],\n})\nexport class GameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/game.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Game service class for the game module of the game.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backgroundColor\n                            \n                            \n                                height\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                onGameStart\n                            \n                            \n                                setAllZones\n                            \n                            \n                                setGameZone\n                            \n                            \n                                setHoldZone\n                            \n                            \n                                    Private\n                                setNextZone\n                            \n                            \n                                setScoreProfileZone\n                            \n                            \n                                setZone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(nextBlockGeneratorService: NextBlockGeneratorService)\n                    \n                \n                        \n                            \n                                Defined in src/service/game.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nextBlockGeneratorService\n                                                  \n                                                        \n                                                                        NextBlockGeneratorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onGameStart\n                        \n                    \n                \n            \n            \n                \n                    \n                    onGameStart()\n                \n            \n\n\n            \n                \n                    Defined in src/service/game.service.ts:119\n                \n            \n\n\n            \n                \n                    Start the game.\n\n\n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        {any[]}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAllZones\n                        \n                    \n                \n            \n            \n                \nsetAllZones()\n                \n            \n\n\n            \n                \n                    Defined in src/service/game.service.ts:43\n                \n            \n\n\n            \n                \n                    Set all the zones.\n\n\n                    \n                    \n                    \n                        Returns :         Zone[]\n\n                    \n                    \n                        {Zone[]}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGameZone\n                        \n                    \n                \n            \n            \n                \nsetGameZone()\n                \n            \n\n\n            \n                \n                    Defined in src/service/game.service.ts:59\n                \n            \n\n\n            \n                \n                    Set the game zone.\n\n\n                    \n                    \n                    \n                        Returns :         Zone\n\n                    \n                    \n                        {Zone}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHoldZone\n                        \n                    \n                \n            \n            \n                \nsetHoldZone()\n                \n            \n\n\n            \n                \n                    Defined in src/service/game.service.ts:74\n                \n            \n\n\n            \n                \n                    Set the hold zone.\n\n\n                    \n                    \n                    \n                        Returns :         Zone\n\n                    \n                    \n                        {Zone}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setNextZone\n                        \n                    \n                \n            \n            \n                \n                    \n                    setNextZone()\n                \n            \n\n\n            \n                \n                    Defined in src/service/game.service.ts:104\n                \n            \n\n\n            \n                \n                    Start the game.\n\n\n                    \n                    \n                    \n                        Returns :         Zone\n\n                    \n                    \n                        {Zone}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setScoreProfileZone\n                        \n                    \n                \n            \n            \n                \nsetScoreProfileZone()\n                \n            \n\n\n            \n                \n                    Defined in src/service/game.service.ts:89\n                \n            \n\n\n            \n                \n                    Set the score profile zone.\n\n\n                    \n                    \n                    \n                        Returns :         Zone\n\n                    \n                    \n                        {Zone}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setZone\n                        \n                    \n                \n            \n            \n                \nsetZone(zoneType: string, height: number, width: number, backgroundColor: string)\n                \n            \n\n\n            \n                \n                    Defined in src/service/game.service.ts:29\n                \n            \n\n\n            \n                \n                    Set the zone.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    zoneType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    backgroundColor\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Zone\n\n                    \n                    \n                        {Zone}\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        backgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/service/game.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/service/game.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/service/game.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { IScreen } from 'src/abstract/screen.abstract';\nimport { GameConstants } from 'src/constants/game.constants';\nimport { Zone } from 'src/model/zone.entity';\nimport { NextBlockGeneratorService } from './nextblockzone.service';\n/**\n * Game service class for the game module of the game.\n *\n * @export\n * @class GameService\n * @implements {IScreen}\n */\n@Injectable()\nexport class GameService implements IScreen {\n  constructor(private nextBlockGeneratorService: NextBlockGeneratorService) {}\n  height: number;\n  width: number;\n  backgroundColor: string;\n  /**\n   * Set the zone.\n   *\n   * @param {string} zoneType\n   * @param {number} height\n   * @param {number} width\n   * @param {string} backgroundColor\n   * @return {*}  {Zone}\n   * @memberof GameService\n   */\n  setZone(\n    zoneType: string,\n    height: number,\n    width: number,\n    backgroundColor: string,\n  ): Zone {\n    return new Zone(zoneType, height, width, backgroundColor);\n  }\n  /**\n   * Set all the zones.\n   *\n   * @return {*}  {Zone[]}\n   * @memberof GameService\n   */\n  setAllZones(): Zone[] {\n    this.nextBlockGeneratorService.generateStack();\n    return [\n      this.setGameZone(),\n      this.setHoldZone(),\n      this.setScoreProfileZone(),\n      this.setNextZone(),\n    ];\n  }\n\n  /**\n   * Set the game zone.\n   *\n   * @return {*}  {Zone}\n   * @memberof GameService\n   */\n  setGameZone(): Zone {\n    return this.setZone(\n      GameConstants.ZONES.GAME_ZONE,\n      GameConstants.GAME_HEIGHT,\n      GameConstants.GAME_WIDTH,\n      GameConstants.GAME_BACKGROUND_COLOR,\n    );\n  }\n  /**\n   * Set the hold zone.\n   *\n   * @private\n   * @return {*}  {Zone}\n   * @memberof GameService\n   */\n  setHoldZone(): Zone {\n    return this.setZone(\n      GameConstants.ZONES.HOLD_BLOCK_ZONE,\n      GameConstants.HOLD_ZONE_HEIGHT,\n      GameConstants.HOLD_ZONE_WIDTH,\n      GameConstants.GAME_BACKGROUND_COLOR,\n    );\n  }\n  /**\n   * Set the score profile zone.\n   *\n   * @private\n   * @return {*}  {Zone}\n   * @memberof GameService\n   */\n  setScoreProfileZone(): Zone {\n    return this.setZone(\n      GameConstants.ZONES.SCORE_PROFILE_ZONE,\n      GameConstants.SCORE_PROFILE_ZONE_HEIGHT,\n      GameConstants.SCORE_PROFILE_ZONE_WIDTH,\n      GameConstants.GAME_BACKGROUND_COLOR,\n    );\n  }\n  /**\n   * Start the game.\n   *\n   * @private\n   * @return {*}  {Zone}\n   * @memberof GameService\n   */\n  private setNextZone(): Zone {\n    return this.setZone(\n      GameConstants.ZONES.NEXT_BLOCK_ZONE,\n      GameConstants.HOLD_ZONE_HEIGHT,\n      GameConstants.HOLD_ZONE_WIDTH,\n      GameConstants.GAME_BACKGROUND_COLOR,\n    );\n  }\n  /**\n   * Start the game.\n   *\n   * @private\n   * @return {*}  {any[]}\n   * @memberof GameService\n   */\n  private onGameStart(): any[] {\n    return this.setAllZones();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GameZone.html":{"url":"modules/GameZone.html","title":"module - GameZone","body":"\n                   \n\n\n\n\n    Modules\n    GameZone\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GameZone\n\n\n\ncluster_GameZone_providers\n\n\n\ncluster_GameZone_imports\n\n\n\n\nGameService\n\nGameService\n\n\n\nGameZone\n\nGameZone\n\nGameZone -->\n\nGameService->GameZone\n\n\n\n\n\nNextBlockGeneratorService\n\nNextBlockGeneratorService\n\nGameZone -->\n\nNextBlockGeneratorService->GameZone\n\n\n\n\n\nZoneFactoryService\n\nZoneFactoryService\n\nGameZone -->\n\nZoneFactoryService->GameZone\n\n\n\nGameZone -->\n\nZoneFactoryService->GameZone\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/gamezone.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ZoneFactoryService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GameService\n                        \n                        \n                            NextBlockGeneratorService\n                        \n                        \n                            ZoneFactoryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Player } from 'src/model/player.entity';\nimport { Zone } from 'src/model/zone.entity';\nimport { NextBlockGeneratorService } from 'src/service/nextblockzone.service';\nimport { ZoneFactoryService } from 'src/service/zonefactory.service';\nimport { Level } from './../model/level.entity';\nimport { GameService } from './game.service';\n\n@Module({\n  imports: [\n    GameService,\n    TypeOrmModule.forFeature([Zone, Player, Level]),\n    NextBlockGeneratorService,\n    ZoneFactoryService,\n  ],\n  providers: [ZoneFactoryService],\n  controllers: [],\n})\nexport class GameZone {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HoldZone.html":{"url":"injectables/HoldZone.html","title":"injectable - HoldZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HoldZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/holdzone.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateZone\n                            \n                            \n                                onPressHold\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameservice: GameService)\n                    \n                \n                        \n                            \n                                Defined in src/service/holdzone.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameservice\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateZone\n                        \n                    \n                \n            \n            \n                \ngenerateZone()\n                \n            \n\n\n            \n                \n                    Defined in src/service/holdzone.service.ts:13\n                \n            \n\n\n            \n                \n                    Generate game Zone\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPressHold\n                        \n                    \n                \n            \n            \n                \nonPressHold()\n                \n            \n\n\n            \n                \n                    Defined in src/service/holdzone.service.ts:22\n                \n            \n\n\n            \n                \n                    On press of Hold Button\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { GameService } from './game.service';\n\n@Injectable()\nexport class HoldZone {\n  constructor(private gameservice: GameService) {}\n  /**\n   * Generate game Zone\n   *\n   * @return {*}\n   * @memberof HoldZone\n   */\n  generateZone() {\n    return this.gameservice.setHoldZone();\n  }\n  /**\n   * On press of Hold Button\n   *\n   * @return {*}\n   * @memberof HoldZone\n   */\n  onPressHold() {\n    return this.onPressHold();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HoldZoneModule.html":{"url":"modules/HoldZoneModule.html","title":"module - HoldZoneModule","body":"\n                   \n\n\n\n\n    Modules\n    HoldZoneModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HoldZoneModule\n\n\n\ncluster_HoldZoneModule_imports\n\n\n\ncluster_HoldZoneModule_providers\n\n\n\n\nGameService\n\nGameService\n\n\n\nHoldZoneModule\n\nHoldZoneModule\n\nHoldZoneModule -->\n\nGameService->HoldZoneModule\n\n\n\n\n\nNextBlockGeneratorService\n\nNextBlockGeneratorService\n\nHoldZoneModule -->\n\nNextBlockGeneratorService->HoldZoneModule\n\n\n\n\n\nZoneFactoryService\n\nZoneFactoryService\n\nHoldZoneModule -->\n\nZoneFactoryService->HoldZoneModule\n\n\n\n\n\nHoldZone\n\nHoldZone\n\nHoldZoneModule -->\n\nHoldZone->HoldZoneModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/holdzone.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HoldZone\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GameService\n                        \n                        \n                            NextBlockGeneratorService\n                        \n                        \n                            ZoneFactoryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Player } from 'src/model/player.entity';\nimport { Zone } from 'src/model/zone.entity';\nimport { HoldZone } from 'src/service/holdzone.service';\nimport { NextBlockGeneratorService } from 'src/service/nextblockzone.service';\nimport { ZoneFactoryService } from 'src/service/zonefactory.service';\nimport { GameService } from './game.service';\n\n@Module({\n  imports: [\n    GameService,\n    TypeOrmModule.forFeature([Zone, Player]),\n    NextBlockGeneratorService,\n    ZoneFactoryService,\n  ],\n  providers: [HoldZone],\n  controllers: [],\n})\nexport class HoldZoneModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IScreen.html":{"url":"interfaces/IScreen.html","title":"interface - IScreen","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IScreen\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/abstract/screen.abstract.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            backgroundColor\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        setAllZones\n                                    \n                                \n                                \n                                    \n                                        setZone\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setAllZones\n                        \n                    \n                \n            \n            \n                \nsetAllZones()\n                \n            \n\n\n            \n                \n                    Defined in src/abstract/screen.abstract.ts:36\n                \n            \n\n\n            \n                \n                    Setup all the zones on the game console screen\n\n\n                    \n                        Returns :         Zone[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setZone\n                        \n                    \n                \n            \n            \n                \nsetZone(zoneType: any, height: number, width: number, bgColor: string)\n                \n            \n\n\n            \n                \n                    Defined in src/abstract/screen.abstract.ts:30\n                \n            \n\n\n            \n                \n                    Set screen's type according to zone provided\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    zoneType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bgColor\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Zone\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backgroundColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backgroundColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The screen's background color\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Height of the screen zone in blocks\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of the screen zone in blocks\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Zone } from 'src/model/zone.entity';\nexport interface IScreen {\n  /**\n   * Height of the screen zone in blocks\n   *\n   * @type {number}\n   * @memberof IScreen\n   */\n  height: number;\n  /**\n   * Width of the screen zone in blocks\n   *\n   * @type {number}\n   * @memberof IScreen\n   */\n  width: number;\n  /**\n   * The screen's background color\n   *\n   * @type {string}\n   * @memberof IScreen\n   */\n  backgroundColor: string;\n  /**\n   * Set screen's type according to zone provided\n   *\n   * @param {string} zoneType\n   * @memberof IScreen\n   */\n  setZone(zoneType: any, height: number, width: number, bgColor: string): Zone;\n  /**\n   * Setup all the zones on the game console screen\n   *\n   * @memberof IScreen\n   */\n  setAllZones(): Zone[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IShape.html":{"url":"interfaces/IShape.html","title":"interface - IShape","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IShape\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/shape.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Shape interface for block shapes in tetris.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            rotation\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The shape's color.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The shape's height (in blocks). This is the height of the shape.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The shape's identifier. This is used to identify the shape. It is also used to identify the shape in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The shape's name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The shape's rotation (in degrees).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The shape's width (in blocks). This is the width of the shape.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current shape's position in x axis (in blocks).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current shape's position in y axis (in blocks).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IShape {\n  /**\n   * The shape's identifier. This is used to identify the shape. It is also used to identify the shape in the database.\n   *\n   * @type {number}\n   * @memberof IShape\n   */\n  id: number;\n  /**\n   * The shape's name.\n   *\n   * @type {string}\n   * @memberof IShape\n   */\n  name: string;\n  /**\n   * The shape's color.\n   *\n   * @type {string}\n   * @memberof IShape\n   */\n  color: string;\n  /**\n   * The shape's width (in blocks). This is the width of the shape.\n   *\n   * @type {number}\n   * @memberof IShape\n   */\n  width: number;\n  /**\n   * The shape's height (in blocks). This is the height of the shape.\n   *\n   * @type {number}\n   * @memberof IShape\n   */\n  height: number;\n  /**\n   * Current shape's position in x axis (in blocks).\n   *\n   * @type {number}\n   * @memberof IShape\n   */\n  x: number;\n  /**\n   * Current shape's position in y axis (in blocks).\n   *\n   * @type {number}\n   * @memberof IShape\n   */\n  y: number;\n  /**\n   * The shape's rotation (in degrees).\n   *\n   * @type {number}\n   * @memberof IShape\n   */\n  rotation: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Level.html":{"url":"entities/Level.html","title":"entity - Level","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Level\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/level.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The level model\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                id\n                            \n                            \n                                number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/level.entity.ts:18\n                        \n                    \n\n            \n                \n                    Id of the level (unique)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/level.entity.ts:27\n                        \n                    \n\n            \n                \n                    Level of the player (current)\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * The level model\n *\n * @export\n * @class Level\n */\n@Entity('level')\nexport class Level {\n  /**\n   * Id of the level (unique)\n   *\n   * @type {number}\n   * @memberof Level\n   */\n  @PrimaryGeneratedColumn()\n  private id: number;\n\n  /**\n   * Level of the player (current)\n   *\n   * @type {number}\n   * @memberof Level\n   */\n  @Column()\n  number: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Music.html":{"url":"entities/Music.html","title":"entity - Music","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Music\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/music.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The music model\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                artist\n                            \n                            \n                                    Private\n                                fileName\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                name\n                            \n                            \n                                    Private\n                                stressLevel\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        artist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/music.entity.ts:42\n                        \n                    \n\n            \n                \n                    Music's artist\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/music.entity.ts:34\n                        \n                    \n\n            \n                \n                    Path of the music\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/music.entity.ts:18\n                        \n                    \n\n            \n                \n                    Id of the music (unique)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/music.entity.ts:26\n                        \n                    \n\n            \n                \n                    Name of the music\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stressLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, Level => Level.number)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/music.entity.ts:50\n                        \n                    \n\n            \n                \n                    Music's stress level (1-10)\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Level } from './level.entity';\n/**\n * The music model\n *\n * @export\n * @class Music\n */\n@Entity('music')\nexport class Music {\n  /**\n   * Id of the music (unique)\n   *\n   * @type {number}\n   * @memberof Music\n   */\n  @PrimaryGeneratedColumn()\n  private id: number;\n  /**\n   * Name of the music\n   *\n   * @type {string}\n   * @memberof Music\n   */\n  @Column()\n  private name: string;\n  /**\n   * Path of the music\n   *\n   * @type {string}\n   * @memberof Music\n   */\n  @Column()\n  private fileName: string;\n  /**\n   * Music's artist\n   *\n   * @type {string}\n   * @memberof Music\n   */\n  @Column()\n  private artist: string;\n  /**\n   * Music's stress level (1-10)\n   *\n   * @type {number}\n   * @memberof Music\n   */\n  @OneToOne(() => Level, (Level) => Level.number)\n  private stressLevel: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NextBlockGeneratorModule.html":{"url":"modules/NextBlockGeneratorModule.html","title":"module - NextBlockGeneratorModule","body":"\n                   \n\n\n\n\n    Modules\n    NextBlockGeneratorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NextBlockGeneratorModule\n\n\n\ncluster_NextBlockGeneratorModule_providers\n\n\n\ncluster_NextBlockGeneratorModule_imports\n\n\n\n\nBlockGeneratorService\n\nBlockGeneratorService\n\n\n\nNextBlockGeneratorModule\n\nNextBlockGeneratorModule\n\nNextBlockGeneratorModule -->\n\nBlockGeneratorService->NextBlockGeneratorModule\n\n\n\n\n\nNextBlockGeneratorService\n\nNextBlockGeneratorService\n\nNextBlockGeneratorModule -->\n\nNextBlockGeneratorService->NextBlockGeneratorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/nextblockgenerator.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NextBlockGeneratorService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockGeneratorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { BlockGeneratorService } from 'src/service/blockgenerator.service';\nimport { NextBlockGeneratorService } from 'src/service/nextblockzone.service';\nimport { Shape } from './../model/shape.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Shape]), BlockGeneratorService],\n  providers: [NextBlockGeneratorService],\n  controllers: [],\n})\nexport class NextBlockGeneratorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NextBlockGeneratorService.html":{"url":"injectables/NextBlockGeneratorService.html","title":"injectable - NextBlockGeneratorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NextBlockGeneratorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/nextblockzone.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Generates the next block for the game module\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateStack\n                            \n                            \n                                getBlocks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(blockGeneratorService: BlockGeneratorService)\n                    \n                \n                        \n                            \n                                Defined in src/service/nextblockzone.service.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an instance of NextBlockGeneratorService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        blockGeneratorService\n                                                  \n                                                        \n                                                                        BlockGeneratorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateStack\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateStack()\n                \n            \n\n\n            \n                \n                    Defined in src/service/nextblockzone.service.ts:26\n                \n            \n\n\n            \n                \n                    Generates the stack which shows the next block\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBlocks\n                        \n                    \n                \n            \n            \n                \ngetBlocks()\n                \n            \n\n\n            \n                \n                    Defined in src/service/nextblockzone.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        stack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Shape[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/service/nextblockzone.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Shape } from 'src/model/shape.entity';\nimport { BlockGeneratorService } from './blockgenerator.service';\n\n/**\n * Generates the next block for the game module\n *\n * @export\n * @class NextBlockGeneratorService\n */\n@Injectable()\nexport class NextBlockGeneratorService {\n  stack: Shape[] = [];\n  /**\n   * Creates an instance of NextBlockGeneratorService.\n   * @param {BlockGeneratorService} blockGeneratorService\n   * @memberof NextBlockGeneratorService\n   */\n  constructor(private blockGeneratorService: BlockGeneratorService) {}\n  /**\n   * Generates the stack which shows the next block\n   *\n   * @return {*}\n   * @memberof NextBlockGeneratorService\n   */\n  async generateStack() {\n    this.stack.push(await this.blockGeneratorService.generateBlocks());\n    return this.stack;\n  }\n  getBlocks() {\n    this.stack.pop();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Player.html":{"url":"entities/Player.html","title":"entity - Player","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Player\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/player.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The player model\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentLevel\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                lines\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/player.entity.ts:45\n                        \n                    \n\n            \n                \n                    Current level of the player (current) (1-10)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/player.entity.ts:21\n                        \n                    \n\n            \n                \n                    Id of the player (unique)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/player.entity.ts:37\n                        \n                    \n\n            \n                \n                    Is the player active?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lines\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/player.entity.ts:54\n                        \n                    \n\n            \n                \n                    lines cleared by the player (current)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/player.entity.ts:29\n                        \n                    \n\n            \n                \n                    Name of the player\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * The player model\n *\n * @class Player\n */\n@Entity('player')\nexport class Player {\n  constructor(name: string) {\n    this.name = name;\n  }\n\n  /**\n   * Id of the player (unique)\n   *\n   * @type {number}\n   * @memberof Player\n   */\n  @PrimaryGeneratedColumn()\n  id: number;\n  /**\n   * Name of the player\n   *\n   * @type {string}\n   * @memberof Player\n   */\n  @Column()\n  name: string;\n  /**\n   * Is the player active?\n   *\n   * @type {boolean}\n   * @memberof Player\n   */\n  @Column({ default: true })\n  isActive: boolean;\n  /**\n   * Current level of the player (current) (1-10)\n   *\n   * @type {number}\n   * @memberof Player\n   */\n  @Column({ default: 0 })\n  currentLevel: number;\n\n  /**\n   * lines cleared by the player (current)\n   *\n   * @type {number}\n   * @memberof Player\n   */\n  @Column({ default: 0 })\n  lines: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlayerConstants.html":{"url":"classes/PlayerConstants.html","title":"class - PlayerConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlayerConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/constants/player.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Player constants\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PlayerConstants {}\n// TODO: Add constants for player\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlayerModule.html":{"url":"modules/PlayerModule.html","title":"module - PlayerModule","body":"\n                   \n\n\n\n\n    Modules\n    PlayerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PlayerModule\n\n\n\ncluster_PlayerModule_providers\n\n\n\n\nPlayerService\n\nPlayerService\n\n\n\nPlayerModule\n\nPlayerModule\n\nPlayerModule -->\n\nPlayerService->PlayerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/player.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PlayerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Player } from '../model/player.entity';\nimport { PlayerService } from '../service/player.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Player])],\n  providers: [PlayerService],\n  controllers: [],\n})\nexport class PlayerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n\n            \n                \n                    Defined in src/service/player.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PlayerService {\n  private getHello(): string {\n    return 'Hello Player!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Score.html":{"url":"entities/Score.html","title":"entity - Score","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Score\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/score.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The score model (for the score) in the database\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                highScore\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                score\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        highScore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/score.entity.ts:37\n                        \n                    \n\n            \n                \n                    Highscore of the player (highest)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, player => player.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/score.entity.ts:19\n                        \n                    \n\n            \n                \n                    Id of the score (unique) and common with the player\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/score.entity.ts:28\n                        \n                    \n\n            \n                \n                    Score of the player (current)\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToMany } from 'typeorm';\nimport { Player } from './player.entity';\n\n/**\n * The score model (for the score) in the database\n *\n * @export\n * @class Score\n */\n@Entity('score')\nexport class Score {\n  /**\n   * Id of the score (unique) and common with the player\n   *\n   * @type {number}\n   * @memberof Score\n   */\n  @OneToMany(() => Player, (player) => player.id)\n  private id: number;\n\n  /**\n   * Score of the player (current)\n   *\n   * @type {number}\n   * @memberof Score\n   */\n  @Column()\n  private score: number;\n\n  /**\n   * Highscore of the player (highest)\n   *\n   * @type {number}\n   * @memberof Score\n   */\n  @Column()\n  private highScore: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScoreZone.html":{"url":"injectables/ScoreZone.html","title":"injectable - ScoreZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScoreZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/scorezone.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateZone\n                            \n                            \n                                showDetails\n                            \n                            \n                                showLevel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameservice: GameService, level: Level)\n                    \n                \n                        \n                            \n                                Defined in src/service/scorezone.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameservice\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        Level\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateZone\n                        \n                    \n                \n            \n            \n                \ngenerateZone()\n                \n            \n\n\n            \n                \n                    Defined in src/service/scorezone.service.ts:14\n                \n            \n\n\n            \n                \n                    Generate score profile Zone\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDetails\n                        \n                    \n                \n            \n            \n                \nshowDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/service/scorezone.service.ts:23\n                \n            \n\n\n            \n                \n                    Show Details of Player's profile\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLevel\n                        \n                    \n                \n            \n            \n                \nshowLevel()\n                \n            \n\n\n            \n                \n                    Defined in src/service/scorezone.service.ts:32\n                \n            \n\n\n            \n                \n                    Shows the current level of the player\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Level } from './../model/level.entity';\nimport { GameService } from './game.service';\n\n@Injectable()\nexport class ScoreZone {\n  constructor(private gameservice: GameService, private level: Level) {}\n  /**\n   * Generate score profile Zone\n   *\n   * @return {*}\n   * @memberof ScoreZone\n   */\n  generateZone() {\n    return this.gameservice.setScoreProfileZone();\n  }\n  /**\n   * Show Details of Player's profile\n   *\n   * @return {*}\n   * @memberof ScoreZone\n   */\n  showDetails() {\n    return this.showDetails();\n  }\n  /**\n   * Shows the current level of the player\n   *\n   * @return {*}\n   * @memberof ScoreZone\n   */\n  showLevel() {\n    this.level;\n    return this.showLevel();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScoreZoneModule.html":{"url":"modules/ScoreZoneModule.html","title":"module - ScoreZoneModule","body":"\n                   \n\n\n\n\n    Modules\n    ScoreZoneModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ScoreZoneModule\n\n\n\ncluster_ScoreZoneModule_providers\n\n\n\ncluster_ScoreZoneModule_imports\n\n\n\n\nGameService\n\nGameService\n\n\n\nScoreZoneModule\n\nScoreZoneModule\n\nScoreZoneModule -->\n\nGameService->ScoreZoneModule\n\n\n\n\n\nNextBlockGeneratorService\n\nNextBlockGeneratorService\n\nScoreZoneModule -->\n\nNextBlockGeneratorService->ScoreZoneModule\n\n\n\n\n\nZoneFactoryService\n\nZoneFactoryService\n\nScoreZoneModule -->\n\nZoneFactoryService->ScoreZoneModule\n\n\n\n\n\nScoreZone\n\nScoreZone\n\nScoreZoneModule -->\n\nScoreZone->ScoreZoneModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/scorezone.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ScoreZone\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GameService\n                        \n                        \n                            NextBlockGeneratorService\n                        \n                        \n                            ZoneFactoryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Player } from 'src/model/player.entity';\nimport { Zone } from 'src/model/zone.entity';\nimport { NextBlockGeneratorService } from 'src/service/nextblockzone.service';\nimport { ScoreZone } from 'src/service/scorezone.service';\nimport { ZoneFactoryService } from 'src/service/zonefactory.service';\nimport { Level } from './../model/level.entity';\nimport { GameService } from './game.service';\n\n@Module({\n  imports: [\n    GameService,\n    TypeOrmModule.forFeature([Zone, Player, Level]),\n    NextBlockGeneratorService,\n    ZoneFactoryService,\n  ],\n  providers: [ScoreZone],\n  controllers: [],\n})\nexport class ScoreZoneModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Shape.html":{"url":"entities/Shape.html","title":"entity - Shape","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Shape\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/shape.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The shape model (entity) in the database (database schema)\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                height\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                rotation\n                            \n                            \n                                width\n                            \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/shape.entity.ts:59\n                        \n                    \n\n            \n                \n                    The shape's color.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/shape.entity.ts:75\n                        \n                    \n\n            \n                \n                    The shape's height (in blocks). This is the height of the shape.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/shape.entity.ts:43\n                        \n                    \n\n            \n                \n                    The shape's identifier. This is used to identify the shape. It is also used to identify the shape in the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/shape.entity.ts:51\n                        \n                    \n\n            \n                \n                    The shape's name.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rotation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/shape.entity.ts:99\n                        \n                    \n\n            \n                \n                    The shape's rotation (in degrees).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/shape.entity.ts:67\n                        \n                    \n\n            \n                \n                    The shape's width (in blocks). This is the width of the shape.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/shape.entity.ts:83\n                        \n                    \n\n            \n                \n                    Current shape's position in x axis (in blocks).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/shape.entity.ts:91\n                        \n                    \n\n            \n                \n                    Current shape's position in y axis (in blocks).\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { IShape } from './../interface/shape.interface';\n/**\n * The shape model (entity) in the database (database schema)\n *\n * @export\n * @class Shape\n * @implements {IShape}\n */\n@Entity('shape')\nexport class Shape implements IShape {\n  /**\n   * Creates an instance of Shape.\n   * @param {string} name\n   * @param {string} color\n   * @param {number} width\n   * @param {number} height\n   * @param {number} x\n   * @param {number} y\n   * @memberof Shape\n   */\n  constructor(\n    name: string,\n    color: string,\n    width: number,\n    height: number,\n    x: number,\n    y: number,\n  ) {\n    this.color = color;\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n  }\n  /**\n   * The shape's identifier. This is used to identify the shape. It is also used to identify the shape in the database.\n   *\n   * @type {number}\n   * @memberof Shape\n   */\n  @PrimaryGeneratedColumn()\n  id: number;\n  /**\n   * The shape's name.\n   *\n   * @type {string}\n   * @memberof Shape\n   */\n  @Column()\n  name: string;\n  /**\n   * The shape's color.\n   *\n   * @type {string}\n   * @memberof Shape\n   */\n  @Column()\n  color: string;\n  /**\n   * The shape's width (in blocks). This is the width of the shape.\n   *\n   * @type {number}\n   * @memberof Shape\n   */\n  @Column()\n  width: number;\n  /**\n   * The shape's height (in blocks). This is the height of the shape.\n   *\n   * @type {number}\n   * @memberof Shape\n   */\n  @Column()\n  height: number;\n  /**\n   * Current shape's position in x axis (in blocks).\n   *\n   * @type {number}\n   * @memberof Shape\n   */\n  @Column()\n  x: number;\n  /**\n   * Current shape's position in y axis (in blocks).\n   *\n   * @type {number}\n   * @memberof Shape\n   */\n  @Column()\n  y: number;\n  /**\n   * The shape's rotation (in degrees).\n   *\n   * @type {number}\n   * @memberof Shape\n   */\n  @Column()\n  rotation: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShapeConstants.html":{"url":"classes/ShapeConstants.html","title":"class - ShapeConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShapeConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/constants/shape.constants.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                HEIGHT_SQUARE\n                            \n                            \n                                    Static\n                                    Readonly\n                                ROTATION_SHAPE\n                            \n                            \n                                    Static\n                                    Readonly\n                                SHAPE_COLOR\n                            \n                            \n                                    Static\n                                    Readonly\n                                SHAPE_COLOR_HEX\n                            \n                            \n                                    Static\n                                    Readonly\n                                SHAPE_COLOR_RGB\n                            \n                            \n                                    Static\n                                    Readonly\n                                SHAPETYPE\n                            \n                            \n                                    Static\n                                    Readonly\n                                WIDTH_SQUARE\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        HEIGHT_SQUARE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/constants/shape.constants.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ROTATION_SHAPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    DEGREE_0: 0,\n    DEGREE_90: 90,\n    DEGREE_180: 180,\n    DEGREE_270: 270,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/constants/shape.constants.ts:25\n                        \n                    \n\n            \n                \n                    Tells what side shape is falling on\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        SHAPE_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    RED: 'red',\n    GREEN: 'green',\n    BLUE: 'blue',\n    YELLOW: 'yellow',\n    PURPLE: 'purple',\n    ORANGE: 'orange',\n    PINK: 'pink',\n    BLACK: 'black',\n    WHITE: 'white',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/constants/shape.constants.ts:37\n                        \n                    \n\n            \n                \n                    Shape's color.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        SHAPE_COLOR_HEX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    RED: '#FF0000',\n    GREEN: '#00FF00',\n    BLUE: '#0000FF',\n    YELLOW: '#FFFF00',\n    PURPLE: '#FF00FF',\n    ORANGE: '#FFA500',\n    PINK: '#FFC0CB',\n    BLACK: '#000000',\n    WHITE: '#FFFFFF',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/constants/shape.constants.ts:72\n                        \n                    \n\n            \n                \n                    Color to Hex conversion\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        SHAPE_COLOR_RGB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    RED: 'rgb(255, 0, 0)',\n    GREEN: 'rgb(0, 255, 0)',\n    BLUE: 'rgb(0, 0, 255)',\n    YELLOW: 'rgb(255, 255, 0)',\n    PURPLE: 'rgb(255, 0, 255)',\n    ORANGE: 'rgb(255, 165, 0)',\n    PINK: 'rgb(255, 192, 203)',\n    BLACK: 'rgb(0, 0, 0)',\n    WHITE: 'rgb(255, 255, 255)',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/constants/shape.constants.ts:54\n                        \n                    \n\n            \n                \n                    Color to rbg conversion.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        SHAPETYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    SQUARE: 'square',\n    Z: 'z-shape',\n    L: 'l-shape',\n    T: 't-shape',\n    MIRRORED_L: 'mirrored-l-shape',\n    I: 'i-shape',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/constants/shape.constants.ts:8\n                        \n                    \n\n            \n                \n                    Tells what type of shape is this tetramino\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        WIDTH_SQUARE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/constants/shape.constants.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ShapeConstants {\n  /**\n   * Tells what type of shape is this tetramino\n   *\n   * @static\n   * @memberof ShapeConstants\n   */\n  public static readonly SHAPETYPE = {\n    SQUARE: 'square',\n    Z: 'z-shape',\n    L: 'l-shape',\n    T: 't-shape',\n    MIRRORED_L: 'mirrored-l-shape',\n    I: 'i-shape',\n  };\n\n  static readonly HEIGHT_SQUARE = 2;\n  static readonly WIDTH_SQUARE = 2;\n  /**\n   * Tells what side shape is falling on\n   *\n   * @static\n   * @memberof ShapeConstants\n   */\n  public static readonly ROTATION_SHAPE = {\n    DEGREE_0: 0,\n    DEGREE_90: 90,\n    DEGREE_180: 180,\n    DEGREE_270: 270,\n  };\n  /**\n   * Shape's color.\n   *\n   * @static\n   * @memberof ShapeConstants\n   */\n  public static readonly SHAPE_COLOR = {\n    RED: 'red',\n    GREEN: 'green',\n    BLUE: 'blue',\n    YELLOW: 'yellow',\n    PURPLE: 'purple',\n    ORANGE: 'orange',\n    PINK: 'pink',\n    BLACK: 'black',\n    WHITE: 'white',\n  };\n  /**\n   * Color to rbg conversion.\n   *\n   * @static\n   * @memberof ShapeConstants\n   */\n  public static readonly SHAPE_COLOR_RGB = {\n    RED: 'rgb(255, 0, 0)',\n    GREEN: 'rgb(0, 255, 0)',\n    BLUE: 'rgb(0, 0, 255)',\n    YELLOW: 'rgb(255, 255, 0)',\n    PURPLE: 'rgb(255, 0, 255)',\n    ORANGE: 'rgb(255, 165, 0)',\n    PINK: 'rgb(255, 192, 203)',\n    BLACK: 'rgb(0, 0, 0)',\n    WHITE: 'rgb(255, 255, 255)',\n  };\n\n  /**\n   * Color to Hex conversion\n   *\n   * @static\n   * @memberof ShapeConstants\n   */\n  public static readonly SHAPE_COLOR_HEX = {\n    RED: '#FF0000',\n    GREEN: '#00FF00',\n    BLUE: '#0000FF',\n    YELLOW: '#FFFF00',\n    PURPLE: '#FF00FF',\n    ORANGE: '#FFA500',\n    PINK: '#FFC0CB',\n    BLACK: '#000000',\n    WHITE: '#FFFFFF',\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StartScreenController.html":{"url":"controllers/StartScreenController.html","title":"controller - StartScreenController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StartScreenController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controller/startscreen.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                setPlayer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        setPlayer\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPlayer(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/player')\n                \n            \n\n            \n                \n                    Defined in src/controller/startscreen.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from '@nestjs/common';\nimport { Player } from 'src/model/player.entity';\nimport { StartScreenService } from '../service/startscreen.service';\n\n@Controller()\nexport class StartScreenController {\n  constructor(private readonly startScreenService: StartScreenService) {}\n\n  @Get('/player')\n  private async setPlayer(@Query('name') name: string): Promise {\n    return this.startScreenService.setPlayer(name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StartScreenService.html":{"url":"injectables/StartScreenService.html","title":"injectable - StartScreenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StartScreenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/startscreen.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Startscreen service class for the startscreen module of the game.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ConfirmInstructions\n                            \n                            \n                                    Private\n                                deniedPopup\n                            \n                            \n                                    Private\n                                getGreeting\n                            \n                            \n                                    Async\n                                setPlayer\n                            \n                            \n                                    Private\n                                showInstructions\n                            \n                            \n                                    Private\n                                startGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(playerRepository: Repository, gameService: GameService, blockGeneratorService: BlockGeneratorService, nextBlockGeneratorService: NextBlockGeneratorService)\n                    \n                \n                        \n                            \n                                Defined in src/service/startscreen.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        playerRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blockGeneratorService\n                                                  \n                                                        \n                                                                        BlockGeneratorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nextBlockGeneratorService\n                                                  \n                                                        \n                                                                        NextBlockGeneratorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        ConfirmInstructions\n                        \n                    \n                \n            \n            \n                \n                    \n                    ConfirmInstructions()\n                \n            \n\n\n            \n                \n                    Defined in src/service/startscreen.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        deniedPopup\n                        \n                    \n                \n            \n            \n                \n                    \n                    deniedPopup()\n                \n            \n\n\n            \n                \n                    Defined in src/service/startscreen.service.ts:80\n                \n            \n\n\n            \n                \n                    Show the denied popup.`\n\n\n                    \n                    \n                    \n                        Returns :     Error\n\n                    \n                    \n                        {Error}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getGreeting\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGreeting()\n                \n            \n\n\n            \n                \n                    Defined in src/service/startscreen.service.ts:30\n                \n            \n\n\n            \n                \n                    Get the game mode from the start screen.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setPlayer\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPlayer(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/service/startscreen.service.ts:42\n                \n            \n\n\n            \n                \n                    Set the player details.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        {Promise}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        showInstructions\n                        \n                    \n                \n            \n            \n                \n                    \n                    showInstructions()\n                \n            \n\n\n            \n                \n                    Defined in src/service/startscreen.service.ts:60\n                \n            \n\n\n            \n                \n                    Show instructions from the start screen.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        startGame\n                        \n                    \n                \n            \n            \n                \n                    \n                    startGame()\n                \n            \n\n\n            \n                \n                    Defined in src/service/startscreen.service.ts:69\n                \n            \n\n\n            \n                \n                    Start the game.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        {void}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { NextBlockGeneratorService } from 'src/service/nextblockzone.service';\nimport { Repository } from 'typeorm';\nimport { GameConstants } from './../constants/game.constants';\nimport { Player } from './../model/player.entity';\nimport { BlockGeneratorService } from './blockgenerator.service';\nimport { GameService } from './game.service';\n/**\n * Startscreen service class for the startscreen module of the game.\n *\n * @export\n * @class StartScreenService\n */\n@Injectable()\nexport class StartScreenService {\n  constructor(\n    @InjectRepository(Player)\n    private playerRepository: Repository,\n    private gameService: GameService,\n    private blockGeneratorService: BlockGeneratorService,\n    private nextBlockGeneratorService: NextBlockGeneratorService,\n  ) {}\n  /**\n   * Get the game mode from the start screen.\n   *\n   * @return {*}  {string}\n   * @memberof StartScreenService\n   */\n  private getGreeting(): string {\n    return GameConstants.GREETING_TEXST;\n  }\n\n  /**\n   * Set the player details.\n   *\n   * @private\n   * @param {string} name\n   * @return {*}  {Promise}\n   * @memberof StartScreenService\n   */\n  async setPlayer(name: string): Promise {\n    const user = this.playerRepository.create(new Player(name));\n    await this.playerRepository.save(user);\n    this.startGame();\n    return user;\n  }\n\n  private ConfirmInstructions(): Promise {\n    return new Promise((resolve) => {\n      resolve(true);\n    });\n  }\n  /**\n   * Show instructions from the start screen.\n   *\n   * @return void\n   * @memberof StartScreenService\n   */\n  private showInstructions(): void {\n    this.ConfirmInstructions() ? this.startGame() : this.deniedPopup();\n  }\n  /**\n   * Start the game.\n   *\n   * @return {*}  {void}\n   * @memberof StartScreenService\n   */\n  private startGame(): void {\n    this.gameService.setAllZones();\n    this.blockGeneratorService.startRolling();\n    this.nextBlockGeneratorService.generateStack();\n  }\n  /**\n   * Show the denied popup.`\n   *\n   * @return {*}  {Error}\n   * @memberof StartScreenService\n   */\n  private deniedPopup(): Error {\n    throw new Error(\n      'Please accept the instructions to start the game. Thank you!',\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Zone.html":{"url":"entities/Zone.html","title":"entity - Zone","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Zone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/zone.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Zone type in screen\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backgroundColor\n                            \n                            \n                                    Public\n                                height\n                            \n                            \n                                    Public\n                                width\n                            \n                            \n                                    Public\n                                zoneType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        backgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/model/zone.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/model/zone.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/model/zone.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        zoneType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/model/zone.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity } from 'typeorm';\n\n/**\n * Zone type in screen\n *\n * @export\n * @class Zone\n */\n@Entity('zone')\nexport class Zone {\n  /**\n   * Creates an instance of Zone.\n   * @param {string} zoneType\n   * @param {number} height\n   * @param {number} width\n   * @memberof Zone\n   */\n  constructor(\n    public zoneType: string,\n    public height: number,\n    public width: number,\n    public backgroundColor: string,\n  ) {\n    zoneType = this.zoneType;\n    height = this.height;\n    width = this.width;\n    backgroundColor = this.backgroundColor;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZoneFactoryService.html":{"url":"injectables/ZoneFactoryService.html","title":"injectable - ZoneFactoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ZoneFactoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/zonefactory.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Zone Factory Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateZones\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameservice: GameService)\n                    \n                \n                        \n                            \n                                Defined in src/service/zonefactory.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameservice\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateZones\n                        \n                    \n                \n            \n            \n                \ngenerateZones()\n                \n            \n\n\n            \n                \n                    Defined in src/service/zonefactory.service.ts:19\n                \n            \n\n\n            \n                \n                    Generate Zone\n\n\n                    \n                    \n                    \n                        Returns :         Zone[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Zone } from 'src/model/zone.entity';\nimport { GameService } from './game.service';\n/**\n * Zone Factory Service\n *\n * @export\n * @class ZoneFactoryService\n */\n@Injectable()\nexport class ZoneFactoryService {\n  constructor(private gameservice: GameService) {}\n  /**\n   * Generate Zone\n   *\n   * @return {*}\n   * @memberof ZoneFactoryService\n   */\n  generateZones(): Zone[] {\n    return this.gameservice.setAllZones();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZonefactoryModule.html":{"url":"modules/ZonefactoryModule.html","title":"module - ZonefactoryModule","body":"\n                   \n\n\n\n\n    Modules\n    ZonefactoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ZonefactoryModule\n\n\n\ncluster_ZonefactoryModule_imports\n\n\n\ncluster_ZonefactoryModule_providers\n\n\n\n\nGameService\n\nGameService\n\n\n\nZonefactoryModule\n\nZonefactoryModule\n\nZonefactoryModule -->\n\nGameService->ZonefactoryModule\n\n\n\n\n\nNextBlockGeneratorService\n\nNextBlockGeneratorService\n\nZonefactoryModule -->\n\nNextBlockGeneratorService->ZonefactoryModule\n\n\n\n\n\nZoneFactoryService\n\nZoneFactoryService\n\nZonefactoryModule -->\n\nZoneFactoryService->ZonefactoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/zonefactory.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ZoneFactoryService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GameService\n                        \n                        \n                            NextBlockGeneratorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Player } from 'src/model/player.entity';\nimport { Zone } from 'src/model/zone.entity';\nimport { NextBlockGeneratorService } from 'src/service/nextblockzone.service';\nimport { ZoneFactoryService } from 'src/service/zonefactory.service';\nimport { GameService } from './../service/game.service';\n\n@Module({\n  imports: [\n    GameService,\n    TypeOrmModule.forFeature([Zone, Player]),\n    NextBlockGeneratorService,\n  ],\n  providers: [ZoneFactoryService],\n  controllers: [],\n})\nexport class ZonefactoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/abstract/screen.abstract.ts\n            \n            interface\n            IScreen\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/constants/game.constants.ts\n            \n            class\n            GameConstants\n            \n                52 %\n                (19/36)\n            \n        \n        \n            \n                \n                src/constants/player.constants.ts\n            \n            class\n            PlayerConstants\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants/shape.constants.ts\n            \n            class\n            ShapeConstants\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/controller/startscreen.controller.ts\n            \n            controller\n            StartScreenController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interface/shape.interface.ts\n            \n            interface\n            IShape\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/model/level.entity.ts\n            \n            entity\n            Level\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/model/music.entity.ts\n            \n            entity\n            Music\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/model/player.entity.ts\n            \n            entity\n            Player\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/model/score.entity.ts\n            \n            entity\n            Score\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/model/shape.entity.ts\n            \n            entity\n            Shape\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/model/zone.entity.ts\n            \n            entity\n            Zone\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/service/blockgenerator.service.ts\n            \n            injectable\n            BlockGeneratorService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/service/game.service.ts\n            \n            injectable\n            GameService\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                src/service/gamezone.service.ts\n            \n            injectable\n            GameZone\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/service/holdzone.service.ts\n            \n            injectable\n            HoldZone\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/service/nextblockzone.service.ts\n            \n            injectable\n            NextBlockGeneratorService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/service/player.service.ts\n            \n            injectable\n            PlayerService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/service/scorezone.service.ts\n            \n            injectable\n            ScoreZone\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/service/startscreen.service.ts\n            \n            injectable\n            StartScreenService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/service/zonefactory.service.ts\n            \n            injectable\n            ZoneFactoryService\n            \n                66 %\n                (2/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            mysql2 : ^2.3.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.2.44\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_BlockGeneratorModule\n\n\n\ncluster_BlockGeneratorModule_providers\n\n\n\ncluster_GameModule\n\n\n\ncluster_GameModule_imports\n\n\n\ncluster_GameZone\n\n\n\ncluster_GameZone_imports\n\n\n\ncluster_HoldZoneModule\n\n\n\ncluster_HoldZoneModule_providers\n\n\n\ncluster_NextBlockGeneratorModule\n\n\n\ncluster_PlayerModule\n\n\n\ncluster_PlayerModule_providers\n\n\n\ncluster_ScoreZoneModule\n\n\n\ncluster_ScoreZoneModule_providers\n\n\n\ncluster_ZonefactoryModule\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nBlockGeneratorService\n\nBlockGeneratorService\n\n\n\nBlockGeneratorModule\n\nBlockGeneratorModule\n\nBlockGeneratorModule -->\n\nBlockGeneratorService->BlockGeneratorModule\n\n\n\n\n\nNextBlockGeneratorModule\n\nNextBlockGeneratorModule\n\nNextBlockGeneratorModule -->\n\nBlockGeneratorService->NextBlockGeneratorModule\n\n\n\n\n\nGameService\n\nGameService\n\n\n\nGameModule\n\nGameModule\n\nGameModule -->\n\nGameService->GameModule\n\n\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\nGameZone\n\nGameZone\n\nGameZone -->\n\nGameService->GameZone\n\n\n\n\n\nHoldZoneModule\n\nHoldZoneModule\n\nHoldZoneModule -->\n\nGameService->HoldZoneModule\n\n\n\n\n\nPlayerModule\n\nPlayerModule\n\nPlayerModule -->\n\nGameService->PlayerModule\n\n\n\n\n\nScoreZoneModule\n\nScoreZoneModule\n\nScoreZoneModule -->\n\nGameService->ScoreZoneModule\n\n\n\n\n\nZonefactoryModule\n\nZonefactoryModule\n\nZonefactoryModule -->\n\nGameService->ZonefactoryModule\n\n\n\n\n\nNextBlockGeneratorService\n\nNextBlockGeneratorService\n\nGameModule -->\n\nNextBlockGeneratorService->GameModule\n\n\n\nGameZone -->\n\nNextBlockGeneratorService->GameZone\n\n\n\nHoldZoneModule -->\n\nNextBlockGeneratorService->HoldZoneModule\n\n\n\nNextBlockGeneratorModule -->\n\nNextBlockGeneratorService->NextBlockGeneratorModule\n\n\n\nPlayerModule -->\n\nNextBlockGeneratorService->PlayerModule\n\n\n\nScoreZoneModule -->\n\nNextBlockGeneratorService->ScoreZoneModule\n\n\n\nZonefactoryModule -->\n\nNextBlockGeneratorService->ZonefactoryModule\n\n\n\n\n\nZoneFactoryService\n\nZoneFactoryService\n\nGameZone -->\n\nZoneFactoryService->GameZone\n\n\n\nGameZone -->\n\nZoneFactoryService->GameZone\n\n\n\nHoldZoneModule -->\n\nZoneFactoryService->HoldZoneModule\n\n\n\nScoreZoneModule -->\n\nZoneFactoryService->ScoreZoneModule\n\n\n\nZonefactoryModule -->\n\nZoneFactoryService->ZonefactoryModule\n\n\n\n\n\nHoldZone\n\nHoldZone\n\nHoldZoneModule -->\n\nHoldZone->HoldZoneModule\n\n\n\n\n\nPlayerService\n\nPlayerService\n\nPlayerModule -->\n\nPlayerService->PlayerModule\n\n\n\n\n\nStartScreenService\n\nStartScreenService\n\nPlayerModule -->\n\nStartScreenService->PlayerModule\n\n\n\n\n\nScoreZone\n\nScoreZone\n\nScoreZoneModule -->\n\nScoreZone->ScoreZoneModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockGeneratorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GameZone\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HoldZoneModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NextBlockGeneratorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlayerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlayerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScoreZoneModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZonefactoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
